# Generated by Django 2.2.12 on 2020-06-11 15:12

import django.core.validators
from django.db import migrations, models

import re


# This is a reasonable but not official regex for YouTube video IDs.
# https://webapps.stackexchange.com/a/54448
YOUTUBE_EMBED = re.compile(r'^https:\/\/www\.youtube\.com\/embed\/([\w-]{11})')


def extract_video_id(event, video_url_field, video_id_field):
    video_url = getattr(event, video_url_field)

    if video_url:
        match = YOUTUBE_EMBED.match(video_url)

        if match:
            video_id = match.group(1)
            setattr(event, video_id_field, video_id)
            return True

    return False


def migrate_forwards(apps, schema_editor):
    EventPage = apps.get_model('v1', 'EventPage')

    for event in EventPage.objects.all():
        updated = False

        updated |= extract_video_id(event, 'live_stream_url', 'live_video_id')
        updated |= extract_video_id(event, 'youtube_url', 'archive_video_id')

        if updated:
            event.save(update_fields=['archive_video_id', 'live_video_id'])


def migrate_backwards(apps, schema_editor):
    raise NotImplementedError


class Migration(migrations.Migration):

    dependencies = [
        ('v1', '0221_featured_content'),
    ]

    operations = [
        migrations.AddField(
            model_name='eventpage',
            name='archive_video_id',
            field=models.CharField(blank=True, help_text='Enter the YouTube video ID, which is located at the end of the video URL, after "v=". For example, the video ID for https://www.youtube.com/watch?v=1V0Ax9OIc84 is 1V0Ax9OIc84.', max_length=11, null=True, validators=[django.core.validators.RegexValidator(regex='^[\\w-]{11}$')], verbose_name='YouTube video ID (archive)'),
        ),
        migrations.AddField(
            model_name='eventpage',
            name='live_video_id',
            field=models.CharField(blank=True, help_text='Enter the YouTube video ID, which is located at the end of the video URL, after "v=". For example, the video ID for https://www.youtube.com/watch?v=1V0Ax9OIc84 is 1V0Ax9OIc84.', max_length=11, null=True, validators=[django.core.validators.RegexValidator(regex='^[\\w-]{11}$')], verbose_name='YouTube video ID (live)'),
        ),
        migrations.AlterField(
            model_name='eventpage',
            name='post_event_image_type',
            field=models.CharField(choices=[('placeholder', 'Placeholder image'), ('image', 'Unique image (selected below)')], default='placeholder', help_text='Choose what to display after an event concludes. This will be overridden by embedded video if the "YouTube video ID (archive)" field on the previous tab is populated. If "Unique image" is chosen here, you must select the image you want below. It should be sized to 1416x796.', max_length=16, verbose_name='Post-event image type'),
        ),
        migrations.RunPython(migrate_forwards, migrate_backwards),
        migrations.RemoveField(
            model_name='eventpage',
            name='live_stream_url',
        ),
        migrations.RemoveField(
            model_name='eventpage',
            name='youtube_url',
        ),
    ]
