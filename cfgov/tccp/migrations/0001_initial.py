# Generated by Django 3.2.23 on 2024-02-15 12:35

import django.contrib.postgres.indexes
import django.core.validators
from django.db import migrations, models
import re
import tccp.fields


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CardSurveyData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("institution_name", models.TextField()),
                ("product_name", models.TextField()),
                (
                    "report_date",
                    models.TextField(
                        validators=[
                            django.core.validators.RegexValidator(
                                re.compile("Data as of (\\w+ \\d+)")
                            )
                        ]
                    ),
                ),
                (
                    "availability_of_credit_card_plan",
                    models.TextField(
                        choices=[
                            ("National", "National"),
                            ("Regional", "Regional"),
                            ("One State/Territory", "One State/Territory"),
                        ]
                    ),
                ),
                (
                    "state",
                    models.TextField(
                        blank=True,
                        choices=[
                            ("AA", "AA"),
                            ("AE", "AE"),
                            ("AK", "AK"),
                            ("AL", "AL"),
                            ("AP", "AP"),
                            ("AR", "AR"),
                            ("AS", "AS"),
                            ("AZ", "AZ"),
                            ("CA", "CA"),
                            ("CO", "CO"),
                            ("CT", "CT"),
                            ("DC", "DC"),
                            ("DE", "DE"),
                            ("FL", "FL"),
                            ("FM", "FM"),
                            ("GA", "GA"),
                            ("GU", "GU"),
                            ("HI", "HI"),
                            ("IA", "IA"),
                            ("ID", "ID"),
                            ("IL", "IL"),
                            ("IN", "IN"),
                            ("KS", "KS"),
                            ("KY", "KY"),
                            ("LA", "LA"),
                            ("MA", "MA"),
                            ("MD", "MD"),
                            ("ME", "ME"),
                            ("MH", "MH"),
                            ("MI", "MI"),
                            ("MN", "MN"),
                            ("MO", "MO"),
                            ("MP", "MP"),
                            ("MS", "MS"),
                            ("MT", "MT"),
                            ("NC", "NC"),
                            ("ND", "ND"),
                            ("NE", "NE"),
                            ("NH", "NH"),
                            ("NJ", "NJ"),
                            ("NM", "NM"),
                            ("NV", "NV"),
                            ("NY", "NY"),
                            ("OH", "OH"),
                            ("OK", "OK"),
                            ("OR", "OR"),
                            ("PA", "PA"),
                            ("PR", "PR"),
                            ("PW", "PW"),
                            ("RI", "RI"),
                            ("SC", "SC"),
                            ("SD", "SD"),
                            ("TN", "TN"),
                            ("TX", "TX"),
                            ("UT", "UT"),
                            ("VA", "VA"),
                            ("VI", "VI"),
                            ("VT", "VT"),
                            ("WA", "WA"),
                            ("WI", "WI"),
                            ("WV", "WV"),
                            ("WY", "WY"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "state_multiple",
                    tccp.fields.JSONListField(
                        blank=True,
                        choices=[
                            ("AA", "AA"),
                            ("AE", "AE"),
                            ("AK", "AK"),
                            ("AL", "AL"),
                            ("AP", "AP"),
                            ("AR", "AR"),
                            ("AS", "AS"),
                            ("AZ", "AZ"),
                            ("CA", "CA"),
                            ("CO", "CO"),
                            ("CT", "CT"),
                            ("DC", "DC"),
                            ("DE", "DE"),
                            ("FL", "FL"),
                            ("FM", "FM"),
                            ("GA", "GA"),
                            ("GU", "GU"),
                            ("HI", "HI"),
                            ("IA", "IA"),
                            ("ID", "ID"),
                            ("IL", "IL"),
                            ("IN", "IN"),
                            ("KS", "KS"),
                            ("KY", "KY"),
                            ("LA", "LA"),
                            ("MA", "MA"),
                            ("MD", "MD"),
                            ("ME", "ME"),
                            ("MH", "MH"),
                            ("MI", "MI"),
                            ("MN", "MN"),
                            ("MO", "MO"),
                            ("MP", "MP"),
                            ("MS", "MS"),
                            ("MT", "MT"),
                            ("NC", "NC"),
                            ("ND", "ND"),
                            ("NE", "NE"),
                            ("NH", "NH"),
                            ("NJ", "NJ"),
                            ("NM", "NM"),
                            ("NV", "NV"),
                            ("NY", "NY"),
                            ("OH", "OH"),
                            ("OK", "OK"),
                            ("OR", "OR"),
                            ("PA", "PA"),
                            ("PR", "PR"),
                            ("PW", "PW"),
                            ("RI", "RI"),
                            ("SC", "SC"),
                            ("SD", "SD"),
                            ("TN", "TN"),
                            ("TX", "TX"),
                            ("UT", "UT"),
                            ("VA", "VA"),
                            ("VI", "VI"),
                            ("VT", "VT"),
                            ("WA", "WA"),
                            ("WI", "WI"),
                            ("WV", "WV"),
                            ("WY", "WY"),
                        ],
                        default=list,
                    ),
                ),
                (
                    "pertains_to_specific_counties",
                    tccp.fields.YesNoBooleanField(blank=True, null=True),
                ),
                ("requirements_for_opening", tccp.fields.YesNoBooleanField()),
                (
                    "requirements_for_opening_types",
                    tccp.fields.JSONListField(
                        blank=True,
                        choices=[
                            (
                                "Geographic Restrictions Beyond Place of Residence",
                                "Geographic Restrictions Beyond Place of Residence",
                            ),
                            (
                                "Professional Affiliation",
                                "Professional Affiliation",
                            ),
                            (
                                "Other. Please Describe:",
                                "Other. Please Describe:",
                            ),
                        ],
                        default=list,
                    ),
                ),
                (
                    "geographic_restrictions",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "professional_affiliation",
                    models.TextField(blank=True, null=True),
                ),
                ("other", models.TextField(blank=True, null=True)),
                ("secured_card", tccp.fields.YesNoBooleanField()),
                (
                    "targeted_credit_tiers",
                    tccp.fields.JSONListField(
                        choices=[
                            ("No credit score", "No credit score"),
                            (
                                "Credit score 619 or less",
                                "Credit score 619 or less",
                            ),
                            (
                                "Credit scores from 620 to 719",
                                "Credit scores from 620 to 719",
                            ),
                            (
                                "Credit score of 720 or greater",
                                "Credit score of 720 or greater",
                            ),
                        ],
                        default=list,
                    ),
                ),
                ("purchase_apr_offered", tccp.fields.YesNoBooleanField()),
                (
                    "purchase_apr_vary_by_balance",
                    tccp.fields.YesNoBooleanField(blank=True, null=True),
                ),
                (
                    "purchase_apr_balance_tier1",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "purchase_apr_tier1_from_balance",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "purchase_apr_tier1_to_balance",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "purchase_apr_balance_tier2",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "purchase_apr_tier2_from_balance",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "purchase_apr_tier2_to_balance",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "purchase_apr_balance_tier3",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "purchase_apr_tier3_from_balance",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "purchase_apr_tier3_to_balance",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "purchase_apr_balance_tier4",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "purchase_apr_tier4_from_balance",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "purchase_apr_tier4_to_balance",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "purchase_apr_index",
                    tccp.fields.YesNoBooleanField(blank=True, null=True),
                ),
                (
                    "variable_rate_index",
                    tccp.fields.JSONListField(
                        blank=True,
                        choices=[
                            ("Prime", "Prime"),
                            ("One-month T-bill", "One-month T-bill"),
                            ("Three-month T-bill", "Three-month T-bill"),
                            ("Six-month T-bill", "Six-month T-bill"),
                            ("One-year T-bill", "One-year T-bill"),
                            ("Fed Funds", "Fed Funds"),
                            ("Cost of Funds", "Cost of Funds"),
                            (
                                "Federal Reserve Discount Rate",
                                "Federal Reserve Discount Rate",
                            ),
                            ("Other", "Other"),
                        ],
                        default=list,
                    ),
                ),
                (
                    "index",
                    tccp.fields.JSONListField(
                        blank=True,
                        choices=[("F", "F"), ("V", "V")],
                        default=list,
                        null=True,
                    ),
                ),
                (
                    "purchase_apr_vary_by_credit_tier",
                    tccp.fields.YesNoBooleanField(blank=True, null=True),
                ),
                (
                    "purchase_apr_poor",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "purchase_apr_good",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "purchase_apr_great",
                    models.FloatField(blank=True, null=True),
                ),
                ("purchase_apr_min", models.FloatField(blank=True, null=True)),
                (
                    "purchase_apr_median",
                    models.FloatField(blank=True, null=True),
                ),
                ("purchase_apr_max", models.FloatField(blank=True, null=True)),
                ("introductory_apr_offered", tccp.fields.YesNoBooleanField()),
                (
                    "introductory_apr_vary_by_credit_tier",
                    tccp.fields.YesNoBooleanField(blank=True, null=True),
                ),
                ("intro_apr_poor", models.FloatField(blank=True, null=True)),
                ("intro_apr_good", models.FloatField(blank=True, null=True)),
                ("intro_apr_great", models.FloatField(blank=True, null=True)),
                ("intro_apr_min", models.FloatField(blank=True, null=True)),
                ("intro_apr_median", models.FloatField(blank=True, null=True)),
                ("intro_apr_max", models.FloatField(blank=True, null=True)),
                (
                    "median_length_of_introductory_apr",
                    models.FloatField(blank=True, null=True),
                ),
                ("balance_transfer_offered", tccp.fields.YesNoBooleanField()),
                (
                    "balance_transfer_apr_vary_by_credit_tier",
                    tccp.fields.YesNoBooleanField(blank=True, null=True),
                ),
                (
                    "transfer_apr_poor",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "transfer_apr_good",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "transfer_apr_great",
                    models.FloatField(blank=True, null=True),
                ),
                ("transfer_apr_min", models.FloatField(blank=True, null=True)),
                (
                    "transfer_apr_median",
                    models.FloatField(blank=True, null=True),
                ),
                ("transfer_apr_max", models.FloatField(blank=True, null=True)),
                (
                    "median_length_of_balance_transfer_apr",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "balance_transfer_grace_period",
                    tccp.fields.YesNoBooleanField(blank=True, null=True),
                ),
                ("cash_advance_apr_offered", tccp.fields.YesNoBooleanField()),
                (
                    "cash_advance_apr_vary_by_credit_tier",
                    tccp.fields.YesNoBooleanField(blank=True, null=True),
                ),
                ("advance_apr_poor", models.FloatField(blank=True, null=True)),
                ("advance_apr_good", models.FloatField(blank=True, null=True)),
                (
                    "advance_apr_great",
                    models.FloatField(blank=True, null=True),
                ),
                ("advance_apr_min", models.FloatField(blank=True, null=True)),
                (
                    "advance_apr_median",
                    models.FloatField(blank=True, null=True),
                ),
                ("advance_apr_max", models.FloatField(blank=True, null=True)),
                ("grace_period_offered", tccp.fields.YesNoBooleanField()),
                (
                    "grace_period",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("minimum_finance_charge", tccp.fields.YesNoBooleanField()),
                (
                    "minimum_finance_charge_dollars",
                    tccp.fields.CurrencyField(blank=True, null=True),
                ),
                (
                    "balance_computation_method",
                    tccp.fields.JSONListField(
                        choices=[
                            (
                                "Average daily balance including new purchases",
                                "Average daily balance including new purchases",
                            ),
                            (
                                "Average daily balance excluding new purchases",
                                "Average daily balance excluding new purchases",
                            ),
                            ("Adjusted balance", "Adjusted balance"),
                            ("Previous balance", "Previous balance"),
                            ("Other", "Other"),
                        ],
                        default=list,
                    ),
                ),
                (
                    "balance_computation_method_details",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "periodic_fee_type",
                    tccp.fields.JSONListField(
                        blank=True,
                        choices=[
                            ("Annual", "Annual"),
                            ("Monthly", "Monthly"),
                            ("Weekly", "Weekly"),
                            ("Other", "Other"),
                        ],
                        default=list,
                    ),
                ),
                (
                    "annual_fee",
                    tccp.fields.CurrencyField(blank=True, null=True),
                ),
                (
                    "monthly_fee",
                    tccp.fields.CurrencyField(blank=True, null=True),
                ),
                (
                    "weekly_fee",
                    tccp.fields.CurrencyField(blank=True, null=True),
                ),
                (
                    "other_periodic_fee_name",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "other_periodic_fee_amount",
                    tccp.fields.CurrencyField(blank=True, null=True),
                ),
                (
                    "other_periodic_fee_frequency",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "fee_varies",
                    tccp.fields.YesNoBooleanField(blank=True, null=True),
                ),
                (
                    "periodic_min",
                    tccp.fields.CurrencyField(blank=True, null=True),
                ),
                (
                    "periodic_max",
                    tccp.fields.CurrencyField(blank=True, null=True),
                ),
                ("fee_explanation", models.TextField(blank=True, null=True)),
                ("purchase_transaction_fees", tccp.fields.YesNoBooleanField()),
                (
                    "purchase_transaction_fee_type",
                    tccp.fields.JSONListField(
                        blank=True,
                        choices=[
                            (
                                "1. If you have such a charge, enter the amount of the charge in dollars here:",
                                "1. If you have such a charge, enter the amount of the charge in dollars here:",
                            ),
                            (
                                "2. or if the charge is a percentage of the transaction amount, enter that percentage here",
                                "2. or if the charge is a percentage of the transaction amount, enter that percentage here",
                            ),
                            (
                                "3. If there's a minimum dollar amount, what is it?",
                                "3. If there's a minimum dollar amount, what is it?",
                            ),
                            (
                                "4. If the fee is not a percentage, or a percentage subject to a minimum dollar amount, how do you calculate the fee?",
                                "4. If the fee is not a percentage, or a percentage subject to a minimum dollar amount, how do you calculate the fee?",
                            ),
                        ],
                        default=list,
                    ),
                ),
                (
                    "purchase_transaction_fee_dollars",
                    tccp.fields.CurrencyField(blank=True, null=True),
                ),
                (
                    "purchase_transaction_fee_percentage",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "minimum_purchase_transaction_fee_amount",
                    tccp.fields.CurrencyField(blank=True, null=True),
                ),
                (
                    "purchase_transaction_fee_calculation",
                    models.TextField(blank=True, null=True),
                ),
                ("balance_transfer_fees", tccp.fields.YesNoBooleanField()),
                (
                    "balance_transfer_fee_types",
                    tccp.fields.JSONListField(
                        blank=True,
                        choices=[
                            (
                                "1. If fee is charged in dollars, what is the amount?",
                                "1. If fee is charged in dollars, what is the amount?",
                            ),
                            (
                                "2. If fee is percentage of transaction amount, what is it?",
                                "2. If fee is percentage of transaction amount, what is it?",
                            ),
                            (
                                "3. If there's a minimum dollar amount, what is it?",
                                "3. If there's a minimum dollar amount, what is it?",
                            ),
                            (
                                "4. If the fee is not a percentage, or a percentage subject to a minimum dollar amount, how do you calculate the fee?",
                                "4. If the fee is not a percentage, or a percentage subject to a minimum dollar amount, how do you calculate the fee?",
                            ),
                        ],
                        default=list,
                    ),
                ),
                (
                    "balance_transfer_fee_dollars",
                    tccp.fields.CurrencyField(blank=True, null=True),
                ),
                (
                    "balance_transfer_fee_percentage",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "minimum_balance_transfer_fee_amount",
                    tccp.fields.CurrencyField(blank=True, null=True),
                ),
                (
                    "balance_transfer_fee_calculation",
                    models.TextField(blank=True, null=True),
                ),
                ("cash_advance_fees", tccp.fields.YesNoBooleanField()),
                (
                    "cash_advance_fee_for_each_transaction",
                    tccp.fields.YesNoBooleanField(blank=True, null=True),
                ),
                (
                    "cash_advance_fee_types",
                    tccp.fields.JSONListField(
                        blank=True,
                        choices=[
                            (
                                "1. If the fee is charged in dollars, what is the amount?",
                                "1. If the fee is charged in dollars, what is the amount?",
                            ),
                            (
                                "2. If the fee is a percentage of transaction amount, what is it?",
                                "2. If the fee is a percentage of transaction amount, what is it?",
                            ),
                            (
                                "3. If there's a minimum dollar amount, what is it?",
                                "3. If there's a minimum dollar amount, what is it?",
                            ),
                            (
                                "4. If the fee is not a percentage, or a percentage subject to a minimum dollar amount, how do you calculate the fee?",
                                "4. If the fee is not a percentage, or a percentage subject to a minimum dollar amount, how do you calculate the fee?",
                            ),
                        ],
                        default=list,
                    ),
                ),
                (
                    "cash_advance_fee_dollars",
                    tccp.fields.CurrencyField(blank=True, null=True),
                ),
                (
                    "cash_advance_fee_percentage",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "minimum_cash_advance_fee_amount",
                    tccp.fields.CurrencyField(blank=True, null=True),
                ),
                (
                    "cash_advance_fee_calculation",
                    models.TextField(blank=True, null=True),
                ),
                ("foreign_transaction_fees", tccp.fields.YesNoBooleanField()),
                (
                    "foreign_transaction_fees_types",
                    tccp.fields.JSONListField(
                        blank=True,
                        choices=[
                            (
                                "1. If fee is charged in dollars, what is the amount?",
                                "1. If fee is charged in dollars, what is the amount?",
                            ),
                            (
                                "2. If fee is percentage of transaction amount, what is it?",
                                "2. If fee is percentage of transaction amount, what is it?",
                            ),
                            (
                                "3. If there's a minimum dollar amount, what is it?",
                                "3. If there's a minimum dollar amount, what is it?",
                            ),
                            (
                                "4. If the fee is not a percentage, or a percentage subject to a minimum dollar amount, how do you calculate the fee?",
                                "4. If the fee is not a percentage, or a percentage subject to a minimum dollar amount, how do you calculate the fee?",
                            ),
                        ],
                        default=list,
                    ),
                ),
                (
                    "foreign_transaction_fee_dollars",
                    tccp.fields.CurrencyField(blank=True, null=True),
                ),
                (
                    "foreign_transaction_fee_percentage",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "minimum_foreign_transaction_fee_amount",
                    tccp.fields.CurrencyField(blank=True, null=True),
                ),
                (
                    "foreign_transaction_fee_calculation",
                    models.TextField(blank=True, null=True),
                ),
                ("late_fees", tccp.fields.YesNoBooleanField()),
                (
                    "late_fee_types",
                    tccp.fields.JSONListField(
                        blank=True,
                        choices=[
                            (
                                "1. What is the amount of the first late fee on the account?",
                                "1. What is the amount of the first late fee on the account?",
                            ),
                            (
                                "2. What is the amount of late fees charged within six billing cycles of a previous late fee (repeat late fee)?",
                                "2. What is the amount of late fees charged within six billing cycles of a previous late fee (repeat late fee)?",
                            ),
                            (
                                "3. If you charge late fees that are not fixed dollar amounts, please explain your late fee policy here.",
                                "3. If you charge late fees that are not fixed dollar amounts, please explain your late fee policy here.",
                            ),
                        ],
                        default=list,
                    ),
                ),
                (
                    "late_fee_dollars",
                    tccp.fields.CurrencyField(blank=True, null=True),
                ),
                (
                    "late_fee_six_month_billing_cycle",
                    tccp.fields.CurrencyField(blank=True, null=True),
                ),
                (
                    "late_fee_policy_details",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "fee_varies36",
                    tccp.fields.YesNoBooleanField(blank=True, null=True),
                ),
                (
                    "minimum37",
                    tccp.fields.CurrencyField(blank=True, null=True),
                ),
                (
                    "maximum38",
                    tccp.fields.CurrencyField(blank=True, null=True),
                ),
                ("fee_explanation39", models.TextField(blank=True, null=True)),
                ("over_limit_fees", tccp.fields.YesNoBooleanField()),
                (
                    "over_limit_fee_types",
                    tccp.fields.JSONListField(
                        blank=True,
                        choices=[
                            (
                                "1. What is the amount of the overlimit fee when charged?",
                                "1. What is the amount of the overlimit fee when charged?",
                            ),
                            (
                                "2. If you charge overlimit fees that are not fixed dollar amounts, please explain what overlimit fees you charge here:",
                                "2. If you charge overlimit fees that are not fixed dollar amounts, please explain what overlimit fees you charge here:",
                            ),
                        ],
                        default=list,
                    ),
                ),
                (
                    "over_limit_fee_dollars",
                    tccp.fields.CurrencyField(blank=True, null=True),
                ),
                (
                    "overlimit_fee_detail",
                    models.TextField(blank=True, null=True),
                ),
                ("other_fees", tccp.fields.YesNoBooleanField()),
                (
                    "additional_fees",
                    tccp.fields.YesNoBooleanField(blank=True, null=True),
                ),
                ("other_fee_name", models.TextField(blank=True, null=True)),
                (
                    "other_fee_amount",
                    tccp.fields.CurrencyField(blank=True, null=True),
                ),
                (
                    "other_fee_explanation",
                    models.TextField(blank=True, null=True),
                ),
                ("other_fee_name_2", models.TextField(blank=True, null=True)),
                (
                    "other_fee_amount_2",
                    tccp.fields.CurrencyField(blank=True, null=True),
                ),
                (
                    "other_fee_explanation_2",
                    models.TextField(blank=True, null=True),
                ),
                ("other_fee_name_3", models.TextField(blank=True, null=True)),
                (
                    "other_fee_amount_3",
                    tccp.fields.CurrencyField(blank=True, null=True),
                ),
                (
                    "other_fee_explanation_3",
                    models.TextField(blank=True, null=True),
                ),
                ("other_fee_name_4", models.TextField(blank=True, null=True)),
                (
                    "other_fee_amount_4",
                    tccp.fields.CurrencyField(blank=True, null=True),
                ),
                (
                    "other_fee_explanation_4",
                    models.TextField(blank=True, null=True),
                ),
                ("other_fee_name_5", models.TextField(blank=True, null=True)),
                (
                    "other_fee_amount_5",
                    tccp.fields.CurrencyField(blank=True, null=True),
                ),
                (
                    "other_fee_explanation_5",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "fee_varies56",
                    tccp.fields.YesNoBooleanField(blank=True, null=True),
                ),
                (
                    "minimum57",
                    tccp.fields.CurrencyField(blank=True, null=True),
                ),
                (
                    "maximum58",
                    tccp.fields.CurrencyField(blank=True, null=True),
                ),
                ("fee_explanation59", models.TextField(blank=True, null=True)),
                (
                    "services",
                    tccp.fields.JSONListField(
                        blank=True,
                        choices=[
                            (
                                "Access to Free Credit Scores",
                                "Access to Free Credit Scores",
                            ),
                            (
                                "Automobile rental insurance",
                                "Automobile rental insurance",
                            ),
                            (
                                "Credit card registration",
                                "Credit card registration",
                            ),
                            (
                                "Debt cancellation coverage",
                                "Debt cancellation coverage",
                            ),
                            (
                                "Discounts on purchases of goods and services (non travel related)",
                                "Discounts on purchases of goods and services (non travel related)",
                            ),
                            (
                                "Extension on manufacturer’s warranty",
                                "Extension on manufacturer’s warranty",
                            ),
                            ("Other", "Other"),
                        ],
                        default=list,
                    ),
                ),
                ("other_services", models.TextField(blank=True, null=True)),
                (
                    "rewards",
                    tccp.fields.JSONListField(
                        blank=True,
                        choices=[
                            ("Cashback rewards", "Cashback rewards"),
                            (
                                "Travel-related rewards",
                                "Travel-related rewards",
                            ),
                            ("Other rewards", "Other rewards"),
                        ],
                        default=list,
                    ),
                ),
                ("other_rewards", models.TextField(blank=True, null=True)),
                (
                    "card_features",
                    tccp.fields.JSONListField(
                        blank=True,
                        choices=[
                            ("Contactless Payments", "Contactless Payments"),
                            ("Chip card", "Chip card"),
                            (
                                "Fee-free foreign transactions",
                                "Fee-free foreign transactions",
                            ),
                            (
                                "Mobile wallet provisioning (for example, Apple Pay)",
                                "Mobile wallet provisioning (for example, Apple Pay)",
                            ),
                            ("Other", "Other"),
                        ],
                        default=list,
                    ),
                ),
                (
                    "other_card_features",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "contact_information_types",
                    tccp.fields.JSONListField(
                        blank=True,
                        choices=[("Phone", "Phone"), ("Website", "Website")],
                        default=list,
                    ),
                ),
                (
                    "website_for_consumer",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "telephone_number_for_consumers",
                    models.TextField(blank=True, null=True),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="cardsurveydata",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["targeted_credit_tiers"],
                name="targeted_credit_tiers_idx",
                opclasses=["jsonb_path_ops"],
            ),
        ),
        migrations.RenameField(
            model_name="cardsurveydata",
            old_name="purchase_apr_balance_tier1",
            new_name="purchase_apr_balance_tier_1",
        ),
        migrations.RenameField(
            model_name="cardsurveydata",
            old_name="purchase_apr_balance_tier2",
            new_name="purchase_apr_balance_tier_2",
        ),
        migrations.RenameField(
            model_name="cardsurveydata",
            old_name="purchase_apr_balance_tier3",
            new_name="purchase_apr_balance_tier_3",
        ),
        migrations.RenameField(
            model_name="cardsurveydata",
            old_name="purchase_apr_balance_tier4",
            new_name="purchase_apr_balance_tier_4",
        ),
        migrations.RenameField(
            model_name="cardsurveydata",
            old_name="purchase_apr_tier1_from_balance",
            new_name="purchase_apr_tier_1_from_balance",
        ),
        migrations.RenameField(
            model_name="cardsurveydata",
            old_name="purchase_apr_tier1_to_balance",
            new_name="purchase_apr_tier_1_to_balance",
        ),
        migrations.RenameField(
            model_name="cardsurveydata",
            old_name="purchase_apr_tier2_to_balance",
            new_name="purchase_apr_tier_2_to_balance",
        ),
        migrations.RenameField(
            model_name="cardsurveydata",
            old_name="purchase_apr_tier3_from_balance",
            new_name="purchase_apr_tier_3_from_balance",
        ),
        migrations.RenameField(
            model_name="cardsurveydata",
            old_name="purchase_apr_tier3_to_balance",
            new_name="purchase_apr_tier_3_to_balance",
        ),
        migrations.RenameField(
            model_name="cardsurveydata",
            old_name="purchase_apr_tier4_from_balance",
            new_name="purchase_apr_tier_4_from_balance",
        ),
        migrations.RenameField(
            model_name="cardsurveydata",
            old_name="purchase_apr_tier4_to_balance",
            new_name="purchase_apr_tier_4_to_balance",
        ),
        migrations.AlterField(
            model_name="cardsurveydata",
            name="report_date",
            field=models.DateField(),
        ),
        migrations.AlterField(
            model_name="cardsurveydata",
            name="targeted_credit_tiers",
            field=tccp.fields.JSONListField(
                choices=[
                    ("No credit score", "I don’t have a credit score"),
                    ("Credit score 619 or less", "Less than 619"),
                    ("Credit scores from 620 to 719", "620 - 719"),
                    ("Credit score of 720 or greater", "Greater than 720"),
                ],
                default=list,
            ),
        ),
        migrations.RenameField(
            model_name="cardsurveydata",
            old_name="purchase_apr_tier2_from_balance",
            new_name="purchase_apr_tier_2_from_balance",
        ),
        migrations.AlterField(
            model_name="cardsurveydata",
            name="targeted_credit_tiers",
            field=tccp.fields.JSONListField(
                choices=[
                    ("No credit score", "I don’t have a credit score"),
                    ("Credit score 619 or less", "Less than 619"),
                    ("Credit scores from 620 to 719", "620-719"),
                    ("Credit score of 720 or greater", "Greater than 720"),
                ],
                default=list,
            ),
        ),
    ]
