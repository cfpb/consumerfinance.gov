# Generated by Django 4.2.17 on 2024-12-26 15:59

from django.db import migrations, models
import django.db.migrations.operations.special
import django.db.models.deletion
import wagtail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailredirects', '0008_add_verbose_name_plural'),
        ('wagtailforms', '0004_add_verbose_name_plural'),
        ('wagtailinventory', '0003_pageblock_id_bigautofield'),
        ('wagtailcore', '0060_fix_workflow_unique_constraint'),
        ('wagtailcore', '0078_referenceindex'),
        ('wagtailredirects', '0006_redirect_increase_max_length'),
        ('wagtailforms', '0005_alter_formsubmission_form_data'),
        ('wagtailinventory', '0001_initial'),
        ('v1', '0001_2024_squash'),
    ]

    operations = [
        migrations.CreateModel(
            name='BAHRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zip5', models.CharField(max_length=5)),
                ('value', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ConstantCap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.CharField(blank=True, help_text='VARIABLE NAME FOR JS', max_length=255)),
                ('value', models.IntegerField()),
                ('note', models.TextField(blank=True)),
                ('updated', models.DateField(auto_now=True)),
            ],
            options={
                'ordering': ['slug'],
            },
        ),
        migrations.CreateModel(
            name='ConstantRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.CharField(blank=True, help_text='VARIABLE NAME FOR JS', max_length=255)),
                ('value', models.DecimalField(decimal_places=5, max_digits=6)),
                ('note', models.TextField(blank=True)),
                ('updated', models.DateField(auto_now=True)),
            ],
            options={
                'ordering': ['slug'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contacts', models.TextField(blank=True, help_text='COMMA-SEPARATED LIST OF EMAILS')),
                ('endpoint', models.CharField(blank=True, max_length=255)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('internal_note', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('school_id', models.IntegerField(primary_key=True, serialize=False)),
                ('ope6_id', models.IntegerField(blank=True, null=True)),
                ('ope8_id', models.IntegerField(blank=True, null=True)),
                ('settlement_school', models.CharField(blank=True, default='', max_length=100)),
                ('data_json', models.TextField(blank=True)),
                ('city', models.CharField(blank=True, max_length=50)),
                ('state', models.CharField(blank=True, max_length=2)),
                ('zip5', models.CharField(blank=True, max_length=5)),
                ('enrollment', models.IntegerField(blank=True, null=True)),
                ('accreditor', models.CharField(blank=True, max_length=255)),
                ('ownership', models.CharField(blank=True, max_length=255)),
                ('control', models.CharField(blank=True, help_text="'Public', 'Private' or 'For-profit'", max_length=50)),
                ('url', models.TextField(blank=True)),
                ('degrees_predominant', models.TextField(blank=True)),
                ('degrees_highest', models.TextField(blank=True)),
                ('program_count', models.IntegerField(blank=True, null=True)),
                ('program_most_popular', models.JSONField(blank=True, null=True)),
                ('main_campus', models.BooleanField(blank=True, null=True)),
                ('online_only', models.BooleanField(blank=True, null=True)),
                ('operating', models.BooleanField(default=True)),
                ('under_investigation', models.BooleanField(default=False, help_text='Heightened Cash Monitoring 2')),
                ('KBYOSS', models.BooleanField(default=False)),
                ('grad_rate_4yr', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True)),
                ('grad_rate_lt4', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True)),
                ('grad_rate', models.DecimalField(blank=True, decimal_places=3, help_text='A 2-YEAR POOLED VALUE', max_digits=5, null=True)),
                ('repay_3yr', models.DecimalField(blank=True, decimal_places=10, help_text='GRADS WITH A DECLINING BALANCE AFTER 3 YRS', max_digits=13, null=True)),
                ('repay_5yr', models.DecimalField(blank=True, decimal_places=10, help_text='GRADS WITH A DECLINING BALANCE AFTER 5 YRS', max_digits=13, null=True)),
                ('default_rate', models.DecimalField(blank=True, decimal_places=3, help_text='LOAN DEFAULT RATE AT 5 YRS', max_digits=5, null=True)),
                ('median_total_debt', models.DecimalField(blank=True, decimal_places=1, help_text='MEDIAN STUDENT DEBT 10 YRS AFTER ENROLLING', max_digits=7, null=True)),
                ('median_monthly_debt', models.DecimalField(blank=True, decimal_places=2, help_text='MEDIAN STUDENT MONTHLY DEBT', max_digits=7, null=True)),
                ('median_annual_pay', models.IntegerField(blank=True, help_text='MEDIAN PAY 10 YRS AFTER ENTRY', null=True)),
                ('median_annual_pay_6yr', models.IntegerField(blank=True, help_text='MEDIAN PAY 6 YRS AFTER ENTRY', null=True)),
                ('avg_net_price', models.IntegerField(blank=True, help_text='OVERALL AVERAGE', null=True)),
                ('avg_net_price_slices', models.JSONField(blank=True, null=True)),
                ('tuition_out_of_state', models.IntegerField(blank=True, null=True)),
                ('tuition_in_state', models.IntegerField(blank=True, null=True)),
                ('offers_perkins', models.BooleanField(default=False)),
                ('cohort_ranking_by_control', models.JSONField(blank=True, null=True)),
                ('cohort_ranking_by_highest_degree', models.JSONField(blank=True, null=True)),
                ('cohort_ranking_by_state', models.JSONField(blank=True, null=True)),
                ('associate_transfer_rate', models.DecimalField(blank=True, decimal_places=3, help_text='Transfer rate for first-time, full-time students at less-than-four-year institutions (150% of expected time to completion)', max_digits=5, null=True)),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paying_for_college.contact')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.TextField(blank=True, null=True)),
                ('oid', models.CharField(max_length=40)),
                ('timestamp', models.DateTimeField()),
                ('errors', models.CharField(max_length=255)),
                ('emails', models.TextField(blank=True, help_text='COMMA-SEPARATED STRING OF EMAILS')),
                ('sent', models.BooleanField(default=False)),
                ('log', models.TextField(blank=True)),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='paying_for_college.school')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Nickname',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.TextField()),
                ('is_female', models.BooleanField(default=False)),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='paying_for_college.school')),
            ],
            options={
                'ordering': ['nickname'],
            },
        ),
        migrations.CreateModel(
            name='Alias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.TextField()),
                ('is_primary', models.BooleanField(default=False)),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='paying_for_college.school')),
            ],
            options={
                'verbose_name_plural': 'Aliases',
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('program_name', models.CharField(max_length=255)),
                ('accreditor', models.CharField(blank=True, max_length=255)),
                ('level', models.CharField(blank=True, max_length=255)),
                ('program_code', models.CharField(blank=True, max_length=255)),
                ('campus', models.CharField(blank=True, max_length=255)),
                ('cip_code', models.CharField(blank=True, max_length=255)),
                ('soc_codes', models.CharField(blank=True, max_length=255)),
                ('total_cost', models.IntegerField(blank=True, help_text='COMPUTED', null=True)),
                ('time_to_complete', models.IntegerField(blank=True, help_text='IN MONTHS', null=True)),
                ('completion_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('completion_cohort', models.IntegerField(blank=True, help_text='COMPLETION COHORT', null=True)),
                ('completers', models.IntegerField(blank=True, help_text='COMPLETERS OF THE PROGRAM', null=True)),
                ('titleiv_debt', models.IntegerField(blank=True, null=True)),
                ('private_debt', models.IntegerField(blank=True, null=True)),
                ('institutional_debt', models.IntegerField(blank=True, null=True)),
                ('mean_student_loan_completers', models.IntegerField(blank=True, help_text='TITLEIV_DEBT + PRIVATE_DEBT + INSTITUTIONAL_DEBT', null=True)),
                ('median_student_loan_completers', models.IntegerField(blank=True, help_text='TITLEIV_DEBT + PRIVATE_DEBT + INSTITUTIONAL_DEBT', null=True)),
                ('default_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('salary', models.IntegerField(blank=True, help_text='MEDIAN SALARY', null=True)),
                ('program_length', models.IntegerField(blank=True, help_text='IN MONTHS', null=True)),
                ('tuition', models.IntegerField(blank=True, null=True)),
                ('fees', models.IntegerField(blank=True, null=True)),
                ('housing', models.IntegerField(blank=True, help_text='HOUSING & MEALS', null=True)),
                ('books', models.IntegerField(blank=True, help_text='BOOKS & SUPPLIES', null=True)),
                ('transportation', models.IntegerField(blank=True, null=True)),
                ('other_costs', models.IntegerField(blank=True, null=True)),
                ('job_rate', models.DecimalField(blank=True, decimal_places=2, help_text='COMPLETERS WHO GET RELATED JOB', max_digits=5, null=True)),
                ('job_note', models.TextField(blank=True, help_text='EXPLANATION FROM SCHOOL')),
                ('test', models.BooleanField(default=False)),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='paying_for_college.school')),
                ('level_name', models.CharField(blank=True, max_length=255, null=True)),
                ('median_monthly_debt', models.IntegerField(blank=True, help_text='MEDIAN MONTHLY PAYMENT FOR A 10-YEAR LOAN', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CollegeCostsPage',
            fields=[
                ('cfgovpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='v1.cfgovpage')),
                ('header', wagtail.fields.StreamField([('hero', 9), ('text_introduction', 19), ('featured_content', 31)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'help_text': 'For guidelines on creating heroes, visit our <a href="https://cfpb.github.io/design-system/patterns/heroes">Design System</a>. Character counts (including spaces) at largest breakpoint:<ul class="help">    <li>&bull; 41 characters max (one-line heading)</li>    <li>&bull; 82 characters max (two-line heading)</li></ul>', 'required': False}), 1: ('wagtail.blocks.CharBlock', (), {'help_text': 'Use if the heading needs to break to a second lineat a specific point in the text.', 'required': False}), 2: ('wagtail.blocks.RichTextBlock', (), {'help_text': 'Character counts (including spaces) at largest breakpoint:<ul class="help">    <li>&bull; 165-186 characters (after a one-line heading)</li>    <li>&bull; 108-124 characters (after a two-line heading)</li></ul>', 'label': 'Sub-heading', 'required': False}), 3: ('wagtail.images.blocks.ImageChooserBlock', (), {'help_text': 'When saving illustrations, use a transparent background. ', 'label': 'Large image', 'required': False}), 4: ('wagtail.images.blocks.ImageChooserBlock', (), {'help_text': '<b>Optional.</b> Provides an alternate image for small displays when using a photo or bleeding hero. Not required for the standard illustration. ', 'required': False}), 5: ('wagtail.blocks.CharBlock', (), {'help_text': 'Specify a hex value (including the # sign) from our <a href="https://cfpb.github.io/design-system/foundation/color">official color palette</a>.', 'required': False}), 6: ('wagtail.blocks.BooleanBlock', (), {'help_text': '<b>Optional.</b> Turns the hero text white. Useful if using a dark background color or background image.', 'label': 'White text', 'required': False}), 7: ('wagtail.blocks.BooleanBlock', (), {'help_text': '<b>Optional.</b> Uses the large image as a background under the entire hero, creating the "Photo" style of hero (see <a href="https://cfpb.github.io/design-system/patterns/heroes">Design System</a> for details). When using this option, make sure to specify a background color (above) for the left/right margins that appear when screens are wider than 1200px and for the text section when the photo and text stack at mobile sizes.', 'label': 'Photo', 'required': False}), 8: ('wagtail.blocks.BooleanBlock', (), {'help_text': '<b>Optional.</b> Select if you want the illustration to bleed vertically off the top and bottom of the hero space.', 'label': 'Bleed', 'required': False}), 9: ('wagtail.blocks.StructBlock', [[('heading', 0), ('heading_continued', 1), ('body', 2), ('image', 3), ('small_image', 4), ('background_color', 5), ('is_white_text', 6), ('is_overlay', 7), ('is_bleeding', 8)]], {}), 10: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional: Adds an H5 eyebrow above H1 heading text. Only use in conjunction with heading.', 'label': 'Pre-heading', 'required': False}), 11: ('wagtail.blocks.CharBlock', (), {'required': False}), 12: ('wagtail.blocks.RichTextBlock', (), {'required': False}), 13: ('wagtail.blocks.CharBlock', (), {'help_text': 'Add an ARIA label if the link text does not describe the destination of the link (e.g. has ambiguous text like "Learn more" that is not descriptive on its own).', 'required': False}), 14: ('wagtail.blocks.CharBlock', (), {'default': '/', 'required': False}), 15: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'required': False}), 16: ('wagtail.blocks.StructBlock', [[('text', 11), ('aria_label', 13), ('url', 14), ('is_link_boldface', 15)]], {}), 17: ('wagtail.blocks.ListBlock', (16,), {'required': False}), 18: ('wagtail.blocks.BooleanBlock', (), {'help_text': 'Check this to add a horizontal rule line to bottom of text introduction.', 'label': 'Has bottom rule', 'required': False}), 19: ('wagtail.blocks.StructBlock', [[('eyebrow', 10), ('heading', 11), ('intro', 12), ('body', 12), ('links', 17), ('has_rule', 18)]], {}), 20: ('wagtail.blocks.CharBlock', (), {}), 21: ('wagtail.blocks.TextBlock', (), {'help_text': 'Line breaks will be ignored.'}), 22: ('wagtail.blocks.PageChooserBlock', (), {'required': False}), 23: ('wagtail.blocks.BooleanBlock', (), {'label': 'Render post link?', 'required': False}), 24: ('wagtail.images.blocks.ImageChooserBlock', (), {'required': False}), 25: ('wagtail.blocks.CharBlock', (), {'help_text': "No character limit, but be as succinct as possible. If the image is decorative (i.e., a screenreader wouldn't have anything useful to say about it), leave this field blank.", 'required': False}), 26: ('wagtail.blocks.StructBlock', [[('upload', 24), ('alt', 25)]], {}), 27: ('wagtail.blocks.ListBlock', (16,), {'label': 'Additional Links'}), 28: ('wagtail.blocks.RegexBlock', (), {'error_messages': {'invalid': 'The YouTube video ID is in the wrong format.'}, 'help_text': 'Enter the YouTube video ID, which is located at the end of the video URL, after "v=". For example, the video ID for https://www.youtube.com/watch?v=1V0Ax9OIc84 is 1V0Ax9OIc84.', 'label': 'YouTube video ID', 'regex': '^[\\w-]{11}$', 'required': False}), 29: ('wagtail.images.blocks.ImageChooserBlock', (), {'help_text': 'Optional thumbnail image to show before and after the video plays. If the thumbnail image is not set here, the video player will default to showing the thumbnail that was set in (or automatically chosen by) YouTube.', 'required': False}), 30: ('wagtail.blocks.StructBlock', [[('video_id', 28), ('thumbnail_image', 29)]], {'required': False}), 31: ('wagtail.blocks.StructBlock', [[('heading', 20), ('body', 21), ('post', 22), ('show_post_link', 23), ('post_link_text', 11), ('image', 26), ('links', 27), ('video', 30)]], {})})),
                ('content', wagtail.fields.StreamField([('full_width_text', 38), ('info_unit_group', 49), ('expandable_group', 57), ('expandable', 55), ('well', 37), ('raw_html_block', 58)], blank=True, block_lookup={0: ('wagtail.blocks.RichTextBlock', (), {'icon': 'edit'}), 1: ('wagtail.blocks.RichTextBlock', (), {}), 2: ('wagtail.blocks.CharBlock', (), {'help_text': '\n            ID will be auto-generated on save.\n            However, you may enter some human-friendly text that\n            will be incorporated to make it easier to read.\n        ', 'label': 'ID for this content block', 'required': False}), 3: ('wagtail.blocks.StructBlock', [[('link_id', 2)]], {}), 4: ('wagtail.blocks.StructBlock', [[('content_block', 1), ('anchor_link', 3)]], {}), 5: ('wagtail.blocks.CharBlock', (), {'required': False}), 6: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('h2', 'H2'), ('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5')]}), 7: ('wagtail.blocks.CharBlock', (), {'help_text': 'Input the name of an icon to appear to the left of the heading. E.g., approved, help-round, etc. <a href="https://cfpb.github.io/design-system/foundation/iconography">See full list of icons</a>', 'required': False}), 8: ('wagtail.blocks.StructBlock', [[('text', 5), ('level', 6), ('icon', 7)]], {'required': False}), 9: ('wagtail.images.blocks.ImageChooserBlock', (), {'required': False}), 10: ('wagtail.blocks.CharBlock', (), {'help_text': "No character limit, but be as succinct as possible. If the image is decorative (i.e., a screenreader wouldn't have anything useful to say about it), leave this field blank.", 'required': False}), 11: ('wagtail.blocks.StructBlock', [[('upload', 9), ('alt', 10)]], {}), 12: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('full', 'Full width'), (470, '470px'), (270, '270px'), (170, '170px')]}), 13: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('right', 'right'), ('left', 'left')], 'help_text': 'Does not apply if the image is full-width'}), 14: ('wagtail.blocks.RichTextBlock', (), {'label': 'Caption', 'required': False}), 15: ('wagtail.blocks.BooleanBlock', (), {'default': True, 'help_text': 'Check to add a horizontal rule line to bottom of inset.', 'label': 'Has bottom rule line', 'required': False}), 16: ('wagtail.blocks.StructBlock', [[('image', 11), ('image_width', 12), ('image_position', 13), ('text', 14), ('is_bottom_rule', 15)]], {}), 17: ('wagtail.blocks.MultipleChoiceBlock', [], {'choices': [('is_full_width', 'Display the table at full width'), ('stack_on_mobile', 'Stack the table columns on mobile')], 'required': False}), 18: ('wagtail.blocks.CharBlock', (), {}), 19: ('wagtail.blocks.FloatBlock', (), {}), 20: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'ol', 'ul', 'link', 'document-link', 'superscript']}), 21: ('wagtail.contrib.typed_table_block.blocks.TypedTableBlock', [[('text', 18), ('numeric', 19), ('rich_text', 20)]], {}), 22: ('wagtail.blocks.StructBlock', [[('heading', 8), ('text_introduction', 5), ('options', 17), ('data', 21)]], {}), 23: ('wagtail.blocks.TextBlock', (), {}), 24: ('wagtail.blocks.TextBlock', (), {'required': False}), 25: ('wagtail.blocks.StructBlock', [[('body', 23), ('citation', 24)]], {}), 26: ('wagtail.blocks.RichTextBlock', (), {'required': False}), 27: ('wagtail.blocks.CharBlock', (), {'help_text': 'Add an ARIA label if the link text does not describe the destination of the link (e.g. has ambiguous text like "Learn more" that is not descriptive on its own).', 'required': False}), 28: ('wagtail.blocks.CharBlock', (), {'default': '/', 'required': False}), 29: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'required': False}), 30: ('wagtail.blocks.StructBlock', [[('text', 5), ('aria_label', 27), ('url', 28), ('is_link_boldface', 29)]], {}), 31: ('wagtail.blocks.StructBlock', [[('slug_text', 5), ('paragraph_text', 26), ('button', 30)]], {}), 32: ('wagtail.blocks.ListBlock', (30,), {}), 33: ('wagtail.blocks.StructBlock', [[('heading', 5), ('paragraph', 26), ('links', 32)]], {}), 34: ('v1.blocks.ReusableTextChooserBlock', ('v1.ReusableText',), {}), 35: ('v1.blocks.EmailSignUpChooserBlock', (), {}), 36: ('wagtail.blocks.RichTextBlock', (), {'label': 'Well', 'required': False}), 37: ('wagtail.blocks.StructBlock', [[('content', 36)]], {}), 38: ('wagtail.blocks.StreamBlock', [[('content', 0), ('content_with_anchor', 4), ('heading', 8), ('image', 16), ('table', 22), ('quote', 25), ('cta', 31), ('related_links', 33), ('reusable_text', 34), ('email_signup', 35), ('well', 37)]], {}), 39: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('50-50', '50/50'), ('33-33-33', '33/33/33'), ('25-75', '25/75')], 'help_text': 'Choose the number and width of info unit columns.', 'label': 'Format'}), 40: ('wagtail.blocks.BooleanBlock', (), {'default': True, 'help_text': "Check this to link all images and headings to the URL of the first link in their unit's list, if there is a link.", 'required': False}), 41: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check this to add a horizontal rule line to top of info unit group.', 'required': False}), 42: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check this to show horizontal rule lines between info units.', 'label': 'Show rule lines between items', 'required': False}), 43: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('none', 'None'), ('rounded', 'Rounded corners'), ('circle', 'Circle')], 'help_text': 'Adds a <em>border-radius</em> class to images in this group, allowing for a rounded or circular border.', 'label': 'Border radius for images?', 'required': False}), 44: ('wagtail.blocks.StructBlock', [[('text', 5), ('level', 6), ('icon', 7)]], {'default': {'level': 'h3'}, 'required': False}), 45: ('wagtail.blocks.RichTextBlock', (), {'blank': True, 'required': False}), 46: ('wagtail.blocks.ListBlock', (30,), {'required': False}), 47: ('wagtail.blocks.StructBlock', [[('image', 11), ('heading', 44), ('body', 45), ('links', 46)]], {}), 48: ('wagtail.blocks.ListBlock', (47,), {'default': []}), 49: ('wagtail.blocks.StructBlock', [[('format', 39), ('heading', 8), ('intro', 26), ('link_image_and_heading', 40), ('has_top_rule_line', 41), ('lines_between_items', 42), ('border_radius_image', 43), ('info_units', 48)]], {}), 50: ('wagtail.blocks.CharBlock', (), {'help_text': 'Added as an <code>&lt;h3&gt;</code> at the top of this block. Also adds a wrapping <code>&lt;div&gt;</code> whose <code>id</code> attribute comes from a slugified version of this heading, creating an anchor that can be used when linking to this part of the page.', 'required': False}), 51: ('wagtail.blocks.BooleanBlock', (), {'required': False}), 52: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check this to add a horizontal rule line to top of expandable group.', 'required': False}), 53: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check this to add FAQ schema markup to expandables.', 'label': 'Uses FAQ schema', 'required': False}), 54: ('wagtail.blocks.StreamBlock', [[('paragraph', 26), ('well', 37), ('links', 30), ('info_unit_group', 49)]], {'blank': True}), 55: ('wagtail.blocks.StructBlock', [[('label', 5), ('icon', 5), ('is_bordered', 51), ('is_midtone', 51), ('is_expanded', 51), ('is_larger_heading', 51), ('is_expanded_padding', 51), ('content', 54)]], {}), 56: ('wagtail.blocks.ListBlock', (55,), {}), 57: ('wagtail.blocks.StructBlock', [[('heading', 50), ('body', 26), ('is_accordion', 51), ('has_top_rule_line', 52), ('is_faq', 53), ('expandables', 56)]], {}), 58: ('wagtail.blocks.RawHTMLBlock', (), {'label': 'Raw HTML block'})})),
            ],
            options={
                'abstract': False,
            },
            bases=('v1.cfgovpage',),
        ),
        migrations.RunPython(
            code=django.db.migrations.operations.special.RunPython.noop,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.AlterField(
            model_name='collegecostspage',
            name='content',
            field=wagtail.fields.StreamField([('full_width_text', 39), ('info_unit_group', 50), ('expandable_group', 58), ('expandable', 56), ('well', 38), ('raw_html_block', 59)], blank=True, block_lookup={0: ('wagtail.blocks.RichTextBlock', (), {'icon': 'edit'}), 1: ('wagtail.blocks.RichTextBlock', (), {}), 2: ('wagtail.blocks.CharBlock', (), {'help_text': '\n            ID will be auto-generated on save.\n            However, you may enter some human-friendly text that\n            will be incorporated to make it easier to read.\n        ', 'label': 'ID for this content block', 'required': False}), 3: ('wagtail.blocks.StructBlock', [[('link_id', 2)]], {}), 4: ('wagtail.blocks.StructBlock', [[('content_block', 1), ('anchor_link', 3)]], {}), 5: ('wagtail.blocks.CharBlock', (), {'required': False}), 6: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('h2', 'H2'), ('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5')]}), 7: ('wagtail.blocks.CharBlock', (), {'help_text': 'Input the name of an icon to appear to the left of the heading. E.g., approved, help-round, etc. <a href="https://cfpb.github.io/design-system/foundation/iconography">See full list of icons</a>', 'required': False}), 8: ('wagtail.blocks.StructBlock', [[('text', 5), ('level', 6), ('icon', 7)]], {'required': False}), 9: ('wagtail.images.blocks.ImageChooserBlock', (), {'required': False}), 10: ('wagtail.blocks.CharBlock', (), {'help_text': "No character limit, but be as succinct as possible. If the image is decorative (i.e., a screenreader wouldn't have anything useful to say about it), leave this field blank.", 'required': False}), 11: ('wagtail.blocks.StructBlock', [[('upload', 9), ('alt', 10)]], {}), 12: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('full', 'Full width'), (470, '470px'), (270, '270px'), (170, '170px')]}), 13: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('right', 'right'), ('left', 'left')], 'help_text': 'Does not apply if the image is full-width'}), 14: ('wagtail.blocks.RichTextBlock', (), {'label': 'Caption', 'required': False}), 15: ('wagtail.blocks.BooleanBlock', (), {'default': True, 'help_text': 'Check to add a horizontal rule line to bottom of inset.', 'label': 'Has bottom rule line', 'required': False}), 16: ('wagtail.blocks.StructBlock', [[('image', 11), ('image_width', 12), ('image_position', 13), ('text', 14), ('is_bottom_rule', 15)]], {}), 17: ('wagtail.blocks.MultipleChoiceBlock', [], {'choices': [('is_full_width', 'Display the table at full width'), ('stack_on_mobile', 'Stack the table columns on mobile')], 'required': False}), 18: ('wagtail.blocks.CharBlock', (), {}), 19: ('wagtail.blocks.FloatBlock', (), {}), 20: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'ol', 'ul', 'link', 'document-link', 'superscript']}), 21: ('wagtail.contrib.typed_table_block.blocks.TypedTableBlock', [[('text', 18), ('numeric', 19), ('rich_text', 20)]], {}), 22: ('wagtail.blocks.StructBlock', [[('heading', 8), ('text_introduction', 5), ('options', 17), ('data', 21)]], {}), 23: ('wagtail.blocks.TextBlock', (), {}), 24: ('wagtail.blocks.TextBlock', (), {'required': False}), 25: ('wagtail.blocks.StructBlock', [[('body', 23), ('citation', 24)]], {}), 26: ('wagtail.blocks.RichTextBlock', (), {'required': False}), 27: ('wagtail.blocks.CharBlock', (), {'help_text': 'Add an ARIA label if the link text does not describe the destination of the link (e.g. has ambiguous text like "Learn more" that is not descriptive on its own).', 'required': False}), 28: ('wagtail.blocks.CharBlock', (), {'default': '/', 'required': False}), 29: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'required': False}), 30: ('wagtail.blocks.StructBlock', [[('text', 5), ('aria_label', 27), ('url', 28), ('is_link_boldface', 29)]], {}), 31: ('wagtail.blocks.StructBlock', [[('slug_text', 5), ('paragraph_text', 26), ('button', 30)]], {}), 32: ('wagtail.blocks.ListBlock', (30,), {}), 33: ('wagtail.blocks.StructBlock', [[('heading', 5), ('paragraph', 26), ('links', 32)]], {}), 34: ('v1.blocks.ReusableTextChooserBlock', ('v1.ReusableText',), {}), 35: ('v1.blocks.ReusableNotificationChooserBlock', ('v1.ReusableNotification',), {}), 36: ('v1.blocks.EmailSignUpChooserBlock', (), {}), 37: ('wagtail.blocks.RichTextBlock', (), {'label': 'Well', 'required': False}), 38: ('wagtail.blocks.StructBlock', [[('content', 37)]], {}), 39: ('wagtail.blocks.StreamBlock', [[('content', 0), ('content_with_anchor', 4), ('heading', 8), ('image', 16), ('table', 22), ('quote', 25), ('cta', 31), ('related_links', 33), ('reusable_text', 34), ('reusable_notification', 35), ('email_signup', 36), ('well', 38)]], {}), 40: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('50-50', '50/50'), ('33-33-33', '33/33/33'), ('25-75', '25/75')], 'help_text': 'Choose the number and width of info unit columns.', 'label': 'Format'}), 41: ('wagtail.blocks.BooleanBlock', (), {'default': True, 'help_text': "Check this to link all images and headings to the URL of the first link in their unit's list, if there is a link.", 'required': False}), 42: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check this to add a horizontal rule line to top of info unit group.', 'required': False}), 43: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check this to show horizontal rule lines between info units.', 'label': 'Show rule lines between items', 'required': False}), 44: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('none', 'None'), ('rounded', 'Rounded corners'), ('circle', 'Circle')], 'help_text': 'Adds a <em>border-radius</em> class to images in this group, allowing for a rounded or circular border.', 'label': 'Border radius for images?', 'required': False}), 45: ('wagtail.blocks.StructBlock', [[('text', 5), ('level', 6), ('icon', 7)]], {'default': {'level': 'h3'}, 'required': False}), 46: ('wagtail.blocks.RichTextBlock', (), {'blank': True, 'required': False}), 47: ('wagtail.blocks.ListBlock', (30,), {'required': False}), 48: ('wagtail.blocks.StructBlock', [[('image', 11), ('heading', 45), ('body', 46), ('links', 47)]], {}), 49: ('wagtail.blocks.ListBlock', (48,), {'default': []}), 50: ('wagtail.blocks.StructBlock', [[('format', 40), ('heading', 8), ('intro', 26), ('link_image_and_heading', 41), ('has_top_rule_line', 42), ('lines_between_items', 43), ('border_radius_image', 44), ('info_units', 49)]], {}), 51: ('wagtail.blocks.CharBlock', (), {'help_text': 'Added as an <code>&lt;h3&gt;</code> at the top of this block. Also adds a wrapping <code>&lt;div&gt;</code> whose <code>id</code> attribute comes from a slugified version of this heading, creating an anchor that can be used when linking to this part of the page.', 'required': False}), 52: ('wagtail.blocks.BooleanBlock', (), {'required': False}), 53: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check this to add a horizontal rule line to top of expandable group.', 'required': False}), 54: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check this to add FAQ schema markup to expandables.', 'label': 'Uses FAQ schema', 'required': False}), 55: ('wagtail.blocks.StreamBlock', [[('paragraph', 26), ('well', 38), ('links', 30), ('info_unit_group', 50)]], {'blank': True}), 56: ('wagtail.blocks.StructBlock', [[('label', 5), ('icon', 5), ('is_bordered', 52), ('is_midtone', 52), ('is_expanded', 52), ('is_larger_heading', 52), ('is_expanded_padding', 52), ('content', 55)]], {}), 57: ('wagtail.blocks.ListBlock', (56,), {}), 58: ('wagtail.blocks.StructBlock', [[('heading', 51), ('body', 26), ('is_accordion', 52), ('has_top_rule_line', 53), ('is_faq', 54), ('expandables', 57)]], {}), 59: ('wagtail.blocks.RawHTMLBlock', (), {'label': 'Raw HTML block'})}),
        ),
        migrations.AlterField(
            model_name='collegecostspage',
            name='content',
            field=wagtail.fields.StreamField([('full_width_text', 39), ('info_unit_group', 50), ('expandable_group', 58), ('expandable', 56), ('well', 38), ('raw_html_block', 59)], blank=True, block_lookup={0: ('wagtail.blocks.RichTextBlock', (), {'icon': 'edit'}), 1: ('wagtail.blocks.RichTextBlock', (), {}), 2: ('wagtail.blocks.CharBlock', (), {'help_text': '\n            ID will be auto-generated on save.\n            However, you may enter some human-friendly text that\n            will be incorporated to make it easier to read.\n        ', 'label': 'ID for this content block', 'required': False}), 3: ('wagtail.blocks.StructBlock', [[('link_id', 2)]], {}), 4: ('wagtail.blocks.StructBlock', [[('content_block', 1), ('anchor_link', 3)]], {}), 5: ('wagtail.blocks.CharBlock', (), {'required': False}), 6: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('h2', 'H2'), ('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5')]}), 7: ('wagtail.blocks.CharBlock', (), {'help_text': 'Input the name of an icon to appear to the left of the heading. E.g., approved, help-round, etc. <a href="https://cfpb.github.io/design-system/foundation/iconography">See full list of icons</a>', 'required': False}), 8: ('wagtail.blocks.StructBlock', [[('text', 5), ('level', 6), ('icon', 7)]], {'required': False}), 9: ('wagtail.images.blocks.ImageChooserBlock', (), {'required': False}), 10: ('wagtail.blocks.CharBlock', (), {'help_text': "No character limit, but be as succinct as possible. If the image is decorative (i.e., a screenreader wouldn't have anything useful to say about it), leave this field blank.", 'required': False}), 11: ('wagtail.blocks.StructBlock', [[('upload', 9), ('alt', 10)]], {}), 12: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('full', 'Full width'), (470, '470px'), (270, '270px'), (170, '170px')]}), 13: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('right', 'right'), ('left', 'left')], 'help_text': 'Does not apply if the image is full-width'}), 14: ('wagtail.blocks.RichTextBlock', (), {'label': 'Caption', 'required': False}), 15: ('wagtail.blocks.BooleanBlock', (), {'default': True, 'help_text': 'Check to add a horizontal rule line to bottom of inset.', 'label': 'Has bottom rule line', 'required': False}), 16: ('wagtail.blocks.StructBlock', [[('image', 11), ('image_width', 12), ('image_position', 13), ('text', 14), ('is_bottom_rule', 15)]], {}), 17: ('wagtail.blocks.MultipleChoiceBlock', [], {'choices': [('is_full_width', 'Display the table at full width'), ('stack_on_mobile', 'Stack the table columns on mobile')], 'required': False}), 18: ('wagtail.blocks.CharBlock', (), {}), 19: ('wagtail.blocks.FloatBlock', (), {}), 20: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'ol', 'ul', 'link', 'document-link', 'superscript']}), 21: ('wagtail.contrib.typed_table_block.blocks.TypedTableBlock', [[('text', 18), ('numeric', 19), ('rich_text', 20)]], {}), 22: ('wagtail.blocks.StructBlock', [[('heading', 8), ('text_introduction', 5), ('options', 17), ('data', 21)]], {}), 23: ('wagtail.blocks.TextBlock', (), {}), 24: ('wagtail.blocks.TextBlock', (), {'required': False}), 25: ('wagtail.blocks.StructBlock', [[('body', 23), ('citation', 24)]], {}), 26: ('wagtail.blocks.RichTextBlock', (), {'required': False}), 27: ('wagtail.blocks.CharBlock', (), {'help_text': 'Add an ARIA label if the link text does not describe the destination of the link (e.g. has ambiguous text like "Learn more" that is not descriptive on its own).', 'required': False}), 28: ('wagtail.blocks.CharBlock', (), {'default': '/', 'required': False}), 29: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'required': False}), 30: ('wagtail.blocks.StructBlock', [[('text', 5), ('aria_label', 27), ('url', 28), ('is_link_boldface', 29)]], {}), 31: ('wagtail.blocks.StructBlock', [[('slug_text', 5), ('paragraph_text', 26), ('button', 30)]], {}), 32: ('wagtail.blocks.ListBlock', (30,), {}), 33: ('wagtail.blocks.StructBlock', [[('heading', 5), ('paragraph', 26), ('links', 32)]], {}), 34: ('v1.blocks.ReusableTextChooserBlock', ('v1.ReusableText',), {}), 35: ('v1.blocks.ReusableNotificationChooserBlock', ('v1.ReusableNotification',), {}), 36: ('v1.blocks.EmailSignUpChooserBlock', (), {}), 37: ('wagtail.blocks.RichTextBlock', (), {'label': 'Well', 'required': False}), 38: ('wagtail.blocks.StructBlock', [[('content', 37)]], {}), 39: ('wagtail.blocks.StreamBlock', [[('content', 0), ('content_with_anchor', 4), ('heading', 8), ('image', 16), ('table', 22), ('quote', 25), ('cta', 31), ('related_links', 33), ('reusable_text', 34), ('reusable_notification', 35), ('email_signup', 36), ('well', 38)]], {}), 40: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('50-50', '50/50'), ('33-33-33', '33/33/33'), ('25-75', '25/75')], 'help_text': 'Choose the number and width of info unit columns.', 'label': 'Format'}), 41: ('wagtail.blocks.BooleanBlock', (), {'default': True, 'help_text': "Check this to link all images and headings to the URL of the first link in their unit's list, if there is a link.", 'required': False}), 42: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check this to add a horizontal rule line to top of info unit group.', 'required': False}), 43: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check this to show horizontal rule lines between info units.', 'label': 'Show rule lines between items', 'required': False}), 44: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('none', 'None'), ('rounded', 'Rounded corners'), ('circle', 'Circle')], 'help_text': 'Adds a <em>border-radius</em> class to images in this group, allowing for a rounded or circular border.', 'label': 'Border radius for images?', 'required': False}), 45: ('wagtail.blocks.StructBlock', [[('text', 5), ('level', 6), ('icon', 7)]], {'default': {'level': 'h3'}, 'required': False}), 46: ('wagtail.blocks.RichTextBlock', (), {'blank': True, 'required': False}), 47: ('wagtail.blocks.ListBlock', (30,), {'required': False}), 48: ('wagtail.blocks.StructBlock', [[('image', 11), ('heading', 45), ('body', 46), ('links', 47)]], {}), 49: ('wagtail.blocks.ListBlock', (48,), {'default': []}), 50: ('wagtail.blocks.StructBlock', [[('format', 40), ('heading', 8), ('intro', 26), ('link_image_and_heading', 41), ('has_top_rule_line', 42), ('lines_between_items', 43), ('border_radius_image', 44), ('info_units', 49)]], {}), 51: ('wagtail.blocks.CharBlock', (), {'help_text': 'Added as an <code>&lt;h3&gt;</code> at the top of this block. Also adds a wrapping <code>&lt;div&gt;</code> whose <code>id</code> attribute comes from a slugified version of this heading, creating an anchor that can be used when linking to this part of the page.', 'required': False}), 52: ('wagtail.blocks.BooleanBlock', (), {'required': False}), 53: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check this to add a horizontal rule line to top of expandable group.', 'required': False}), 54: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check this to add FAQ schema markup to expandables.', 'label': 'Uses FAQ schema', 'required': False}), 55: ('wagtail.blocks.StreamBlock', [[('paragraph', 26), ('well', 38), ('links', 30), ('info_unit_group', 50)]], {'blank': True}), 56: ('wagtail.blocks.StructBlock', [[('label', 5), ('icon', 5), ('is_bordered', 52), ('is_midtone', 52), ('is_expanded', 52), ('is_expanded_padding', 52), ('content', 55)]], {}), 57: ('wagtail.blocks.ListBlock', (56,), {}), 58: ('wagtail.blocks.StructBlock', [[('heading', 51), ('body', 26), ('is_accordion', 52), ('has_top_rule_line', 53), ('is_faq', 54), ('expandables', 57)]], {}), 59: ('wagtail.blocks.RawHTMLBlock', (), {'label': 'Raw HTML block'})}),
        ),
        migrations.AlterField(
            model_name='collegecostspage',
            name='content',
            field=wagtail.fields.StreamField([('full_width_text', 41), ('info_unit_group', 52), ('expandable_group', 60), ('expandable', 58), ('well', 40), ('raw_html_block', 61)], blank=True, block_lookup={0: ('wagtail.blocks.RichTextBlock', (), {'icon': 'edit'}), 1: ('wagtail.blocks.RichTextBlock', (), {}), 2: ('wagtail.blocks.CharBlock', (), {'help_text': '\n            ID will be auto-generated on save.\n            However, you may enter some human-friendly text that\n            will be incorporated to make it easier to read.\n        ', 'label': 'ID for this content block', 'required': False}), 3: ('wagtail.blocks.StructBlock', [[('link_id', 2)]], {}), 4: ('wagtail.blocks.StructBlock', [[('content_block', 1), ('anchor_link', 3)]], {}), 5: ('wagtail_footnotes.blocks.RichTextBlockWithFootnotes', (), {'features': ['anchor-identifier', 'h2', 'h3', 'h4', 'h5', 'hr', 'ol', 'ul', 'bold', 'italic', 'superscript', 'blockquote', 'link', 'document-link', 'image', 'icon', 'footnotes']}), 6: ('wagtail.blocks.CharBlock', (), {'required': False}), 7: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('h2', 'H2'), ('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5')]}), 8: ('wagtail.blocks.CharBlock', (), {'help_text': 'Input the name of an icon to appear to the left of the heading. E.g., approved, help-round, etc. <a href="https://cfpb.github.io/design-system/foundation/iconography">See full list of icons</a>', 'required': False}), 9: ('wagtail.blocks.StructBlock', [[('text', 6), ('level', 7), ('icon', 8)]], {'required': False}), 10: ('wagtail.images.blocks.ImageChooserBlock', (), {'required': False}), 11: ('wagtail.blocks.CharBlock', (), {'help_text': "No character limit, but be as succinct as possible. If the image is decorative (i.e., a screenreader wouldn't have anything useful to say about it), leave this field blank.", 'required': False}), 12: ('wagtail.blocks.StructBlock', [[('upload', 10), ('alt', 11)]], {}), 13: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('full', 'Full width'), (470, '470px'), (270, '270px'), (170, '170px')]}), 14: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('right', 'right'), ('left', 'left')], 'help_text': 'Does not apply if the image is full-width'}), 15: ('wagtail.blocks.RichTextBlock', (), {'label': 'Caption', 'required': False}), 16: ('wagtail.blocks.BooleanBlock', (), {'default': True, 'help_text': 'Check to add a horizontal rule line to bottom of inset.', 'label': 'Has bottom rule line', 'required': False}), 17: ('wagtail.blocks.StructBlock', [[('image', 12), ('image_width', 13), ('image_position', 14), ('text', 15), ('is_bottom_rule', 16)]], {}), 18: ('wagtail.blocks.MultipleChoiceBlock', [], {'choices': [('is_full_width', 'Display the table at full width'), ('stack_on_mobile', 'Stack the table columns on mobile')], 'required': False}), 19: ('wagtail.blocks.CharBlock', (), {}), 20: ('wagtail.blocks.FloatBlock', (), {}), 21: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'ol', 'ul', 'link', 'document-link', 'superscript']}), 22: ('wagtail_footnotes.blocks.RichTextBlockWithFootnotes', (), {'features': ['bold', 'italic', 'ol', 'ul', 'link', 'document-link', 'superscript', 'footnotes']}), 23: ('wagtail.contrib.typed_table_block.blocks.TypedTableBlock', [[('text', 19), ('numeric', 20), ('rich_text', 21), ('rich_text_with_footnotes', 22)]], {}), 24: ('wagtail.blocks.StructBlock', [[('heading', 9), ('text_introduction', 6), ('options', 18), ('data', 23)]], {}), 25: ('wagtail.blocks.TextBlock', (), {}), 26: ('wagtail.blocks.TextBlock', (), {'required': False}), 27: ('wagtail.blocks.StructBlock', [[('body', 25), ('citation', 26)]], {}), 28: ('wagtail.blocks.RichTextBlock', (), {'required': False}), 29: ('wagtail.blocks.CharBlock', (), {'help_text': 'Add an ARIA label if the link text does not describe the destination of the link (e.g. has ambiguous text like "Learn more" that is not descriptive on its own).', 'required': False}), 30: ('wagtail.blocks.CharBlock', (), {'default': '/', 'required': False}), 31: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'required': False}), 32: ('wagtail.blocks.StructBlock', [[('text', 6), ('aria_label', 29), ('url', 30), ('is_link_boldface', 31)]], {}), 33: ('wagtail.blocks.StructBlock', [[('slug_text', 6), ('paragraph_text', 28), ('button', 32)]], {}), 34: ('wagtail.blocks.ListBlock', (32,), {}), 35: ('wagtail.blocks.StructBlock', [[('heading', 6), ('paragraph', 28), ('links', 34)]], {}), 36: ('v1.blocks.ReusableTextChooserBlock', ('v1.ReusableText',), {}), 37: ('v1.blocks.ReusableNotificationChooserBlock', ('v1.ReusableNotification',), {}), 38: ('v1.blocks.EmailSignUpChooserBlock', (), {}), 39: ('wagtail.blocks.RichTextBlock', (), {'label': 'Well', 'required': False}), 40: ('wagtail.blocks.StructBlock', [[('content', 39)]], {}), 41: ('wagtail.blocks.StreamBlock', [[('content', 0), ('content_with_anchor', 4), ('content_with_footnotes', 5), ('heading', 9), ('image', 17), ('table', 24), ('quote', 27), ('cta', 33), ('related_links', 35), ('reusable_text', 36), ('reusable_notification', 37), ('email_signup', 38), ('well', 40)]], {}), 42: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('50-50', '50/50'), ('33-33-33', '33/33/33'), ('25-75', '25/75')], 'help_text': 'Choose the number and width of info unit columns.', 'label': 'Format'}), 43: ('wagtail.blocks.BooleanBlock', (), {'default': True, 'help_text': "Check this to link all images and headings to the URL of the first link in their unit's list, if there is a link.", 'required': False}), 44: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check this to add a horizontal rule line to top of info unit group.', 'required': False}), 45: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check this to show horizontal rule lines between info units.', 'label': 'Show rule lines between items', 'required': False}), 46: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('none', 'None'), ('rounded', 'Rounded corners'), ('circle', 'Circle')], 'help_text': 'Adds a <em>border-radius</em> class to images in this group, allowing for a rounded or circular border.', 'label': 'Border radius for images?', 'required': False}), 47: ('wagtail.blocks.StructBlock', [[('text', 6), ('level', 7), ('icon', 8)]], {'default': {'level': 'h3'}, 'required': False}), 48: ('wagtail.blocks.RichTextBlock', (), {'blank': True, 'required': False}), 49: ('wagtail.blocks.ListBlock', (32,), {'required': False}), 50: ('wagtail.blocks.StructBlock', [[('image', 12), ('heading', 47), ('body', 48), ('links', 49)]], {}), 51: ('wagtail.blocks.ListBlock', (50,), {'default': []}), 52: ('wagtail.blocks.StructBlock', [[('format', 42), ('heading', 9), ('intro', 28), ('link_image_and_heading', 43), ('has_top_rule_line', 44), ('lines_between_items', 45), ('border_radius_image', 46), ('info_units', 51)]], {}), 53: ('wagtail.blocks.CharBlock', (), {'help_text': 'Added as an <code>&lt;h3&gt;</code> at the top of this block. Also adds a wrapping <code>&lt;div&gt;</code> whose <code>id</code> attribute comes from a slugified version of this heading, creating an anchor that can be used when linking to this part of the page.', 'required': False}), 54: ('wagtail.blocks.BooleanBlock', (), {'required': False}), 55: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check this to add a horizontal rule line to top of expandable group.', 'required': False}), 56: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check this to add FAQ schema markup to expandables.', 'label': 'Uses FAQ schema', 'required': False}), 57: ('wagtail.blocks.StreamBlock', [[('paragraph', 28), ('well', 40), ('links', 32), ('info_unit_group', 52)]], {'blank': True}), 58: ('wagtail.blocks.StructBlock', [[('label', 6), ('icon', 6), ('is_bordered', 54), ('is_midtone', 54), ('is_expanded', 54), ('is_expanded_padding', 54), ('content', 57)]], {}), 59: ('wagtail.blocks.ListBlock', (58,), {}), 60: ('wagtail.blocks.StructBlock', [[('heading', 53), ('body', 28), ('is_accordion', 54), ('has_top_rule_line', 55), ('is_faq', 56), ('expandables', 59)]], {}), 61: ('wagtail.blocks.RawHTMLBlock', (), {'label': 'Raw HTML block'})}),
        ),
        migrations.AlterField(
            model_name='collegecostspage',
            name='content',
            field=wagtail.fields.StreamField([('full_width_text', 42), ('info_unit_group', 53), ('expandable_group', 61), ('expandable', 59), ('well', 41), ('raw_html_block', 62)], blank=True, block_lookup={0: ('wagtail.blocks.RichTextBlock', (), {'icon': 'edit'}), 1: ('wagtail.blocks.RichTextBlock', (), {}), 2: ('wagtail.blocks.CharBlock', (), {'help_text': '\n            ID will be auto-generated on save.\n            However, you may enter some human-friendly text that\n            will be incorporated to make it easier to read.\n        ', 'label': 'ID for this content block', 'required': False}), 3: ('wagtail.blocks.StructBlock', [[('link_id', 2)]], {}), 4: ('wagtail.blocks.StructBlock', [[('content_block', 1), ('anchor_link', 3)]], {}), 5: ('wagtail_footnotes.blocks.RichTextBlockWithFootnotes', (), {'features': ['anchor-identifier', 'h2', 'h3', 'h4', 'h5', 'hr', 'ol', 'ul', 'bold', 'italic', 'superscript', 'blockquote', 'link', 'document-link', 'image', 'icon', 'footnotes']}), 6: ('wagtail.blocks.CharBlock', (), {'required': False}), 7: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('h2', 'H2'), ('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5')]}), 8: ('wagtail.blocks.CharBlock', (), {'help_text': 'Input the name of an icon to appear to the left of the heading. E.g., approved, help-round, etc. <a href="https://cfpb.github.io/design-system/foundation/iconography">See full list of icons</a>', 'required': False}), 9: ('wagtail.blocks.StructBlock', [[('text', 6), ('level', 7), ('icon', 8)]], {'required': False}), 10: ('wagtail.images.blocks.ImageChooserBlock', (), {'required': False}), 11: ('wagtail.blocks.CharBlock', (), {'help_text': "No character limit, but be as succinct as possible. If the image is decorative (i.e., a screenreader wouldn't have anything useful to say about it), leave this field blank.", 'required': False}), 12: ('wagtail.blocks.StructBlock', [[('upload', 10), ('alt', 11)]], {}), 13: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('full', 'Full width'), (470, '470px'), (270, '270px'), (170, '170px')]}), 14: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('right', 'right'), ('left', 'left')], 'help_text': 'Does not apply if the image is full-width'}), 15: ('wagtail.blocks.RichTextBlock', (), {'label': 'Caption', 'required': False}), 16: ('wagtail.blocks.BooleanBlock', (), {'default': True, 'help_text': 'Check to add a horizontal rule line to bottom of inset.', 'label': 'Has bottom rule line', 'required': False}), 17: ('wagtail.blocks.StructBlock', [[('image', 12), ('image_width', 13), ('image_position', 14), ('text', 15), ('is_bottom_rule', 16)]], {}), 18: ('wagtail.blocks.MultipleChoiceBlock', [], {'choices': [('is_full_width', 'Display the table at full width'), ('stack_on_mobile', 'Stack the table columns on mobile')], 'required': False}), 19: ('wagtail.blocks.CharBlock', (), {}), 20: ('wagtail.blocks.FloatBlock', (), {}), 21: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'ol', 'ul', 'link', 'document-link', 'superscript']}), 22: ('wagtail_footnotes.blocks.RichTextBlockWithFootnotes', (), {'features': ['bold', 'italic', 'ol', 'ul', 'link', 'document-link', 'superscript', 'footnotes']}), 23: ('wagtail.contrib.typed_table_block.blocks.TypedTableBlock', [[('text', 19), ('numeric', 20), ('rich_text', 21), ('rich_text_with_footnotes', 22)]], {}), 24: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link', 'document-link'], 'required': False}), 25: ('wagtail.blocks.StructBlock', [[('heading', 9), ('text_introduction', 6), ('options', 18), ('data', 23), ('caption', 24)]], {}), 26: ('wagtail.blocks.TextBlock', (), {}), 27: ('wagtail.blocks.TextBlock', (), {'required': False}), 28: ('wagtail.blocks.StructBlock', [[('body', 26), ('citation', 27)]], {}), 29: ('wagtail.blocks.RichTextBlock', (), {'required': False}), 30: ('wagtail.blocks.CharBlock', (), {'help_text': 'Add an ARIA label if the link text does not describe the destination of the link (e.g. has ambiguous text like "Learn more" that is not descriptive on its own).', 'required': False}), 31: ('wagtail.blocks.CharBlock', (), {'default': '/', 'required': False}), 32: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'required': False}), 33: ('wagtail.blocks.StructBlock', [[('text', 6), ('aria_label', 30), ('url', 31), ('is_link_boldface', 32)]], {}), 34: ('wagtail.blocks.StructBlock', [[('slug_text', 6), ('paragraph_text', 29), ('button', 33)]], {}), 35: ('wagtail.blocks.ListBlock', (33,), {}), 36: ('wagtail.blocks.StructBlock', [[('heading', 6), ('paragraph', 29), ('links', 35)]], {}), 37: ('v1.blocks.ReusableTextChooserBlock', ('v1.ReusableText',), {}), 38: ('v1.blocks.ReusableNotificationChooserBlock', ('v1.ReusableNotification',), {}), 39: ('v1.blocks.EmailSignUpChooserBlock', (), {}), 40: ('wagtail.blocks.RichTextBlock', (), {'label': 'Well', 'required': False}), 41: ('wagtail.blocks.StructBlock', [[('content', 40)]], {}), 42: ('wagtail.blocks.StreamBlock', [[('content', 0), ('content_with_anchor', 4), ('content_with_footnotes', 5), ('heading', 9), ('image', 17), ('table', 25), ('quote', 28), ('cta', 34), ('related_links', 36), ('reusable_text', 37), ('reusable_notification', 38), ('email_signup', 39), ('well', 41)]], {}), 43: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('50-50', '50/50'), ('33-33-33', '33/33/33'), ('25-75', '25/75')], 'help_text': 'Choose the number and width of info unit columns.', 'label': 'Format'}), 44: ('wagtail.blocks.BooleanBlock', (), {'default': True, 'help_text': "Check this to link all images and headings to the URL of the first link in their unit's list, if there is a link.", 'required': False}), 45: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check this to add a horizontal rule line to top of info unit group.', 'required': False}), 46: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check this to show horizontal rule lines between info units.', 'label': 'Show rule lines between items', 'required': False}), 47: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('none', 'None'), ('rounded', 'Rounded corners'), ('circle', 'Circle')], 'help_text': 'Adds a <em>border-radius</em> class to images in this group, allowing for a rounded or circular border.', 'label': 'Border radius for images?', 'required': False}), 48: ('wagtail.blocks.StructBlock', [[('text', 6), ('level', 7), ('icon', 8)]], {'default': {'level': 'h3'}, 'required': False}), 49: ('wagtail.blocks.RichTextBlock', (), {'blank': True, 'required': False}), 50: ('wagtail.blocks.ListBlock', (33,), {'required': False}), 51: ('wagtail.blocks.StructBlock', [[('image', 12), ('heading', 48), ('body', 49), ('links', 50)]], {}), 52: ('wagtail.blocks.ListBlock', (51,), {'default': []}), 53: ('wagtail.blocks.StructBlock', [[('format', 43), ('heading', 9), ('intro', 29), ('link_image_and_heading', 44), ('has_top_rule_line', 45), ('lines_between_items', 46), ('border_radius_image', 47), ('info_units', 52)]], {}), 54: ('wagtail.blocks.CharBlock', (), {'help_text': 'Added as an <code>&lt;h3&gt;</code> at the top of this block. Also adds a wrapping <code>&lt;div&gt;</code> whose <code>id</code> attribute comes from a slugified version of this heading, creating an anchor that can be used when linking to this part of the page.', 'required': False}), 55: ('wagtail.blocks.BooleanBlock', (), {'required': False}), 56: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check this to add a horizontal rule line to top of expandable group.', 'required': False}), 57: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check this to add FAQ schema markup to expandables.', 'label': 'Uses FAQ schema', 'required': False}), 58: ('wagtail.blocks.StreamBlock', [[('paragraph', 29), ('well', 41), ('links', 33), ('info_unit_group', 53)]], {'blank': True}), 59: ('wagtail.blocks.StructBlock', [[('label', 6), ('icon', 6), ('is_bordered', 55), ('is_midtone', 55), ('is_expanded', 55), ('is_expanded_padding', 55), ('content', 58)]], {}), 60: ('wagtail.blocks.ListBlock', (59,), {}), 61: ('wagtail.blocks.StructBlock', [[('heading', 54), ('body', 29), ('is_accordion', 55), ('has_top_rule_line', 56), ('is_faq', 57), ('expandables', 60)]], {}), 62: ('wagtail.blocks.RawHTMLBlock', (), {'label': 'Raw HTML block'})}),
        ),
    ]
