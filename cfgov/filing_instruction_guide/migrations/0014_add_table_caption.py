# Generated by Django 4.2.16 on 2024-09-23 13:54

from django.db import migrations
import wagtail.fields


class Migration(migrations.Migration):

    dependencies = [
        ('filing_instruction_guide', '0013_add_footnotes'),
    ]

    operations = [
        migrations.AlterField(
            model_name='figcontentpage',
            name='content',
            field=wagtail.fields.StreamField([('Fig_Section', 101), ('Fig_Subsection', 104), ('Fig_Level_3_Subsection', 106)], block_lookup={0: ('wagtail.blocks.TextBlock', (), {'label': 'Section header (h2)'}), 1: ('wagtail.blocks.TextBlock', (), {'help_text': 'Will be filled in automatically upon save.', 'required': False}), 2: ('wagtail.blocks.RichTextBlock', (), {'icon': 'edit'}), 3: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('50-50', '50/50'), ('33-33-33', '33/33/33'), ('25-75', '25/75')], 'help_text': 'Choose the number and width of info unit columns.', 'label': 'Format'}), 4: ('wagtail.blocks.CharBlock', (), {'required': False}), 5: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('h2', 'H2'), ('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5')]}), 6: ('wagtail.blocks.CharBlock', (), {'help_text': 'Input the name of an icon to appear to the left of the heading. E.g., approved, help-round, etc. <a href="https://cfpb.github.io/design-system/foundation/iconography">See full list of icons</a>', 'required': False}), 7: ('wagtail.blocks.StructBlock', [[('text', 4), ('level', 5), ('icon', 6)]], {'required': False}), 8: ('wagtail.blocks.RichTextBlock', (), {'required': False}), 9: ('wagtail.blocks.BooleanBlock', (), {'default': True, 'help_text': "Check this to link all images and headings to the URL of the first link in their unit's list, if there is a link.", 'required': False}), 10: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check this to add a horizontal rule line to top of info unit group.', 'required': False}), 11: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check this to show horizontal rule lines between info units.', 'label': 'Show rule lines between items', 'required': False}), 12: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('none', 'None'), ('rounded', 'Rounded corners'), ('circle', 'Circle')], 'help_text': 'Adds a <em>border-radius</em> class to images in this group, allowing for a rounded or circular border.', 'label': 'Border radius for images?', 'required': False}), 13: ('wagtail.images.blocks.ImageChooserBlock', (), {'required': False}), 14: ('wagtail.blocks.CharBlock', (), {'help_text': "No character limit, but be as succinct as possible. If the image is decorative (i.e., a screenreader wouldn't have anything useful to say about it), leave this field blank.", 'required': False}), 15: ('wagtail.blocks.StructBlock', [[('upload', 13), ('alt', 14)]], {}), 16: ('wagtail.blocks.StructBlock', [[('text', 4), ('level', 5), ('icon', 6)]], {'default': {'level': 'h3'}, 'required': False}), 17: ('wagtail.blocks.RichTextBlock', (), {'blank': True, 'required': False}), 18: ('wagtail.blocks.CharBlock', (), {'help_text': 'Add an ARIA label if the link text does not describe the destination of the link (e.g. has ambiguous text like "Learn more" that is not descriptive on its own).', 'required': False}), 19: ('wagtail.blocks.CharBlock', (), {'default': '/', 'required': False}), 20: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'required': False}), 21: ('wagtail.blocks.StructBlock', [[('text', 4), ('aria_label', 18), ('url', 19), ('is_link_boldface', 20)]], {}), 22: ('wagtail.blocks.ListBlock', (21,), {'required': False}), 23: ('wagtail.blocks.StructBlock', [[('image', 15), ('heading', 16), ('body', 17), ('links', 22)]], {}), 24: ('wagtail.blocks.ListBlock', (23,), {'default': []}), 25: ('wagtail.blocks.StructBlock', [[('format', 3), ('heading', 7), ('intro', 8), ('link_image_and_heading', 9), ('has_top_rule_line', 10), ('lines_between_items', 11), ('border_radius_image', 12), ('info_units', 24)]], {}), 26: ('wagtail.blocks.RichTextBlock', (), {'label': 'Well', 'required': False}), 27: ('wagtail.blocks.StructBlock', [[('content', 26)]], {}), 28: ('wagtail.blocks.CharBlock', (), {'required': True}), 29: ('wagtail.blocks.TextBlock', (), {'required': False}), 30: ('wagtail.blocks.TextBlock', (), {'help_text': 'Accessible description of the chart content', 'required': True}), 31: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('bar', 'Bar'), ('datetime', 'Date/time'), ('line', 'Line'), ('tilemap', 'Tile grid map')]}), 32: ('wagtail.blocks.TextBlock', (), {'help_text': "URL of the chart's data source or an array of JSON data", 'required': True, 'rows': 2}), 33: ('wagtail.blocks.TextBlock', (), {'help_text': 'For charts pulling from a separate source file, include a list of the column headers (from a CSV file) or keys (from a JSON file) to include in the chart as  ["HEADER/KEY1", "HEADER/KEY2"]. To change how the data is labeled in the chart, include the correct labels with the format [{"key": "HEADER/KEY1", "label": "NEWLABEL"}, {"key": "HEADER/KEY2", "label": "NEWLABEL2"}]', 'required': False}), 34: ('wagtail.blocks.BooleanBlock', (), {'default': True, 'help_text': 'Uncheck this option to initially only show the first data  series in the chart. Leave checked to show all data  series by default. Users can always turn data series on  or off by interacting with the chart legend. ', 'required': False}), 35: ('wagtail.blocks.TextBlock', (), {'help_text': 'The column header (CSV), key or data array (JSON) to include as the source of x-axis values.', 'required': False}), 36: ('wagtail.blocks.CharBlock', (), {'help_text': "Name the javascript function in chart-hooks.js to run on the provided data before handing it to the chart. Can also provide '___'-separated arguments to this function which are passed in as arguments 2 to n", 'required': False}), 37: ('wagtail.blocks.TextBlock', (), {'help_text': 'If the chart needs the option for users to filter the data shown, for example by date or geographic region, provide the JSON objects to filter on, in the format  {key: "KEY", "label": "LABEL"}', 'required': False}), 38: ('wagtail.blocks.TextBlock', (), {'help_text': 'A JSON object with style overrides for the underlying Highcharts chart. No object merging is done, nested objects should be referenced with dot notation: {"tooltip.shape": "circle"}', 'required': False}), 39: ('wagtail.blocks.IntegerBlock', (), {'blank': True, 'help_text': 'A number to determine how many months of the data are projected values', 'max_value': 12, 'min_value': 0, 'null': True, 'required': False}), 40: ('wagtail.blocks.CharBlock', (), {'help_text': 'Attribution for the data source', 'required': False}), 41: ('wagtail.blocks.CharBlock', (), {'help_text': 'When the underlying data was published', 'required': False}), 42: ('wagtail.blocks.CharBlock', (), {'help_text': 'Custom text for the chart download field. Required to display a download link.', 'required': False}), 43: ('wagtail.blocks.CharBlock', (), {'help_text': 'Location of a file to download, if different from the data source', 'required': False}), 44: ('wagtail.blocks.TextBlock', (), {'help_text': 'General chart information', 'required': False}), 45: ('wagtail.blocks.StructBlock', [[('title', 28), ('subtitle', 29), ('description', 30), ('figure_number', 4), ('chart_type', 31), ('data_source', 32), ('data_series', 33), ('show_all_series_by_default', 34), ('x_axis_source', 35), ('transform', 36), ('x_axis_label', 4), ('y_axis_label', 4), ('filters', 37), ('style_overrides', 38), ('projected_months', 39), ('source_credits', 40), ('date_published', 41), ('download_text', 42), ('download_file', 43), ('notes', 44)]], {}), 46: ('wagtail.blocks.CharBlock', (), {'help_text': 'Added as an <code>&lt;h3&gt;</code> at the top of this block. Also adds a wrapping <code>&lt;div&gt;</code> whose <code>id</code> attribute comes from a slugified version of this heading, creating an anchor that can be used when linking to this part of the page.', 'required': False}), 47: ('wagtail.blocks.BooleanBlock', (), {'required': False}), 48: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check this to add a horizontal rule line to top of expandable group.', 'required': False}), 49: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check this to add FAQ schema markup to expandables.', 'label': 'Uses FAQ schema', 'required': False}), 50: ('wagtail.blocks.StreamBlock', [[('paragraph', 8), ('well', 27), ('links', 21), ('info_unit_group', 25)]], {'blank': True}), 51: ('wagtail.blocks.StructBlock', [[('label', 4), ('icon', 4), ('is_bordered', 47), ('is_midtone', 47), ('is_expanded', 47), ('is_expanded_padding', 47), ('content', 50)]], {}), 52: ('wagtail.blocks.ListBlock', (51,), {}), 53: ('wagtail.blocks.StructBlock', [[('heading', 46), ('body', 8), ('is_accordion', 47), ('has_top_rule_line', 48), ('is_faq', 49), ('expandables', 52)]], {}), 54: ('wagtail.blocks.RegexBlock', (), {'error_messages': {'invalid': 'The YouTube video ID is in the wrong format.'}, 'help_text': 'Enter the YouTube video ID, which is located at the end of the video URL, after "v=". For example, the video ID for https://www.youtube.com/watch?v=1V0Ax9OIc84 is 1V0Ax9OIc84.', 'label': 'YouTube video ID', 'regex': '^[\\w-]{11}$', 'required': False}), 55: ('wagtail.images.blocks.ImageChooserBlock', (), {'help_text': 'Optional thumbnail image to show before and after the video plays. If the thumbnail image is not set here, the video player will default to showing the thumbnail that was set in (or automatically chosen by) YouTube.', 'required': False}), 56: ('wagtail.blocks.StructBlock', [[('video_id', 54), ('thumbnail_image', 55)]], {}), 57: ('wagtail.blocks.RawHTMLBlock', (), {'label': 'Raw HTML block'}), 58: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('information', 'Information'), ('warning', 'Warning')]}), 59: ('wagtail.blocks.CharBlock', (), {'help_text': 'The main notification message to display.', 'required': True}), 60: ('wagtail.blocks.TextBlock', (), {'help_text': 'Explanation text appears below the message in smaller type.', 'required': False}), 61: ('wagtail.blocks.ListBlock', (21,), {'help_text': 'Links appear on their own lines below the explanation.', 'required': False}), 62: ('wagtail.blocks.StructBlock', [[('type', 58), ('message', 59), ('explanation', 60), ('links', 61)]], {}), 63: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check this to add a horizontal rule line to top of FAQ group.', 'required': False}), 64: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check this to show horizontal rule lines between FAQ items.', 'label': 'Show rule lines between items', 'required': False}), 65: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('h2', 'h2'), ('h3', 'h3'), ('h4', 'h4'), ('p', 'p')], 'help_text': 'HTML tag for questions.'}), 66: ('wagtail.blocks.CharBlock', (), {'blank': True, 'help_text': "Add an optional anchor link tag for this question. Tag should be unique and use dashes or underscores for separation instead of spaces (ie, 'question-one-tag')", 'max_length': 500, 'required': False}), 67: ('wagtail.blocks.CharBlock', (), {'max_length': 500}), 68: ('wagtail.blocks.RichTextBlock', (), {}), 69: ('wagtail.blocks.CharBlock', (), {'help_text': '\n            ID will be auto-generated on save.\n            However, you may enter some human-friendly text that\n            will be incorporated to make it easier to read.\n        ', 'label': 'ID for this content block', 'required': False}), 70: ('wagtail.blocks.StructBlock', [[('link_id', 69)]], {}), 71: ('wagtail.blocks.StructBlock', [[('content_block', 68), ('anchor_link', 70)]], {}), 72: ('wagtail_footnotes.blocks.RichTextBlockWithFootnotes', (), {'features': ['anchor-identifier', 'h2', 'h3', 'h4', 'h5', 'hr', 'ol', 'ul', 'bold', 'italic', 'superscript', 'blockquote', 'link', 'document-link', 'image', 'icon', 'footnotes']}), 73: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('full', 'Full width'), (470, '470px'), (270, '270px'), (170, '170px')]}), 74: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('right', 'right'), ('left', 'left')], 'help_text': 'Does not apply if the image is full-width'}), 75: ('wagtail.blocks.RichTextBlock', (), {'label': 'Caption', 'required': False}), 76: ('wagtail.blocks.BooleanBlock', (), {'default': True, 'help_text': 'Check to add a horizontal rule line to bottom of inset.', 'label': 'Has bottom rule line', 'required': False}), 77: ('wagtail.blocks.StructBlock', [[('image', 15), ('image_width', 73), ('image_position', 74), ('text', 75), ('is_bottom_rule', 76)]], {}), 78: ('wagtail.blocks.MultipleChoiceBlock', [], {'choices': [('is_full_width', 'Display the table at full width'), ('stack_on_mobile', 'Stack the table columns on mobile')], 'required': False}), 79: ('wagtail.blocks.CharBlock', (), {}), 80: ('wagtail.blocks.FloatBlock', (), {}), 81: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'ol', 'ul', 'link', 'document-link', 'superscript']}), 82: ('wagtail_footnotes.blocks.RichTextBlockWithFootnotes', (), {'features': ['bold', 'italic', 'ol', 'ul', 'link', 'document-link', 'superscript', 'footnotes']}), 83: ('wagtail.contrib.typed_table_block.blocks.TypedTableBlock', [[('text', 79), ('numeric', 80), ('rich_text', 81), ('rich_text_with_footnotes', 82)]], {}), 84: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link', 'document-link'], 'required': False}), 85: ('wagtail.blocks.StructBlock', [[('heading', 7), ('text_introduction', 4), ('options', 78), ('data', 83), ('caption', 84)]], {}), 86: ('wagtail.blocks.TextBlock', (), {}), 87: ('wagtail.blocks.StructBlock', [[('body', 86), ('citation', 29)]], {}), 88: ('wagtail.blocks.StructBlock', [[('slug_text', 4), ('paragraph_text', 8), ('button', 21)]], {}), 89: ('wagtail.blocks.ListBlock', (21,), {}), 90: ('wagtail.blocks.StructBlock', [[('heading', 4), ('paragraph', 8), ('links', 89)]], {}), 91: ('v1.blocks.ReusableTextChooserBlock', ('v1.ReusableText',), {}), 92: ('v1.blocks.ReusableNotificationChooserBlock', ('v1.ReusableNotification',), {}), 93: ('v1.blocks.EmailSignUpChooserBlock', (), {}), 94: ('wagtail.blocks.StreamBlock', [[('content', 2), ('content_with_anchor', 71), ('content_with_footnotes', 72), ('heading', 7), ('image', 77), ('table', 85), ('quote', 87), ('cta', 88), ('related_links', 90), ('reusable_text', 91), ('reusable_notification', 92), ('email_signup', 93), ('well', 27)]], {}), 95: ('wagtail.blocks.StreamBlock', [[('full_width_text', 94), ('info_unit_group', 25)]], {}), 96: ('wagtail.blocks.StructBlock', [[('anchor_tag', 66), ('question', 67), ('answer', 95)]], {}), 97: ('wagtail.blocks.ListBlock', (96,), {'label': 'FAQ items'}), 98: ('wagtail.blocks.StructBlock', [[('has_top_rule_line', 63), ('lines_between_items', 64), ('question_tag', 65), ('faq_items', 97)]], {}), 99: ('filing_instruction_guide.blocks.FigDataPointsBlock', (), {}), 100: ('wagtail.blocks.StreamBlock', [[('content', 2), ('info_unit_group', 25), ('well', 27), ('simple_chart', 45), ('expandable_group', 53), ('expandable', 51), ('video_player', 56), ('raw_html_block', 57), ('notification', 62), ('faq_group', 98), ('data_points_block', 99)]], {'block_counts': {'data_points_block': {'max_num': 1}}, 'required': False}), 101: ('wagtail.blocks.StructBlock', [[('header', 0), ('section_id', 1), ('content', 100)]], {}), 102: ('wagtail.blocks.TextBlock', (), {'label': 'Subsection header (h3)'}), 103: ('wagtail.blocks.StreamBlock', [[('content', 2), ('info_unit_group', 25), ('well', 27), ('simple_chart', 45), ('expandable_group', 53), ('expandable', 51), ('video_player', 56), ('raw_html_block', 57), ('notification', 62), ('faq_group', 98)]], {'required': False}), 104: ('wagtail.blocks.StructBlock', [[('header', 102), ('section_id', 1), ('content', 103)]], {}), 105: ('wagtail.blocks.TextBlock', (), {'label': 'Level 3 subsection header (h4)'}), 106: ('wagtail.blocks.StructBlock', [[('header', 105), ('section_id', 1), ('content', 103)]], {})}),
        ),
        migrations.AlterField(
            model_name='figcontentpage',
            name='top_content',
            field=wagtail.fields.StreamField([('top_content', 97)], blank=True, block_lookup={0: ('wagtail.blocks.RichTextBlock', (), {'icon': 'edit'}), 1: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('50-50', '50/50'), ('33-33-33', '33/33/33'), ('25-75', '25/75')], 'help_text': 'Choose the number and width of info unit columns.', 'label': 'Format'}), 2: ('wagtail.blocks.CharBlock', (), {'required': False}), 3: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('h2', 'H2'), ('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5')]}), 4: ('wagtail.blocks.CharBlock', (), {'help_text': 'Input the name of an icon to appear to the left of the heading. E.g., approved, help-round, etc. <a href="https://cfpb.github.io/design-system/foundation/iconography">See full list of icons</a>', 'required': False}), 5: ('wagtail.blocks.StructBlock', [[('text', 2), ('level', 3), ('icon', 4)]], {'required': False}), 6: ('wagtail.blocks.RichTextBlock', (), {'required': False}), 7: ('wagtail.blocks.BooleanBlock', (), {'default': True, 'help_text': "Check this to link all images and headings to the URL of the first link in their unit's list, if there is a link.", 'required': False}), 8: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check this to add a horizontal rule line to top of info unit group.', 'required': False}), 9: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check this to show horizontal rule lines between info units.', 'label': 'Show rule lines between items', 'required': False}), 10: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('none', 'None'), ('rounded', 'Rounded corners'), ('circle', 'Circle')], 'help_text': 'Adds a <em>border-radius</em> class to images in this group, allowing for a rounded or circular border.', 'label': 'Border radius for images?', 'required': False}), 11: ('wagtail.images.blocks.ImageChooserBlock', (), {'required': False}), 12: ('wagtail.blocks.CharBlock', (), {'help_text': "No character limit, but be as succinct as possible. If the image is decorative (i.e., a screenreader wouldn't have anything useful to say about it), leave this field blank.", 'required': False}), 13: ('wagtail.blocks.StructBlock', [[('upload', 11), ('alt', 12)]], {}), 14: ('wagtail.blocks.StructBlock', [[('text', 2), ('level', 3), ('icon', 4)]], {'default': {'level': 'h3'}, 'required': False}), 15: ('wagtail.blocks.RichTextBlock', (), {'blank': True, 'required': False}), 16: ('wagtail.blocks.CharBlock', (), {'help_text': 'Add an ARIA label if the link text does not describe the destination of the link (e.g. has ambiguous text like "Learn more" that is not descriptive on its own).', 'required': False}), 17: ('wagtail.blocks.CharBlock', (), {'default': '/', 'required': False}), 18: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'required': False}), 19: ('wagtail.blocks.StructBlock', [[('text', 2), ('aria_label', 16), ('url', 17), ('is_link_boldface', 18)]], {}), 20: ('wagtail.blocks.ListBlock', (19,), {'required': False}), 21: ('wagtail.blocks.StructBlock', [[('image', 13), ('heading', 14), ('body', 15), ('links', 20)]], {}), 22: ('wagtail.blocks.ListBlock', (21,), {'default': []}), 23: ('wagtail.blocks.StructBlock', [[('format', 1), ('heading', 5), ('intro', 6), ('link_image_and_heading', 7), ('has_top_rule_line', 8), ('lines_between_items', 9), ('border_radius_image', 10), ('info_units', 22)]], {}), 24: ('wagtail.blocks.RichTextBlock', (), {'label': 'Well', 'required': False}), 25: ('wagtail.blocks.StructBlock', [[('content', 24)]], {}), 26: ('wagtail.blocks.CharBlock', (), {'required': True}), 27: ('wagtail.blocks.TextBlock', (), {'required': False}), 28: ('wagtail.blocks.TextBlock', (), {'help_text': 'Accessible description of the chart content', 'required': True}), 29: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('bar', 'Bar'), ('datetime', 'Date/time'), ('line', 'Line'), ('tilemap', 'Tile grid map')]}), 30: ('wagtail.blocks.TextBlock', (), {'help_text': "URL of the chart's data source or an array of JSON data", 'required': True, 'rows': 2}), 31: ('wagtail.blocks.TextBlock', (), {'help_text': 'For charts pulling from a separate source file, include a list of the column headers (from a CSV file) or keys (from a JSON file) to include in the chart as  ["HEADER/KEY1", "HEADER/KEY2"]. To change how the data is labeled in the chart, include the correct labels with the format [{"key": "HEADER/KEY1", "label": "NEWLABEL"}, {"key": "HEADER/KEY2", "label": "NEWLABEL2"}]', 'required': False}), 32: ('wagtail.blocks.BooleanBlock', (), {'default': True, 'help_text': 'Uncheck this option to initially only show the first data  series in the chart. Leave checked to show all data  series by default. Users can always turn data series on  or off by interacting with the chart legend. ', 'required': False}), 33: ('wagtail.blocks.TextBlock', (), {'help_text': 'The column header (CSV), key or data array (JSON) to include as the source of x-axis values.', 'required': False}), 34: ('wagtail.blocks.CharBlock', (), {'help_text': "Name the javascript function in chart-hooks.js to run on the provided data before handing it to the chart. Can also provide '___'-separated arguments to this function which are passed in as arguments 2 to n", 'required': False}), 35: ('wagtail.blocks.TextBlock', (), {'help_text': 'If the chart needs the option for users to filter the data shown, for example by date or geographic region, provide the JSON objects to filter on, in the format  {key: "KEY", "label": "LABEL"}', 'required': False}), 36: ('wagtail.blocks.TextBlock', (), {'help_text': 'A JSON object with style overrides for the underlying Highcharts chart. No object merging is done, nested objects should be referenced with dot notation: {"tooltip.shape": "circle"}', 'required': False}), 37: ('wagtail.blocks.IntegerBlock', (), {'blank': True, 'help_text': 'A number to determine how many months of the data are projected values', 'max_value': 12, 'min_value': 0, 'null': True, 'required': False}), 38: ('wagtail.blocks.CharBlock', (), {'help_text': 'Attribution for the data source', 'required': False}), 39: ('wagtail.blocks.CharBlock', (), {'help_text': 'When the underlying data was published', 'required': False}), 40: ('wagtail.blocks.CharBlock', (), {'help_text': 'Custom text for the chart download field. Required to display a download link.', 'required': False}), 41: ('wagtail.blocks.CharBlock', (), {'help_text': 'Location of a file to download, if different from the data source', 'required': False}), 42: ('wagtail.blocks.TextBlock', (), {'help_text': 'General chart information', 'required': False}), 43: ('wagtail.blocks.StructBlock', [[('title', 26), ('subtitle', 27), ('description', 28), ('figure_number', 2), ('chart_type', 29), ('data_source', 30), ('data_series', 31), ('show_all_series_by_default', 32), ('x_axis_source', 33), ('transform', 34), ('x_axis_label', 2), ('y_axis_label', 2), ('filters', 35), ('style_overrides', 36), ('projected_months', 37), ('source_credits', 38), ('date_published', 39), ('download_text', 40), ('download_file', 41), ('notes', 42)]], {}), 44: ('wagtail.blocks.CharBlock', (), {'help_text': 'Added as an <code>&lt;h3&gt;</code> at the top of this block. Also adds a wrapping <code>&lt;div&gt;</code> whose <code>id</code> attribute comes from a slugified version of this heading, creating an anchor that can be used when linking to this part of the page.', 'required': False}), 45: ('wagtail.blocks.BooleanBlock', (), {'required': False}), 46: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check this to add a horizontal rule line to top of expandable group.', 'required': False}), 47: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check this to add FAQ schema markup to expandables.', 'label': 'Uses FAQ schema', 'required': False}), 48: ('wagtail.blocks.StreamBlock', [[('paragraph', 6), ('well', 25), ('links', 19), ('info_unit_group', 23)]], {'blank': True}), 49: ('wagtail.blocks.StructBlock', [[('label', 2), ('icon', 2), ('is_bordered', 45), ('is_midtone', 45), ('is_expanded', 45), ('is_expanded_padding', 45), ('content', 48)]], {}), 50: ('wagtail.blocks.ListBlock', (49,), {}), 51: ('wagtail.blocks.StructBlock', [[('heading', 44), ('body', 6), ('is_accordion', 45), ('has_top_rule_line', 46), ('is_faq', 47), ('expandables', 50)]], {}), 52: ('wagtail.blocks.RegexBlock', (), {'error_messages': {'invalid': 'The YouTube video ID is in the wrong format.'}, 'help_text': 'Enter the YouTube video ID, which is located at the end of the video URL, after "v=". For example, the video ID for https://www.youtube.com/watch?v=1V0Ax9OIc84 is 1V0Ax9OIc84.', 'label': 'YouTube video ID', 'regex': '^[\\w-]{11}$', 'required': False}), 53: ('wagtail.images.blocks.ImageChooserBlock', (), {'help_text': 'Optional thumbnail image to show before and after the video plays. If the thumbnail image is not set here, the video player will default to showing the thumbnail that was set in (or automatically chosen by) YouTube.', 'required': False}), 54: ('wagtail.blocks.StructBlock', [[('video_id', 52), ('thumbnail_image', 53)]], {}), 55: ('wagtail.blocks.RawHTMLBlock', (), {'label': 'Raw HTML block'}), 56: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('information', 'Information'), ('warning', 'Warning')]}), 57: ('wagtail.blocks.CharBlock', (), {'help_text': 'The main notification message to display.', 'required': True}), 58: ('wagtail.blocks.TextBlock', (), {'help_text': 'Explanation text appears below the message in smaller type.', 'required': False}), 59: ('wagtail.blocks.ListBlock', (19,), {'help_text': 'Links appear on their own lines below the explanation.', 'required': False}), 60: ('wagtail.blocks.StructBlock', [[('type', 56), ('message', 57), ('explanation', 58), ('links', 59)]], {}), 61: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check this to add a horizontal rule line to top of FAQ group.', 'required': False}), 62: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check this to show horizontal rule lines between FAQ items.', 'label': 'Show rule lines between items', 'required': False}), 63: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('h2', 'h2'), ('h3', 'h3'), ('h4', 'h4'), ('p', 'p')], 'help_text': 'HTML tag for questions.'}), 64: ('wagtail.blocks.CharBlock', (), {'blank': True, 'help_text': "Add an optional anchor link tag for this question. Tag should be unique and use dashes or underscores for separation instead of spaces (ie, 'question-one-tag')", 'max_length': 500, 'required': False}), 65: ('wagtail.blocks.CharBlock', (), {'max_length': 500}), 66: ('wagtail.blocks.RichTextBlock', (), {}), 67: ('wagtail.blocks.CharBlock', (), {'help_text': '\n            ID will be auto-generated on save.\n            However, you may enter some human-friendly text that\n            will be incorporated to make it easier to read.\n        ', 'label': 'ID for this content block', 'required': False}), 68: ('wagtail.blocks.StructBlock', [[('link_id', 67)]], {}), 69: ('wagtail.blocks.StructBlock', [[('content_block', 66), ('anchor_link', 68)]], {}), 70: ('wagtail_footnotes.blocks.RichTextBlockWithFootnotes', (), {'features': ['anchor-identifier', 'h2', 'h3', 'h4', 'h5', 'hr', 'ol', 'ul', 'bold', 'italic', 'superscript', 'blockquote', 'link', 'document-link', 'image', 'icon', 'footnotes']}), 71: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('full', 'Full width'), (470, '470px'), (270, '270px'), (170, '170px')]}), 72: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('right', 'right'), ('left', 'left')], 'help_text': 'Does not apply if the image is full-width'}), 73: ('wagtail.blocks.RichTextBlock', (), {'label': 'Caption', 'required': False}), 74: ('wagtail.blocks.BooleanBlock', (), {'default': True, 'help_text': 'Check to add a horizontal rule line to bottom of inset.', 'label': 'Has bottom rule line', 'required': False}), 75: ('wagtail.blocks.StructBlock', [[('image', 13), ('image_width', 71), ('image_position', 72), ('text', 73), ('is_bottom_rule', 74)]], {}), 76: ('wagtail.blocks.MultipleChoiceBlock', [], {'choices': [('is_full_width', 'Display the table at full width'), ('stack_on_mobile', 'Stack the table columns on mobile')], 'required': False}), 77: ('wagtail.blocks.CharBlock', (), {}), 78: ('wagtail.blocks.FloatBlock', (), {}), 79: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'ol', 'ul', 'link', 'document-link', 'superscript']}), 80: ('wagtail_footnotes.blocks.RichTextBlockWithFootnotes', (), {'features': ['bold', 'italic', 'ol', 'ul', 'link', 'document-link', 'superscript', 'footnotes']}), 81: ('wagtail.contrib.typed_table_block.blocks.TypedTableBlock', [[('text', 77), ('numeric', 78), ('rich_text', 79), ('rich_text_with_footnotes', 80)]], {}), 82: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link', 'document-link'], 'required': False}), 83: ('wagtail.blocks.StructBlock', [[('heading', 5), ('text_introduction', 2), ('options', 76), ('data', 81), ('caption', 82)]], {}), 84: ('wagtail.blocks.TextBlock', (), {}), 85: ('wagtail.blocks.StructBlock', [[('body', 84), ('citation', 27)]], {}), 86: ('wagtail.blocks.StructBlock', [[('slug_text', 2), ('paragraph_text', 6), ('button', 19)]], {}), 87: ('wagtail.blocks.ListBlock', (19,), {}), 88: ('wagtail.blocks.StructBlock', [[('heading', 2), ('paragraph', 6), ('links', 87)]], {}), 89: ('v1.blocks.ReusableTextChooserBlock', ('v1.ReusableText',), {}), 90: ('v1.blocks.ReusableNotificationChooserBlock', ('v1.ReusableNotification',), {}), 91: ('v1.blocks.EmailSignUpChooserBlock', (), {}), 92: ('wagtail.blocks.StreamBlock', [[('content', 0), ('content_with_anchor', 69), ('content_with_footnotes', 70), ('heading', 5), ('image', 75), ('table', 83), ('quote', 85), ('cta', 86), ('related_links', 88), ('reusable_text', 89), ('reusable_notification', 90), ('email_signup', 91), ('well', 25)]], {}), 93: ('wagtail.blocks.StreamBlock', [[('full_width_text', 92), ('info_unit_group', 23)]], {}), 94: ('wagtail.blocks.StructBlock', [[('anchor_tag', 64), ('question', 65), ('answer', 93)]], {}), 95: ('wagtail.blocks.ListBlock', (94,), {'label': 'FAQ items'}), 96: ('wagtail.blocks.StructBlock', [[('has_top_rule_line', 61), ('lines_between_items', 62), ('question_tag', 63), ('faq_items', 95)]], {}), 97: ('wagtail.blocks.StreamBlock', [[('content', 0), ('info_unit_group', 23), ('well', 25), ('simple_chart', 43), ('expandable_group', 51), ('expandable', 49), ('video_player', 54), ('raw_html_block', 55), ('notification', 60), ('faq_group', 96)]], {'help_text': 'Content that will appear above the first FIG section', 'required': False})}),
        ),
    ]
