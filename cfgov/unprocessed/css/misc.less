/* ==========================================================================
   cfgov-refresh
   misc
   ========================================================================== */

/* topdoc
  name: Line container
  family: cfgov-misc
  notes:
    - ".line-container is meant to contain anything you want with consistent top
      and bottom padding. It uses a margin collapsing trick in CSS to achieve
      this consistency which this is why .line-container_body is needed. The
      only caveat to this consistency is if you place something inside of it
      that has a bottom-margin that is larger than the .line-container padding."
  patterns:
    - name: Basic line container
      markup: |
        <div class="line-container">
            <div class="line-container_body">
                <p>
                    ¯\_(ツ)_/¯<br>
                    There is a light border above and below me!
                </p>
            </div>
        </div>
      codenotes:
        - |
          Structural cheat sheet:
          -----------------------
          .line-container
            .line-container_body
    - name: Line container with no top border or padding (example 1)
      markup: |
        <div class="line-container line-container__no-top">
            <div class="line-container_body">
                <header class="m-slug-header">
                    <h2 class="a-heading">
                        Blog summary
                    </h2>
                </header>
                <p>
                    Lorem ipsum dolor sit amet, consectetur adipisicing elit.
                    Dolorum ex provident dolorem ipsum molestias eius tenetur
                    doloribus obcaecati illum autem! Fuga commodi natus
                    distinctio accusantium esse ab dolore in aliquid.
                </p>
            </div>
        </div>
      codenotes:
        - |
          Structural cheat sheet:
          -----------------------
          .line-container.line-container__no-top
            .line-container_body
    - name: Line container with no top border or padding (example 2)
      markup: |
        <div class="line-container">
            <div class="line-container_body line-container__no-top">
                <p>
                    <img src="http://placekitten.com/700/200" alt="">
                </p>
                <h2>
                    Photo heading
                </h2>
                <p>
                    Lorem ipsum dolor sit amet, consectetur adipisicing elit.
                    Dolorum ex provident dolorem ipsum molestias eius tenetur
                    doloribus obcaecati illum autem! Fuga commodi natus
                    distinctio accusantium esse ab dolore in aliquid.
                </p>
            </div>
        </div>
  tags:
    - cfgov-misc
*/

// TODO: `line-container` is only used on events/_event-detail.html.
//       Refactor to use CF classes.

.line-container {
    margin: 0 0 unit(30px / @base-font-size-px, em);
    border-top: 1px solid @gray-20;
    border-bottom: 1px solid @gray-20;

    &_body {
        // 26px is eyeballed to 30px when considering line heights of potential
        // children.
        margin: unit(26px / @base-font-size-px, em)
                0
                unit(26px / @base-font-size-px, em);
    }

    &__no-top {
        border-top: 0;
        .line-container_body {
            margin-top: 0;
        }
    }
}


/* topdoc
  name: Padded container
  family: cfgov-misc
  notes:
    - ".padded-container is meant to contain anything you want with consistent
      padding. It uses a margin collapsing trick in CSS to achieve this
      consistency which this is why .line-container_body is needed. The only
      caveat to this consistency is if you place something inside of it that has
      a bottom-margin that is larger than the .padded-container padding."
  patterns:
    - name: Basic padded container
      markup: |
        <div class="padded-container">
            <div class="padded-container_body">
                <p>
                    ¯\_(ツ)_/¯<br>
                    There is padding all around me!
                </p>
            </div>
        </div>
      codenotes:
        - |
          Structural cheat sheet:
          -----------------------
          .padded-container
            .padded-container_body
  tags:
    - cfgov-misc
*/

// TODO: `padded-container` is only used on external-site/index.html.
//       Refactor to use CF classes.

.padded-container {
    margin-bottom: unit(30px / @base-font-size-px, em);
    // Use pixels here, Opera doesn't like 1px represented as an em.
    // Maybe it rounds down or something?
    padding: 1px;
    background: @gray-10;

    &_body {
        // 23px is eyeballed to 30px when considering line heights of potential
        // children. One pixel has been taken off of each value to account for
        // the 1px padding on the parent. This padding stops margin collapsing
        // from extending outside of the padded box.
        margin: unit(23px / @base-font-size-px, em)
                unit(29px / @base-font-size-px, em)
                unit(23px / @base-font-size-px, em);
    }
}


/* topdoc
  name: Character icons
  family: cfgov-misc
  notes:
    - "A way to create icons that feature a single character on a circular
       background. Useful because cf-icons does not have any of this type of
       icon in its library. Typical use case would be to identify steps in a
       process."
  patterns:
    - name: Default usage
      markup: |
        <h2 class="char-icon char-icon__1">This is the first thing</h2>
  tags:
    - cfgov-misc
*/

// TODO: `char-icon` is only used on doing-business-with-us/index.html.
//       Refactor to use CF classes.

// Size of cicular background.
@icon-size: 1.5em;

.char-icon {
    &:before {
        display: inline-block;
        box-sizing: border-box;
        width: @icon-size;
        height: @icon-size;
        border-radius: 100%;
        margin-right: 0.375em;
        position: relative;
        background: @green;
        color: @white;
        .u-webfont-medium();
        line-height: @icon-size;
        text-align: center;
    }

    &__1:before { content: '1'; }
    &__2:before { content: '2'; }
    &__3:before { content: '3'; }
    &__4:before { content: '4'; }
    &__5:before { content: '5'; }
    &__6:before { content: '6'; }
    &__7:before { content: '7'; }
    &__8:before { content: '8'; }
    &__9:before { content: '9'; }
    &__0:before { content: '0'; }
    &__A:before { content: 'A'; }
    &__B:before { content: 'B'; }
    &__C:before { content: 'C'; }
    &__D:before { content: 'D'; }
    &__E:before { content: 'E'; }
    &__F:before { content: 'F'; }
    &__G:before { content: 'G'; }
    &__H:before { content: 'H'; }
    &__I:before { content: 'I'; }
    &__J:before { content: 'J'; }
    &__K:before { content: 'K'; }
    &__L:before { content: 'L'; }
    &__M:before { content: 'M'; }
    &__N:before { content: 'N'; }
    &__O:before { content: 'O'; }
    &__P:before { content: 'P'; }
    &__Q:before { content: 'Q'; }
    &__R:before { content: 'R'; }
    &__S:before { content: 'S'; }
    &__T:before { content: 'T'; }
    &__U:before { content: 'U'; }
    &__V:before { content: 'V'; }
    &__W:before { content: 'W'; }
    &__X:before { content: 'X'; }
    &__Y:before { content: 'Y'; }
    &__Z:before { content: 'Z'; }
    &__a:before { content: 'a'; }
    &__b:before { content: 'b'; }
    &__c:before { content: 'c'; }
    &__d:before { content: 'd'; }
    &__e:before { content: 'e'; }
    &__f:before { content: 'f'; }
    &__g:before { content: 'g'; }
    &__h:before { content: 'h'; }
    &__i:before { content: 'i'; }
    &__j:before { content: 'j'; }
    &__k:before { content: 'k'; }
    &__l:before { content: 'l'; }
    &__m:before { content: 'm'; }
    &__n:before { content: 'n'; }
    &__o:before { content: 'o'; }
    &__p:before { content: 'p'; }
    &__q:before { content: 'q'; }
    &__r:before { content: 'r'; }
    &__s:before { content: 's'; }
    &__t:before { content: 't'; }
    &__u:before { content: 'u'; }
    &__v:before { content: 'v'; }
    &__w:before { content: 'w'; }
    &__x:before { content: 'x'; }
    &__y:before { content: 'y'; }
    &__z:before { content: 'z'; }
}


/* topdoc
  name: Step slugs
  family: cfgov-misc
  notes:
    - "Styling for a slug that indicates a step in a process."
  patterns:
    - name: Embedded in a heading
      markup: |
        <h2>
            <span class="step-slug char-icon char-icon__1">Step one</span>
            Description of the step
        </h2>
      notes:
        - "Useful when you want to include the slug text in the heading for the
           purposes of visibility in the document outline."
    - name: Standalone
      markup: |
        <h2 class="step-slug char-icon char-icon__1">Step one</h2>
        <p>Description of the step</p>
      notes:
        - "Useful when the 'Step number' text itself serves as a heading."
        - "Equivalent to the .char-icon default usage pattern, but with specific
           styling for the text that follows."
  tags:
    - cfgov-misc
*/

// TODO: `char-icon` is only used on doing-business-with-us/index.html.
//       Refactor to use CF classes.

.step-slug {
    display: block;
    margin-bottom: unit(15px / 14px, em);

    color: @dark-gray;
    .u-webfont-demi();
    font-size: 14px; // fallback for browsers that don't support rem units
    // rem units needed because the main use case for this is within a heading
    font-size: unit(14px / @base-font-size-px, rem);
    letter-spacing: 1px;
    text-transform: uppercase;
}

/* topdoc
  name: Drop shadow
  family: cfgov-misc
  notes:
    - "Mixin to create a semi-transparent drop-shadow after element."
  tags:
    - cfgov-misc
*/
.u-drop-shadow-after() {
    &:after {
        display: block;
        height: 5px;
        width: 100%;

        position: absolute;
        // Offset for thickness of shadow.
        bottom: -5px;
        left: 0;

        background: @gray;
        // Whitespace in content so element can have dimensions set.
        content: '';
        opacity: 0.2;
    }
}


/* topdoc
  name: Transition utility classes.
  family: cfgov-misc
  notes:
    - "Adds transitions utilty classes for transform, opacity,
       and for the removing the transition duration."
  tags:
    - cfgov-misc
*/
.u-move-transition {
    transition: transform 0.25s ease-out;
}

.u-alpha-transition {
    transition: opacity 0.25s linear;
}

.u-no-animation {
    transition-duration: 0s;
}

/* topdoc
  name: Move utility classes.
  family: cfgov-misc
  notes:
    - "Utility classes for moving an element using transform translate values."
  tags:
    - cfgov-misc
*/
.u-move-to-origin {
    transform: translate3d( 0, 0, 0 );
}

.u-move-left {
    transform: translate3d( -100%, 0, 0 );
}

// TODO: Look into adding a mixin for movement multiples.
.u-move-left-2x {
    transform: translate3d( -200%, 0, 0 );
}

.u-move-left-3x {
    transform: translate3d( -300%, 0, 0 );
}

.u-move-right {
    transform: translate3d( 100%, 0, 0 );
}

.u-move-up {
    transform: translate3d( 0, -100%, 0 );
}

/* topdoc
  name: Alpha utility classes.
  family: cfgov-misc
  notes:
    - "Utility classes for setting an element's opacity."
  tags:
    - cfgov-misc
*/
.u-alpha-100 {
    opacity: 1;
}

.u-alpha-0 {
    opacity: 0;
}

/* topdoc
  name: EOF
  eof: true
*/
