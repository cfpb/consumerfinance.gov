.o-carousel {

  // Override default unordered list padding.
  & ul {
    padding: 0;
  }

  &_navigator {
    position: relative;
    border: 1px solid @gray-40;
    border-bottom: none;

    .respond-to-max( @bp-sm-max, {
      display: none;
    } );
  }

  &_btn {
    position: absolute;
    top: 50%;
    z-index: 3;
    padding-left: unit( 10px / @btn-font-size, em );
    padding-right: unit( 10px / @btn-font-size, em );
    margin-top: -16px;

    &-prev {
      left: 20px;
    }

    &-next {
      right: 20px;
    }
  }

  // The items are laid out horizontally side-by-side so we can make them
  // equal height, and then we move them to a stack on top of each other
  // and hide the overflow.
  &_items-container {
    position: relative;
    overflow: hidden;
  }

  &_items {
    display: table;
    width: 400%;
    height: 300px;
  }

  &_item {
    display: table-cell;
    width: 25%;
    height: 100%;
    position: relative;
    vertical-align: top;
    transition: visibility 0.35s, opacity 0.35s;

    &__hidden{
      opacity: 0;
      visibility: hidden;
    }
  }


  each( range( 4 ), {
    &_item:nth-child( @{value} ) {
      left: -25% * ( @value - 1 );
    }
  } );

  &_item-wrapper {
    display: table;
    table-layout: fixed;
    width: 100%;
    height: 100%;
  }

  // Bring the currently visible slide forward so it's above the invisible ones.
  &_item:not( &_item__hidden ) {
    z-index: 2;
  }

  &_item-text {
    display: table-cell;
    width: auto;
    padding: unit( @grid_gutter-width / @base-font-size-px, em );
    padding-left: unit( ( @grid_gutter-width * 3 ) / @base-font-size-px, em );
    padding-right: unit( ( @grid_gutter-width * 1.5 ) / @base-font-size-px, em );
    vertical-align: top;
  }

  &_item-visual {
    display: table-cell;
    width: 55%;

    .respond-to-max( @bp-sm-max, {
      width: 50%;
    } );

    // This should be set to the height of the image we want to include.
    // height: 300px;
    height: 100%;

    // This is a temporary value. Turn on for debugging spacing around images.
    // background: red;

    position: relative;
    overflow: hidden;
  }

  &_item-visual-wrapper {
    // This regrettable extra div is required for the image sizing and
    // positioning to work in IE.
    display: block;
    width: 100%;
    height: 100%;
    position: relative;
  }

  &_item-img {
    display: block;
    max-width: none;
    height: 100%;
    position: absolute;
    left: -9999px;
    right: -9999px;
    margin: 0 auto;
  }

  &_thumbnails {
    display: flex;
    flex-wrap: wrap;
    border: 1px solid @gray-40;
    border-right: none;
  }

  &_thumbnail {
    flex-grow: 1;
    flex-direction: column;
    box-sizing: border-box;
    min-width: 200px;
    width: 25%;

    // We need to explicitly set a visible overflow for IE11
    // so that the :after pseudo-selector created further down
    // and set below the element's bounds is visible.
    overflow: visible;

    // Change stacking behavior of thumbnails.
    .respond-to-max( @bp-sm-max, {
      width: 100%;
    } );

    // Remove default button padding and border.
    padding: 0;
    border: none;
    border-right: 1px solid @gray-40;
    background: @gray-5;
    // These values are used to set the width for the selected border rule.
    display: flex;
    align-items: stretch;
    position: relative;

    &:focus {
      outline: 1px dotted @pacific;
      outline-offset: 2px;
    }

    // We have a right border, but we also need a bottom border when the
    // thumbnails stack. We absolute position this to avoid a double-border
    // (with the parent's border) and set the z-index above the focus outline,
    // so that it is not hidden when the focus brings a thumbnail forward.
    &:after {
      content: '';
      position: absolute;
      bottom: -2px;
      z-index: 2;
      height: 1px;
      width: 100%;
      border-top: 1px solid @gray-40;
    }

  }

  &_thumbnail-layout {
    width: 100%;
    display: table;
  }

  // Mobile view.
  .respond-to-max( @bp-sm-max, {
    &_thumbnails {
      display: none;
    }

    &_thumbnails__mobile {
      display: block !important;
    }

    // Allow focus state on image inside link.
    &_thumbnail-visual a {
      display: block;
      border-bottom-width: 0;
    }
  } );

  // Desktop view.
  .respond-to-min( @bp-med-min, {
    &_thumbnails__mobile {
      display: none;
    }

    // Hide "featured content" heading at desktop size but keep it available
    // to screen readers.
    & .h5 {
      .u-visually-hidden;
    }

    // We can't do a straight top border because it gets included in the
    // box model and pushes the content down. This floats a border above the
    // content.
    &_thumbnail:before {
      content: '';
      position: absolute;
      height: 5px;
      width: 100%;
    }

    &_thumbnail:hover:before {
      background: @gray-40;
      display: block;
    }

    &_thumbnail-selected {
      background: @white;

      &:before {
        background: @green;
        display: block;
      }

      &:hover:before {
        background: @green;
      }
    }
  } );

  &_thumbnail:focus {
    z-index: 1;
  }

  &_thumbnail-visual,
  &_thumbnail-text {
    display: table-cell;
    padding: 10px;
  }

  // Set to same size as child image.
  &_thumbnail-visual {
    width: 48px;
  }

  // These are temporary styles.
  &_thumbnail-img {
    height: 48px;
    width: 48px;
    display: block;
    border: 1px solid @gray-40;
  }

  &_thumbnail-text {
    text-align: left;
    vertical-align: top;
  }
}

// Show no-js state of carousel where all items show and buttons are hidden.
.no-js .o-carousel {
  // Override u-hidden when JS is turned off.
  display: block !important;

  // Revert item layout.
  &_items {
    display: block;
    width: auto;
    height: auto;
  }

  &_item {
    display: block;
    width: auto;
    border-bottom: 1px solid @gray-40;
    position: static;
  }

  &_item-visual {
    height: 300px;
  }

  &_btn,
  &_thumbnails__desktop {
    display: none !important;
  }
}
