@layer layout-2-1 {
  // Layout 2-1 utilities.
  .u-hero-background() {
    position: absolute;
    z-index: -1;
    top: 0;
    left: -50%;
    width: 200vw;
    height: 100%;
    content: '';
    // This CSS color variable is hardcoded in the hero.html template.
    background: var(--m-hero-background-color);
  }

  .u-sidebar-background() {
    position: absolute;
    z-index: -1;
    top: 0;
    width: 100vw;
    height: 100%;
    content: '';
    background: @gray-5;
  }

  // Defaults shared in left-to-right (LTR) and right-to-left (RTL) layouts.
  .u-layout-grid__2-1 {
    // Tablet and above
    .respond-to-min(@bp-sm-min, {
      .u-layout-grid {
        &_wrapper {
          // This handles collapsing of the breadcrumbs space if they are absent.
          grid-auto-rows: minmax(0, auto) minmax(0, auto) 1fr;
          padding-left: unit(30px / @base-font-size-px, rem);
          padding-right: unit(30px / @base-font-size-px, rem);
        }

        &_main,
        &_sidebar {
          padding-top: unit(45px / @base-font-size-px, rem);
        }
      }

      // TODO: The hero has a wrapper we need to ignore, so the direct reference to m-hero is a temp workaround.
      .m-hero,
      .u-layout-grid_hero {
        position: relative;

        // Create the hero background bleed.
        &:after {
          .u-hero-background();
        }
      }
    });
  }

  // 2-1 Left-to-right (LTR) layout.
  .u-layout-grid__2-1:not(&.u-layout-grid__rtl) {
    // This is for the sidebar bleed.
    overflow-x: hidden;

    // Mobile.
    .u-layout-grid {
      // Set padding defaults.
      &_main,
      &_sidebar {
        padding-top: unit(30px / @base-font-size-px, rem);
      }

      &_sidebar {
        position: relative;
        padding-left: unit(15px / @base-font-size-px, rem);
        margin-left: unit(-15px / @base-font-size-px, rem);

        // This is the sidebar background, which bleeds to the edge.
        &:after {
          .u-sidebar-background();
          left: 0;
        }
      }
    }

    // Desktop
    .respond-to-min( @bp-med-min, {
      .u-layout-grid {
        &_wrapper {
          grid-auto-columns: 2fr 1fr;
          grid-template-areas:
            'c-hero c-hero'
            'c-breadcrumbs c-sidebar'
            'c-main c-sidebar';
        }

        &_main {
          padding-right: unit(10px / @base-font-size-px, rem);
        }

        &_sidebar {
          padding-left: unit(30px / @base-font-size-px, rem);
          margin-left: unit(20px / @base-font-size-px, rem);

          &:after {
            border-left: 1px solid @gray-40;
          }
        }
      }
    } );
  }

  // 2-1 Right-to-left (RTL) layout.
  .u-layout-grid__2-1.u-layout-grid__rtl {
    // Mobile.
    .u-layout-grid {
      &_sidebar {
        position: relative;
        padding-right: unit(15px / @base-font-size-px, rem);
        margin-right: unit(-15px / @base-font-size-px, rem);

        // This is the sidebar background, which bleeds to the edge.
        &:after {
          .u-sidebar-background();
          right: 0;
          left: auto;
        }
      }
    }

    // Desktop
    .respond-to-min( @bp-med-min, {
      .u-layout-grid {
        &_wrapper {
          grid-auto-columns: 1fr 2fr;
          grid-template-areas:
            'c-hero c-hero'
            'c-sidebar c-breadcrumbs'
            'c-sidebar c-main';

          // TODO: The hero has a wrapper we need to ignore, so the direct reference to m-hero is a temp workaround.
          & div:has(.m-hero) {
            display: contents;
          }
        }

       &_main {
          padding-left: unit(10px / @base-font-size-px, rem);
        }

        &_sidebar {
          padding-right: unit(30px / @base-font-size-px, rem);
          margin-right: unit(20px / @base-font-size-px, rem);

          &:after {
            border-right: 1px solid @gray-40;
          }
        }
      }

      // If we have a breadcrumb and sidebar together,
      // we need to move the sidebar content down further.
      .u-layout-grid_breadcrumbs ~ .u-layout-grid_sidebar {
        padding-top: unit(90px / @base-font-size-px, rem);
      }
    });
  }
}
