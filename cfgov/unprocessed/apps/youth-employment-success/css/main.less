@import (reference) '../../../css/main.less';

/**
 * Design System overrides
**/

// ATOMIC OVERRIDES
/**
* This gets overwritten by media queries, so we need to make it important.
*/
.u-hidden {
  display: none !important;
}

/**
* This class has three issues:
* 1). it forces any element to be displayed as a block, which breaks layouts for inline elements
 * 2). It doesn't hide the element on desktop. This is odd because I would assume all elements
 * are visible by default on all browser sizes, unless specified.
 * 3). Many elements are meant to be displayed as inline-block(s) for column layouts,
 * and this solution breaks those as well.
**/
.u-show-on-mobile {
  .respond-to-min(@bp-sm-min, {
    display: none !important;
  });

  display: initial !important;
}

/**
* Enchancement for the .block__sub class found at:
* https://github.com/cfpb/capital-framework/blob/0b15295c00ba1972676b6f4c86f3b40dcf45289d/packages/cf-layout/src/cf-layout.less#L466
*/
.block__sub-micro {
  margin-bottom: unit( @grid_gutter-width / @size-i, em );
  margin-top: unit( @grid_gutter-width / @size-i, em );
}

.content_line-bold {
  background-color: @black;
  height: 1px;
}
/** /ATOMIC OVERRIDES **/

// LAYOUT OVERRIDES
.content_main {
  h2,
  .h2,
  textarea,
  .m-notification,
  .js-yes-plans-review,
  .a-label small {
    max-width: 41.875rem;
  }
}

// The original class provides a pretty huge gap, particularly on mobile, so tame it a bit
.content-l_col+.content-l_col {
  .respond-to-max(@bp-sm-min, {
    margin-top: 1em;
  });
}
/** /LAYOUT OVERRIDES **/


// MOLECULE / ORGANISM OVERRIDES
.m-form-field__radio, .m-form-field__checkbox {
  .respond-to-max(@bp-sm-min, {
    &:first-child {
      margin-top: 1rem;
    }

    .a-label {
      background-color: #e7e8e9;
      box-sizing: border-box;
      padding: 15px;
      width: 100%;
    }
  });
}

.m-form-field__radio {
  .respond-to-max(@bp-sm-min, {
    margin-bottom: 1rem;
    width: 100%;
  });
}

.m-info-unit.print-layout {
  .respond-to-print({
    .m-info-unit-image {
      display: none !important;
    }
  });
}

.m-list_link {
  .respond-to-max(@bp-sm-min, {
    border: 0;
  });
}

.m-notification {
  .respond-to-print({
    background-color: transparent !important;
  });
}

.o-expandable_content__expanded {
  /**
   * The route option form is quite large and the current expandable `max-height`
   * does not accomodate all the content. Selected this value to accomodate for
   * all the case in which all form fields are visible and the user's to-do list
   * is populated.
  */
  max-height: 1700px !important;
}

.o-expandable__padded .o-expandable_content:after {
  padding-bottom: 0px !important;
}

/** /MOLECULE OVERRIDES **/


// ELEMENT-SPECIFIC
ul {
  list-style: disc;
}

/**
* content-l_col overrides the default appearance for textareas, this restores it.
*/
textarea {
  border-color: black !important;
  border-style: solid !important;
  border-width: 1px !important;
}

input:-moz-ui-invalid {
  // Required to stop FF from validating the `placeholder` attribute
  box-shadow: none;
}

/** /ELEMENT-SPECIFIC **/

/**
  * There are a few instances where we need the designs call for
  * more fine grained control over the width of elements, and in each
  * of those cases the width should render at 100% of the available container
  * space on mobile.
  * It may have been better to go with a custom grid, but
  * the default layout was fine for most purposes and it seemed like a separate
  * grid was overkill in this case.
*/
[class^="u-w"] {
  .respond-to-max(@bp-sm-min, {
    width: 100%;
  });
}

.u-align-right {
  text-align: right;
}

.u-br0 {
  border-right-width: 0;
}

.u-mr10 {
  margin-right: 10px;
}

/**
  * We want to preserve the inline-block declaration, and not reset `display`
  * to `block` as this class normally does.
  * This !important is specific to the layout requirements of this tool.
*/
.u-hide-on-mobile {
  .respond-to-max(@bp-sm-min, {
    display: none !important;
  });

  .respond-to-min(@bp-sm-min, {
    &.content-l_col {
      display: inline-block !important;
    }
  });
}

.u-hide-on-print {
  .respond-to-print({
    display: none !important;
    visibility: hidden !important;
  });
}

.u-show-on-print {
  display: none !important;
  .respond-to-print({
    display: block !important;
  });
}

.u-mobile-reorder {
  .respond-to-max(@bp-sm-min, {
    display: flex;
    flex-direction: column;

    &__first {
      margin-bottom: 0;
      order: 1;
    }

    &__second {
      order: 2;
    }

    &__third {
      order: 3;
    }
  });
}

.no-js {
  .u-show-no-js {
    display: block;
    visibility: visible;
  }
}

.u-show-no-js {
  display: none;
}

.highlight {
  background-color: #f7f8f9;
  padding: unit( 12px / @base-font-size-px, em );

  .respond-to-print({
    background-color: transparent;
    padding: 0;
  })
}

.a-average-cost {
  .respond-to-max(@bp-sm-min, {
    width: 15%;
  })
}

.a-yes-inline-radio {
  > .a-yes-average-cost-radio:first-child {
    margin-right: 1rem;
  }

  border-width: 0;
  display: inline-block;

  .respond-to-max(@bp-sm-min, {
    display: block;
  });
}

.m-hours {
  .m-hours_container {
    .respond-to-max(@bp-sm-min, {
      display: inline;
    });
  }

  .m-hours_data {
    border: 0;
    .respond-to-max(@bp-sm-min, {
      display: inline;
      text-align: right;
      float: right;
      margin-bottom: .25rem;

      + * {
        margin-top: .25rem;
        text-align: right;
      }
    });
  }
  .m-minutes_data {
    border: 0;
  }
}

/**
* TODO: Name this something better?
*/
.m-right-justify {
  &:extend(.h4);
  position: relative;

  .content-r {
    left: 100%;
    position: absolute;
    // The right-justified content doesn't quite line up with the input field it's
    // attached to, so we have to manually nudge it up a bit
    top: calc(100% - @size-iv);
    // Fix for safari absolute position layout
    width: 100%;
  }
}

.m-yes-line-item {
  .respond-to-max(@bp-sm-min, {
    .line-item {
      width: 50%;
    }

    .line-item__content-l {
      float: left;
    }

    .line-item__content-r {
      float: right;
      margin-top: 0;
    }
  });
}

.js-transit-hours, .js-transit-minutes {
  // Necessary because we are setting a lot of custom widths per design's
  // direction, and at certain screen sizes the fields become unusable
  min-width: 35px;

  .respond-to-max(@bp-sm-min, {
    display: inline-block;
    width: 20%;
  });
}

.yes-routes {
  .a-label__heading {
    &:extend(.a-label__heading);

    & + input {
      margin-top: unit( 15px / @base-font-size-px, em );
    }
  }
}

.yes-tip {
  .cf-icon-svg {
    font-size: unit( 20px / @base-font-size-px, em );
    vertical-align: middle;
  }
}

.yes-transit-tool {
  // TODO: replace with u-right-align?
  input.a-text-input {
    text-align: right;
  }

  .m-info-unit_image {
    height: 125px;
    width: 125px;
  }
}

/** FIREFOX PRINT FIXES **/
+.o-mega-menu_content {
  .respond-to-print({
    display: none !important;
    overflow: visible;
    visibility: hidden !important;
  });
}

.content_main {
  .respond-to-print({
    display: block !important;
    overflow: visible !important
  });
}

.u-w75pct {
  .respond-to-print({
    width: 100%;
  });
}