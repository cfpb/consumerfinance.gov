# Generated by Django 3.2.12 on 2022-03-08 22:00

import django.db.models.deletion
from django.db import migrations, models

import wagtail.core.fields

import modelcluster.fields


class Migration(migrations.Migration):

    initial = True

    replaces = [
        ('jobmanager', '0001_initial'),
        ('jobmanager', '0002_auto_20160809_1619'),
        ('jobmanager', '0003_auto_20160814_2044'),
        ('jobmanager', '0004_auto_20160815_1008'),
        ('jobmanager', '0005_auto_20160815_1457'),
        ('jobmanager', '0006_auto_20160815_1705'),
        ('jobmanager', '0007_create_careers_pages'),
        ('jobmanager', '0008_migrate_job_pages'),
        ('jobmanager', '0009_django_cleanup'),
        ('jobmanager', '0010_cleanup_unused_fields'),
        ('jobmanager', '0011_delete_fellowshipupdatelist'),
        ('jobmanager', '0012_jobs_have_one_region'),
        ('jobmanager', '0013_job_region_to_location'),
        ('jobmanager', '0014_add_city_and_state'),
        ('jobmanager', '0015_remove_tinymce'),
        ('jobmanager', '0016_add_job_length_and_service_type'),
        ('jobmanager', '0017_recreated'),
        ('jobmanager', '0018_recreated_2'),
        ('jobmanager', '0019_multiple_locations'),
        ('jobmanager', '0020_multiple_locations'),
        ('jobmanager', '0021_multiple_locations'),
        ('jobmanager', '0022_prep_for_deprecated_model_swapout'),
    ]

    dependencies = [
        ('jobmanager', '0023_2022_reset'),
        ('v1', '0284_2022_reset'),
    ]

    operations = [
        migrations.CreateModel(
            name='JobListingPage',
            fields=[
                ('cfgovpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='v1.cfgovpage')),
                ('description', wagtail.core.fields.RichTextField(verbose_name='Summary')),
                ('open_date', models.DateField(verbose_name='Open date')),
                ('close_date', models.DateField(verbose_name='Close date')),
                ('salary_min', models.DecimalField(decimal_places=2, max_digits=11, verbose_name='Minimum salary')),
                ('salary_max', models.DecimalField(decimal_places=2, max_digits=11, verbose_name='Maximum salary')),
                ('allow_remote', models.BooleanField(default=False, verbose_name='Office location can also be remote')),
                ('responsibilities', wagtail.core.fields.RichTextField(blank=True, null=True, verbose_name='Responsibilities')),
                ('travel_required', models.BooleanField(default=False, help_text='Optional: Check to add a "Travel required" section to the job description. Section content defaults to "Yes".')),
                ('travel_details', wagtail.core.fields.RichTextField(blank=True, help_text='Optional: Add content for "Travel required" section.', null=True)),
                ('additional_section_title', models.CharField(blank=True, help_text='Optional: Add title for an additional section that will display at end of job description.', max_length=255, null=True)),
                ('additional_section_content', wagtail.core.fields.RichTextField(blank=True, help_text='Optional: Add content for an additional section that will display at end of job description.', null=True)),
                ('division', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='jobmanager.jobcategory')),
                ('job_length', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='jobmanager.joblength', verbose_name='Position length')),
            ],
            options={
                'abstract': False,
            },
            bases=('v1.cfgovpage',),
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('name', models.CharField(max_length=255)),
                ('abbreviation', models.CharField(max_length=2, primary_key=True, serialize=False)),
            ],
            options={
                'ordering': ('abbreviation',),
            },
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ['service_type'],
            },
        ),
        migrations.CreateModel(
            name='USAJobsApplicationLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('announcement_number', models.CharField(max_length=128)),
                ('url', models.URLField(max_length=255)),
                ('applicant_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usajobs_application_links', to='jobmanager.applicanttype')),
                ('job_listing', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='usajobs_application_links', to='jobmanager.joblistingpage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('name', models.CharField(max_length=255)),
                ('abbreviation', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('region', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.PROTECT, related_name='states', to='jobmanager.region')),
            ],
            options={
                'ordering': ('abbreviation',),
            },
        ),
        migrations.CreateModel(
            name='Office',
            fields=[
                ('name', models.CharField(max_length=255)),
                ('abbreviation', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='jobmanager.state')),
            ],
            options={
                'ordering': ('abbreviation',),
            },
        ),
        migrations.CreateModel(
            name='MajorCity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('region', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.PROTECT, related_name='major_cities', to='jobmanager.region')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='jobmanager.state')),
            ],
            options={
                'ordering': ('state', 'name'),
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='joblistingpage',
            name='offices',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, related_name='job_listings', to='jobmanager.Office'),
        ),
        migrations.AddField(
            model_name='joblistingpage',
            name='regions',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, related_name='job_listings', to='jobmanager.Region'),
        ),
        migrations.AddField(
            model_name='joblistingpage',
            name='service_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='jobmanager.servicetype'),
        ),
        migrations.AddField(
            model_name='gradepanel',
            name='grade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grade_panels', to='jobmanager.grade'),
        ),
        migrations.AddField(
            model_name='gradepanel',
            name='job_listing',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='jobmanager.joblistingpage'),
        ),
        migrations.AddField(
            model_name='emailapplicationlink',
            name='job_listing',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_application_links', to='jobmanager.joblistingpage'),
        ),
    ]
