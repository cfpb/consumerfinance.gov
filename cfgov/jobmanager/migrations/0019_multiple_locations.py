# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2020-03-23 19:07
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields


def copy_location_data(apps, schema_migration):
    City = apps.get_model('jobmanager', 'City')
    Office = apps.get_model('jobmanager', 'Office')
    Region = apps.get_model('jobmanager', 'Region')
    State = apps.get_model('jobmanager', 'State')

    MajorCity = apps.get_model('jobmanager', 'MajorCity')
    NewOffice = apps.get_model('jobmanager', 'NewOffice')
    NewRegion = apps.get_model('jobmanager', 'NewRegion')
    NewState = apps.get_model('jobmanager', 'NewState')

    NewRegion.objects.bulk_create(
        NewRegion(
            name=region.name,
            abbreviation=region.abbreviation
        ) for region in Region.objects.all()
    )

    for region in Region.objects.all():
        MajorCity.objects.bulk_create(
            MajorCity(
                name=city.name,
                state_id=city.state_id,
                region_id=region.abbreviation
            ) for city in region.cities.all()
        )

    NewState.objects.bulk_create(
        NewState(
            name=state.name,
            abbreviation=state.abbreviation,
            region_id=state.region_id,
        ) for state in State.objects.prefetch_related('region')
    )

    NewOffice.objects.bulk_create(
        NewOffice(
            name=office.cities.first().name,
            state_id=office.cities.first().state_id,
            abbreviation=office.abbreviation
        ) for office in Office.objects.prefetch_related('cities')
    )


class Migration(migrations.Migration):

    dependencies = [
        ('jobmanager', '0018_recreated_2'),
    ]

    operations = [
        migrations.CreateModel(
            name='MajorCity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ('state', 'name'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NewOffice',
            fields=[
                ('name', models.CharField(max_length=255)),
                ('abbreviation', models.CharField(max_length=2, primary_key=True, serialize=False)),
            ],
            options={
                'ordering': ('abbreviation',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NewRegion',
            fields=[
                ('name', models.CharField(max_length=255)),
                ('abbreviation', models.CharField(max_length=2, primary_key=True, serialize=False)),
            ],
            options={
                'ordering': ('abbreviation',),
            },
        ),
        migrations.CreateModel(
            name='NewState',
            fields=[
                ('name', models.CharField(max_length=255)),
                ('abbreviation', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('region', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.PROTECT, related_name='states', to='jobmanager.NewRegion')),
            ],
            options={
                'ordering': ('abbreviation',),
            },
        ),
        migrations.AddField(
            model_name='newoffice',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='jobmanager.NewState'),
        ),
        migrations.AddField(
            model_name='majorcity',
            name='region',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.PROTECT, related_name='major_cities', to='jobmanager.NewRegion'),
        ),
        migrations.AddField(
            model_name='majorcity',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='jobmanager.NewState'),
        ),
        migrations.RunPython(copy_location_data),
    ]
