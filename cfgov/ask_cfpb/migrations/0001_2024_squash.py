# Generated by Django 4.2.17 on 2024-12-26 19:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import v1.models.snippets
import wagtail.contrib.routable_page.models
import wagtail.fields
import wagtail.search.index


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('wagtailredirects', '0008_add_verbose_name_plural'),
        ('wagtailforms', '0005_alter_formsubmission_form_data'),
        ('wagtailinventory', '0003_pageblock_id_bigautofield'),
        ('wagtailcore', '0069_log_entry_jsonfield'),
        ('v1', '0001_2024_squash'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='AnswerLandingPage',
            fields=[
                ('landingpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='v1.landingpage')),
            ],
            options={
                'abstract': False,
            },
            bases=('v1.landingpage',),
        ),
        migrations.CreateModel(
            name='AnswerResultsPage',
            fields=[
                ('cfgovpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='v1.cfgovpage')),
            ],
            options={
                'abstract': False,
            },
            bases=('v1.cfgovpage',),
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('name_es', models.CharField(max_length=255)),
                ('slug', models.SlugField(help_text='Do not edit this field')),
                ('slug_es', models.SlugField(help_text='Do not edit this field')),
                ('intro', wagtail.fields.RichTextField(blank=True, help_text='Do not use H2, H3, H4, or H5 to style this text. Do not add links, images, videos or other rich text elements.')),
                ('intro_es', wagtail.fields.RichTextField(blank=True, help_text='Do not use this field. It is not currently displayed on the front end.')),
                ('category_image', models.ForeignKey(blank=True, help_text='Select a custom image to appear when visitors share pages belonging to this category on social media.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='v1.cfgovimage')),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='NextStep',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('show_title', models.BooleanField(default=False)),
                ('text', wagtail.fields.RichTextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='PortalSearchPage',
            fields=[
                ('cfgovpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='v1.cfgovpage')),
                ('overview', models.TextField(blank=True)),
                ('portal_topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='portal_search_pages', to='v1.portaltopic')),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.contrib.routable_page.models.RoutablePageMixin, 'v1.cfgovpage'),
        ),
        migrations.CreateModel(
            name='TagResultsPage',
            fields=[
                ('answerresultspage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ask_cfpb.answerresultspage')),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.contrib.routable_page.models.RoutablePageMixin, 'ask_cfpb.answerresultspage'),
        ),
        migrations.CreateModel(
            name='AnswerPage',
            fields=[
                ('cfgovpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='v1.cfgovpage')),
                ('last_edited', models.DateField(blank=True, help_text='If content is changed, update this to match the new publication date.', null=True)),
                ('question', models.TextField(blank=True, help_text='Used as the primary heading (H1) of the page.')),
                ('short_answer', wagtail.fields.RichTextField(blank=True, help_text='Formatted as a lead paragraph.')),
                ('answer_content', wagtail.fields.StreamField([('text', 2), ('table', 14), ('tip', 16), ('video_player', 19), ('how_to_schema', 33), ('faq_schema', 38)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'help_text': "Add an optional anchor link tag to allow linking directly to this block. Tag should be unique and use dashes or underscores for separation instead of spaces (ie, 'block-one-tag')", 'label': 'Anchor tag', 'required': False}), 1: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'h2', 'h3', 'link', 'ol', 'ul', 'document-link', 'image', 'embed'], 'label': 'Text'}), 2: ('wagtail.blocks.StructBlock', [[('anchor_tag', 0), ('content', 1)]], {}), 3: ('wagtail.blocks.CharBlock', (), {'required': False}), 4: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('h2', 'H2'), ('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5')]}), 5: ('wagtail.blocks.CharBlock', (), {'help_text': 'Input the name of an icon to appear to the left of the heading. E.g., approved, help-round, etc. <a href="https://cfpb.github.io/design-system/foundation/iconography">See full list of icons</a>', 'required': False}), 6: ('wagtail.blocks.StructBlock', [[('text', 3), ('level', 4), ('icon', 5)]], {'required': False}), 7: ('wagtail.blocks.MultipleChoiceBlock', [], {'choices': [('is_full_width', 'Display the table at full width'), ('stack_on_mobile', 'Stack the table columns on mobile')], 'required': False}), 8: ('wagtail.blocks.CharBlock', (), {}), 9: ('wagtail.blocks.FloatBlock', (), {}), 10: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'ol', 'ul', 'link', 'document-link', 'superscript']}), 11: ('wagtail_footnotes.blocks.RichTextBlockWithFootnotes', (), {'features': ['bold', 'italic', 'ol', 'ul', 'link', 'document-link', 'superscript', 'footnotes']}), 12: ('wagtail.contrib.typed_table_block.blocks.TypedTableBlock', [[('text', 8), ('numeric', 9), ('rich_text', 10), ('rich_text_with_footnotes', 11)]], {}), 13: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link', 'document-link'], 'required': False}), 14: ('wagtail.blocks.StructBlock', [[('heading', 6), ('text_introduction', 3), ('options', 7), ('data', 12), ('caption', 13)]], {}), 15: ('wagtail.blocks.RichTextBlock', (), {'features': ['link', 'document-link'], 'label': 'Tip'}), 16: ('wagtail.blocks.StructBlock', [[('content', 15)]], {'label': 'Tip (floats right)'}), 17: ('wagtail.blocks.RegexBlock', (), {'error_messages': {'invalid': 'The YouTube video ID is in the wrong format.'}, 'help_text': 'Enter the YouTube video ID, which is located at the end of the video URL, after "v=". For example, the video ID for https://www.youtube.com/watch?v=1V0Ax9OIc84 is 1V0Ax9OIc84.', 'label': 'YouTube video ID', 'regex': '^[\\w-]{11}$', 'required': False}), 18: ('wagtail.images.blocks.ImageChooserBlock', (), {'help_text': 'Optional thumbnail image to show before and after the video plays. If the thumbnail image is not set here, the video player will default to showing the thumbnail that was set in (or automatically chosen by) YouTube.', 'required': False}), 19: ('wagtail.blocks.StructBlock', [[('video_id', 17), ('thumbnail_image', 18)]], {}), 20: ('wagtail.blocks.CharBlock', (), {'label': 'Title of How To section', 'max_length': 500}), 21: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('h2', 'H2'), ('h3', 'H3'), ('h4', 'H4')], 'help_text': 'Choose a tag for the title of the How To section.', 'label': 'Tag for How To section title'}), 22: ('wagtail.blocks.BooleanBlock', (), {'default': True, 'help_text': 'The How To schema requires a title to let search engines understand what it is about. If you do not want the title to be displayed in the page, uncheck this box and the title content will only be made available to crawlers and screen readers.', 'label': 'Show How To section title', 'required': False}), 23: ('wagtail.blocks.RichTextBlock', (), {'blank': True, 'features': ['ol', 'ul', 'bold', 'italic', 'link', 'document-link'], 'required': False}), 24: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('h2', 'H2'), ('h3', 'H3'), ('h4', 'H4'), ('b', 'Bold'), ('p', 'Paragraph')], 'help_text': 'Choose a tag for the title of each HowTo step.', 'label': 'Tag for step titles'}), 25: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check this box to display numbers before step titles. ', 'label': 'Show numbers for steps', 'required': False}), 26: ('wagtail.blocks.CharBlock', (), {'blank': True, 'help_text': "Add an optional anchor link tag to allow linking directly to this step. Tag should be unique and use dashes or underscores for separation instead of spaces (ie, 'step-one-tag').", 'max_length': 500, 'required': False}), 27: ('wagtail.blocks.CharBlock', (), {'help_text': 'Enter a title for this HowTo step. You do not need to include a number in the title -- numbers will be added automatically in the template if the show numbers checkbox is checked.', 'max_length': 500}), 28: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'h3', 'h4', 'link', 'ol', 'ul', 'document-link', 'image', 'embed'], 'label': 'Text'}), 29: ('wagtail.blocks.StructBlock', [[('content', 28)]], {}), 30: ('wagtail.blocks.StreamBlock', [[('text', 29), ('table', 14), ('video_player', 19)]], {}), 31: ('wagtail.blocks.StructBlock', [[('anchor_tag', 26), ('title', 27), ('step_content', 30)]], {}), 32: ('wagtail.blocks.ListBlock', (31,), {}), 33: ('wagtail.blocks.StructBlock', [[('title', 20), ('title_tag', 21), ('show_title', 22), ('description', 23), ('step_title_tag', 24), ('has_numbers', 25), ('steps', 32)]], {'label': 'Google Schema - How To'}), 34: ('wagtail.blocks.CharBlock', (), {'blank': True, 'help_text': "Add an optional anchor link tag for this question. Tag should be unique and use dashes or underscores for separation instead of spaces (ie, 'question-one-tag')", 'max_length': 500, 'required': False}), 35: ('wagtail.blocks.CharBlock', (), {'max_length': 500}), 36: ('wagtail.blocks.StructBlock', [[('anchor_tag', 34), ('question', 35), ('answer_content', 30)]], {}), 37: ('wagtail.blocks.ListBlock', (36,), {}), 38: ('wagtail.blocks.StructBlock', [[('description', 23), ('questions', 37)]], {'label': 'Google Schema - FAQ'})}, verbose_name='Answer')),
                ('search_tags', models.CharField(blank=True, help_text='Search words or phrases, separated by commas', max_length=1000)),
                ('sidebar', wagtail.fields.StreamField([('related_links', 7), ('email_signup', 8), ('reusable_text', 9)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'required': False}), 1: ('wagtail.blocks.RichTextBlock', (), {'required': False}), 2: ('wagtail.blocks.CharBlock', (), {'help_text': 'Add an ARIA label if the link text does not describe the destination of the link (e.g. has ambiguous text like "Learn more" that is not descriptive on its own).', 'required': False}), 3: ('wagtail.blocks.CharBlock', (), {'default': '/', 'required': False}), 4: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'required': False}), 5: ('wagtail.blocks.StructBlock', [[('text', 0), ('aria_label', 2), ('url', 3), ('is_link_boldface', 4)]], {}), 6: ('wagtail.blocks.ListBlock', (5,), {}), 7: ('wagtail.blocks.StructBlock', [[('heading', 0), ('paragraph', 1), ('links', 6)]], {}), 8: ('v1.blocks.EmailSignUpChooserBlock', (), {}), 9: ('v1.blocks.ReusableTextChooserBlock', (v1.models.snippets.ReusableText,), {})})),
                ('answer_base', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='answer_pages', to='ask_cfpb.answer')),
                ('category', models.ManyToManyField(blank=True, help_text='Categorize this answer. Avoid putting into more than one category.', to='ask_cfpb.category')),
                ('portal_category', modelcluster.fields.ParentalManyToManyField(blank=True, help_text='Determined where this page can be found within selected Consumer Tools pages.', to='v1.portalcategory')),
                ('portal_topic', modelcluster.fields.ParentalManyToManyField(blank=True, help_text='Adds this question to search indexes for selected Consumer Tools pages.', to='v1.portaltopic')),
                ('primary_portal_topic', modelcluster.fields.ParentalKey(blank=True, help_text='Use only when more than one Consumer Tools page is selected above.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_portal_topic', to='v1.portaltopic')),
                ('related_questions', modelcluster.fields.ParentalManyToManyField(blank=True, help_text='Select no more than three.', related_name='related_question', to='ask_cfpb.answerpage')),
                ('notification', wagtail.fields.StreamField([('notification', 9)], blank=True, block_lookup={0: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('information', 'Information'), ('warning', 'Warning')]}), 1: ('wagtail.blocks.CharBlock', (), {'help_text': 'The main notification message to display.', 'required': True}), 2: ('wagtail.blocks.TextBlock', (), {'help_text': 'Explanation text appears below the message in smaller type.', 'required': False}), 3: ('wagtail.blocks.CharBlock', (), {'required': False}), 4: ('wagtail.blocks.CharBlock', (), {'help_text': 'Add an ARIA label if the link text does not describe the destination of the link (e.g. has ambiguous text like "Learn more" that is not descriptive on its own).', 'required': False}), 5: ('wagtail.blocks.CharBlock', (), {'default': '/', 'required': False}), 6: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'required': False}), 7: ('wagtail.blocks.StructBlock', [[('text', 3), ('aria_label', 4), ('url', 5), ('is_link_boldface', 6)]], {}), 8: ('wagtail.blocks.ListBlock', (7,), {'help_text': 'Links appear on their own lines below the explanation.', 'required': False}), 9: ('wagtail.blocks.StructBlock', [[('type', 0), ('message', 1), ('explanation', 2), ('links', 8)]], {})})),
            ],
            options={
                'abstract': False,
            },
            bases=('v1.cfgovpage',),
        ),
        migrations.CreateModel(
            name='GlossaryTerm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_en', models.CharField(max_length=255, verbose_name='TERM (ENGLISH)')),
                ('definition_en', wagtail.fields.RichTextField(blank=True, null=True, verbose_name='DEFINITION (ENGLISH)')),
                ('anchor_en', models.CharField(blank=True, max_length=255, null=True, verbose_name='ANCHOR SLUG (ENGLISH)')),
                ('name_es', models.CharField(blank=True, max_length=255, null=True, verbose_name='TERM (SPANISH)')),
                ('definition_es', wagtail.fields.RichTextField(blank=True, null=True, verbose_name='DEFINITION (SPANISH)')),
                ('anchor_es', models.CharField(blank=True, max_length=255, null=True, verbose_name='ANCHOR SLUG (SPANISH)')),
                ('answer_page_en', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='glossary_terms', to='ask_cfpb.answerpage', verbose_name='ANSWER PAGE (ENGLISH)')),
                ('answer_page_es', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='glossary_terms_es', to='ask_cfpb.answerpage', verbose_name='ANSWER PAGE (SPANISH)')),
                ('portal_topic', modelcluster.fields.ParentalKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='glossary_terms', to='v1.portaltopic')),
            ],
            options={
                'unique_together': {('portal_topic', 'name_en')},
            },
            bases=(wagtail.search.index.Indexed, models.Model),
        ),
    ]
