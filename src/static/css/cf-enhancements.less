/* ==========================================================================
   cfgov-refresh
   capital framework enhancements
   ========================================================================== */

/* topdoc
  name: Code styles
  family: cfgov-cf-enhancements
  patterns:
    - name: .inline-code
      markup: |
        <code class="inline-code">code { color: red; }</code>
  tags:
    - cfgov-cf-enhancements
*/

.inline-code {
    display: inline-block;
    padding: unit(3px / 14px, em) unit(5px / 14px, em);
    border-radius: 4px;
    background: @gray-10;
    color: @black;
    font-size: unit(14px / @base-font-size-px, em);
}


/* topdoc
  name: Width utilities
  family: cfgov-cf-enhancements
  patterns:
    - name: Percent-based
      markup: |
        <div class="u-w95pct" style="background: #DBEDD4; margin-bottom: 1px;">
            <code>.u-w95pct</code>
        </div>
        <div class="u-w85pct" style="background: #DBEDD4; margin-bottom: 1px;">
            <code>.u-w85pct</code>
        </div>
        <div class="u-w65pct" style="background: #DBEDD4; margin-bottom: 1px;">
            <code>.u-w65pct</code>
        </div>
        <div class="u-w55pct" style="background: #DBEDD4; margin-bottom: 1px;">
            <code>.u-w55pct</code>
        </div>
        <div class="u-w45pct" style="background: #DBEDD4; margin-bottom: 1px;">
            <code>.u-w45pct</code>
        </div>
        <div class="u-w35pct" style="background: #DBEDD4; margin-bottom: 1px;">
            <code>.u-w35pct</code>
        </div>
        <div class="u-w15pct" style="background: #DBEDD4; margin-bottom: 1px;">
            <code>.u-w15pct</code>
        </div>
        <div class="u-w5pct" style="background: #DBEDD4; margin-bottom: 1px;">
            <code>.u-w5pct</code>
        </div>
      notes:
        - "Inline styles are for demonstration purposes only, please don't use
           them."
  tags:
    - cfgov-cf-enhancements
*/

.u-w95pct  { width: 95%; }
.u-w85pct  { width: 85%; }
.u-w65pct  { width: 65%; }
.u-w55pct  { width: 55%; }
.u-w45pct  { width: 45%; }
.u-w35pct  { width: 35%; }
.u-w15pct  { width: 15%; }
.u-w5pct   { width:  5%; }


/* topdoc
  name: respond-to-print() (mixin)
  notes:
    - "This mixin allows us to easily write styles that target both
       `@media print` and `.print`."
  family: cfgov-cf-enhancements
  patterns:
    - name: Usage
      codenotes:
        - |
          // Example Less
          .example {
              color: @gray;

              .respond-to-print({
                  color: @black;
              });
          }

          // Exports to
          .example {
              color: #75787B;
          }
          @media print {
              .example {
                  color: #101820;
              }
          }
          .print .example {
              color: #101820;
          }
  tags:
    - cfgov-cf-enhancements
*/

.respond-to-print(@rules) {
    @media print {
        @rules();
    }
    .print & {
        @rules();
    }
}

/* topdoc
  name: respond-to-dpi(@ratio) (mixin)
  notes:
    - "This mixin allows us to easily write styles
    that target high-resolution screens,
    such as Apple retina screens"
  family: cfgov-cf-enhancements
  patterns:
    - name: Usage
      codenotes:
        - |
          // Example Less
          .example {
              background: url(regular-resolution-image.png);

              .respond-to-dpi(2, {
                  background-image: url(retina-image.png);
              });
          }

          // Exports to
          .example {
              background: url(regular-resolution-image.png);
          }
          @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
              .example {
                  background-image: url(retina-image.png);
              }
          }
  tags:
    - cfgov-cf-enhancements
*/

.respond-to-dpi(@ratio, @rules) {
    @dpi: (@ratio * 96dpi);
    @media (-webkit-min-device-pixel-ratio: @ratio), (min-resolution: @dpi) {
        @rules();
    }
}


/* topdoc
  name: Superheader print styles
  family: cfgov-cf-enhancements
  patterns:
    - name: .superheader
      markup: |
        <div class="print">
            <h1 class="superheader">
                A big green header
            </h1>
        </div>
  tags:
    - cfgov-cf-enhancements
*/

.superheader {
    .respond-to-print({
        color: @green;
    });
}

/* topdoc
  name: Centered on mobile utility
  family: cfgov-cf-enhancements
  patterns:
    - name: .u-centered-on-mobile
      markup: |
        <div>
            <div class="u-centered-on-mobile" style="width:100px;height:100px;background-color:green;">
                Block centered on mobile
            </div>
            <p class="u-centered-on-mobile">Paragraph centered on mobile</p>
        </div>
      notes:
        - "Sometimes content (parts/all of a media block, for example)
           should be centered on mobile, but not on larger screen sizes."
        - "This implementation conflates inline & block element centering,
           though they could be made into separate classes."
  tags:
    - cfgov-cf-enhancements
*/

.respond-to-max(@mobile-max {
    .u-centered-on-mobile {
        text-align: center;
        margin-left: auto;
        margin-right: auto;
    }
});


/* topdoc
  name: Tables
  family: cfgov-cf-enhancements
  notes:
    - "Updated table styling that needs to get ported to cf-core pending Design
       Manual approval."
    - "At screens smaller than 960px wide the table cells stack."
  patterns:
    - name: Default table
      markup: |
        <table>
            <thead>
                <tr>
                    <th>Column 1</th>
                    <th>Column 2</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>Lorem ipsum dolor.</td>
                    <td>Lorem ipsum dolor.</td>
                </tr>
                <tr>
                    <td>Lorem ipsum dolor.</td>
                    <td>Lorem ipsum dolor.</td>
                </tr>
                <tr>
                    <td>Lorem ipsum dolor.</td>
                    <td>Lorem ipsum dolor.</td>
                </tr>
                <tr>
                    <td>Lorem ipsum dolor.</td>
                    <td>Lorem ipsum dolor.</td>
                </tr>
            </tbody>
        </table>
  tags:
    - cfgov-cf-enhancements
*/

th,
td {
    padding: unit(10px / @base-font-size-px, em)
             unit(10px / @base-font-size-px, em);
    background: @white;
    vertical-align: top;

    // Needed to override styles from cf-core.
    tbody > tr:nth-child(odd) > & {
        background: inherit;
    }
}

thead th {
    .padded-header();
}

tbody {
    border-top: 1px solid @gray-50;

    th {
        .webfont-medium();
    }

    tr {
        border-bottom: 1px solid @gray-50;
    }
}

.respond-to-max(959px {
    table {
        width: 100%;
    }

    thead {
        th {
            box-sizing: border-box;
            display: block;
            width: 100% !important;
        }
    }

    tbody {
        th,
        td {
            box-sizing: border-box;
            display: block;
            width: 100% !important;
        }
        th + th,
        td + td {
            padding-top: 0;
        }
    }
});


/* topdoc
  name: Simple Table
  family: cfgov-cf-enhancements
  notes:
    - Extends the above stacked tables for sm devices
    - Hides the thead
    - Styles first td as if it were the thead
    - Allows any other td to be styled as a heading level 4
    - Adds data-label attr for small td labels above td content
  patterns:
    - name: Collapsable Table
      markup: |
        <table class="simple-table">
            <thead>
                <tr>
                    <th>Column 1</th>
                    <th>Column 2</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>Lorem ipsum dolor.</td>
                    <td class="simple-table_row-heading">Lorem ipsum dolor.</td>
                    <td data-label="Lorem">Lorem ipsum dolor.</td>
                    <td data-label="Ipsum">Lorem ipsum dolor.</td>
                </tr>
                <tr>
                    <td>Lorem ipsum dolor.</td>
                    <td class="simple-table_row-heading">Lorem ipsum dolor.</td>
                    <td data-label="Lorem">Lorem ipsum dolor.</td>
                    <td data-label="Ipsum">Lorem ipsum dolor.</td>
                </tr>
                <tr>
                    <td>Lorem ipsum dolor.</td>
                    <td class="simple-table_row-heading">Lorem ipsum dolor.</td>
                    <td data-label="Lorem">Lorem ipsum dolor.</td>
                    <td data-label="Ipsum">Lorem ipsum dolor.</td>
                </tr>
            </tbody>
        </table>
  tags:
    - cfgov-cf-enhancements
*/
.simple-table {
    .respond-to-max(959px, {

        font-size: 14px;

        thead {
            display: none;
        }

        tbody {
            border-top: none;
        }

        tr {
            border-bottom: none;
        }

        td:first-child {
            .h4();

            background-color: @gray-5;
            margin-bottom: 10px;
        }

        td[data-label] {
            padding-bottom: 20px;

            &:before {
                .h6();

                display: block;

                content: attr(data-label);
            }
        }

        &_row-heading {
            .h4();

            margin-bottom: 0;
        }
    });
}




/* topdoc
  name: cf-grid column dividers
  family: cfgov-cf-enhancements
  notes:
    - "cf-grid columns use left and right borders for fixed margins which means
       it's not possible to set visual left and right borders directly on them.
       Instead we can use the :before pseudo element and position it absolutely.
       The added benefit of doing it this way is that the border spans the
       entire height of the next parent using `position: relative;`. This means
       that the border will always match the height of the tallest column in the
       row."
  patterns:
    - name: Classes
      codenotes:
        - .grid_column__top-divider
        - .grid_column__left-divider
    - name: Usage
      codenotes:
        - |
          .my-column-1-2 {

              // Creates a column that spans 6 out of 12 columns.
              .grid_column(6, 12);

              // Add a top divider only at screen 599px and smaller.
              .respond-to-max(599px {
                  .grid_column__top-divider();
              });

              // Add a left divider only at screen 600px and larger.
              .respond-to-min(600px, {
                  .grid_column__left-divider();
              });

          }
  tags:
    - cfgov-cf-enhancements
*/

.grid_column__top-divider {
    margin-top: unit((@grid_gutter-width * 2) / @base-font-size-px, em);
    &:before {
        content: "";
        display: block;
        height: 1px;
        margin-bottom: unit(@grid_gutter-width / @base-font-size-px, em);
        background-color: @gray-50;
    }
}

.grid_column__left-divider {
    border-left-width: @grid_gutter-width;

    &:before {
        content: "";
        position: absolute;
        top: 0;
        bottom: 0;
        width: 1px;
        display: block;
        background-color: @gray-50;
        margin-left: -@grid_gutter-width;
    }
}


/* topdoc
    name: Expandable header modifier
    family: cfgov-cf-enhancements
    patterns:
    - name: expandable_header__jump-link (modifier)
      markup: |
        <button class="expandable_header expandable_header__jump-link expandable_target">
            <span class="expandable_header-left expandable_label">
                Expandable Header
            </span>
            <span class="expandable_header-right expandable_link">
                <span class="expandable_cue-open">
                    <span class="cf-icon cf-icon-plus-round"></span>
                </span>
                <span class="expandable_cue-close">
                    <span class="cf-icon cf-icon-minus-round"></span>
                </span>
            </span>
        </button>
      codenotes:
        - |
          .expandable_header__jump-link
      notes:
        - "This modifier styles the expandable header as a jump link on mobile
           screens. Can be used for mobile-only expandables."
        - "Use the `button` element with `.expandable_header`. to make the whole
           header clickable."
    tags:
    - cfgov-cf-enhancements
*/

.expandable_header__jump-link {

    .respond-to-max(599px, {
        display: block;
        width: 100%;
        padding: unit(10px / @base-font-size-px, em) 0;
        border: dotted @pacific;
        border-width: 1px 0;

        .expandable_label,
        .expandable_link {
            color: @pacific;
        }

        &:hover,
        &.hover {
            border-style: solid;
            border-color: @pacific-50;

            .expandable_label,
            .expandable_link {
                color: @pacific-50;
            }
        }

        &:focus,
        &.focus {
            border-style: solid;
            outline: thin dotted;
        }

        &:active,
        &.active {
            border-style: solid;
            border-color: @navy;

            .expandable_label,
            .expandable_link {
                color: @navy;
            }
        }
    });

}

.expandable_header-left {
  width: 78%;
}

.expandable_header-right {
  width: 22%;
  text-align: right;
}

// TODO: After merging into cf-expandables, this variable can be removed.
@expandable-group-divider: darken(#895983, 15%);
// TODO: If/when `border-bottom` is removed from `.expandable-group_header`
// the following override is not necessary.
.expandable-group_header {
    border-bottom: none;
}
// Adds top border to expandable item so expandables have top-border
// when header is absent.
// TODO: `.expandable-group_items` is non-standard,
// see https://github.com/cfpb/cf-expandables/issues/45
.expandable-group_items .expandable:first-child {
    border-top: 1px solid @expandable-group-divider;
}


/* topdoc
  name: Icon list modifier
  family: cfgov-cf-enhancements
  notes:
    - "Set up a list with icons on the left, in place of bullets."
  patterns:
    - name: Default example
      markup: |
        <ul class="list list__icons">
            <li class="list_item">
                <span class="cf-icon cf-icon-email list_icon"></span>
                <span class="list_text">List item 1</span>
            </li>
            <li class="list_item">
                <span class="cf-icon cf-icon-phone list_icon"></span>
                <span class="list_text">List item 2</span>
            </li>
            <li class="list_item">
                <span class="cf-icon cf-icon-fax list_icon"></span>
                <span class="list_text">List item 3</span>
            </li>
        </ul>
  tags:
    - cf-typography
*/

.list__icons {
    .list__unstyled();

    .list_icon,
    .list_text {
        display: table-cell;
    }

    .list_icon {
        width: 1.5em;
        .list__icons .list_icon__left();
    }
}


/* topdoc
  name: List icon left modifier
  family: cfgov-cf-enhancements
  notes:
    - "Left align the icons in an icon list."
  patterns:
    - name: Default example
      markup: |
        <ul class="list list__icons">
            <li class="list_item">
                <span class="cf-icon cf-icon-technology list_icon list_icon__left"></span>
                <span class="list_text">List item 1</span>
            </li>
            <li class="list_item">
                <span class="cf-icon cf-icon-phone list_icon list_icon__left"></span>
                <span class="list_text">List item 2</span>
            </li>
            <li class="list_item">
                <span class="cf-icon cf-icon-money list_icon list_icon__left"></span>
                <span class="list_text">List item 3</span>
            </li>
        </ul>
  tags:
    - cf-typography
*/

.list__icons {
    .list_icon__left {
        // TODO: Remove the !important once this lands in cf-typography.
        text-align: left !important;
    }
}

/* topdoc
  name: List icon center modifier
  family: cfgov-cf-enhancements
  notes:
    - "Center align the icons in an icon list."
  patterns:
    - name: Default example
      markup: |
        <ul class="list list__icons">
            <li class="list_item">
                <span class="cf-icon cf-icon-technology list_icon list_icon__center"></span>
                <span class="list_text">List item 1</span>
            </li>
            <li class="list_item">
                <span class="cf-icon cf-icon-phone list_icon list_icon__center"></span>
                <span class="list_text">List item 2</span>
            </li>
            <li class="list_item">
                <span class="cf-icon cf-icon-money list_icon list_icon__center"></span>
                <span class="list_text">List item 3</span>
            </li>
        </ul>
  tags:
    - cf-typography
*/

.list__icons {
    .list_icon__center {
        text-align: center;
    }
}

/* topdoc
  name: List icon right modifier
  family: cfgov-cf-enhancements
  notes:
    - "Right align the icons in an icon list."
  patterns:
    - name: Default example
      markup: |
        <ul class="list list__icons">
            <li class="list_item list_icon__right">
                <span class="cf-icon cf-icon-technology list_icon"></span>
                <span class="list_text">List item 1</span>
            </li>
            <li class="list_item list_icon__right">
                <span class="cf-icon cf-icon-phone list_icon"></span>
                <span class="list_text">List item 2</span>
            </li>
            <li class="list_item list_icon__right">
                <span class="cf-icon cf-icon-money list_icon"></span>
                <span class="list_text">List item 3</span>
            </li>
        </ul>
  tags:
    - cf-typography
*/

.list__icons {
    .list_icon__right {
        text-align: right;
        padding-right: .5em;
    }
}


/* topdoc
  name: Download links list
  family: cfgov-cf-enhancements
  patterns:
    codenotes:
        - ".list__download();"
    notes:
        - "Styles a list of links with associated download icons."
  tags:
    - cf-typography
*/
.list__download() {
    ul {
        .list__links();
        .list__icons();

        // TODO: Check if `left` could be used instead,
        // like what is done with the jump-links.
        // Optical offset for left-aligning list with text.
        margin-left: unit( 2px / @base-font-size-px, em );

        li {
            .list__links .list_item();
            .list__icons .list_item();
        }

        a {
            .list_link();
            .jump-link();

            // Override jump-link optical offset value.
            left: 0;

            span {
                .list__icons .list_text();
            }

            &:before {
                .cf-icon();
                .list__icons .list_icon();
                content: "\e406";
                color: @pacific;
            }
        }

        // Remove the bottom border on all but the last
        // link when at mobile sizes, so that the top and bottom
        // dotted borders don't double-up to 2px width.
        // Does not work in IE8.
        :not(:last-child) {
            a {
                .respond-to-max(599px, {
                    border-bottom: none;
                });
            }
        }

    }
}

/* topdoc
  name: Steps list modifier
  family: cfgov-cf-enhancements
  notes:
    - "Set up a list with 'Step x:' instead of bullets "
  patterns:
    - name: Default example
      markup: |
        <ol class="list list__steps short-desc">
            <li class="list-item">Fill out the form</li>
            <li class="list-item">Generate a PDF</li>
            <li class="list-item">Email, fax or mail the PDF</li>
        </ol>
  tags:
    - cf-typography
*/

.list__steps {
    padding-left: 0;
    counter-reset: item;
    list-style: none;

    .list-item {
        position: relative;

        &::before {
            content: "Step " counter(item) ": ";
            counter-increment: item;
        }
    }
}


/* topdoc
  name: Full Width Buttons
  family: cf-enhancements
  notes:
    - "Modifier to buttons full width at small screen sizes"
  patterns:
    - name: Default example
      markup: |
        <btn class="btn btn__full">Button Text</btn>
  tags:
    - cf-buttons
*/

.btn__full {

    .respond-to-max(@mobile-max , {
        display: block;
        width: 100%;

        + .btn__full {
            margin-left: initial;
        }
    });
}


/* topdoc
  name: Block
  family: cf-layout
    - name: Border modifier
      markup: |
        Main content...
        <div class="block block__border">
            Content block with borders on all sides.
        </div>
      codenotes:
        - .block.block__border
      notes:
        - "Adds border on all sides to .block."
    - name: Border-left modifier
      markup: |
        Main content...
        <div class="block block__border-left">
            Content block with left border.
        </div>
      codenotes:
        - .block.block__border-left
      notes:
        - "Adds left border to .block."
    - name: Border-right modifier
      markup: |
        Main content...
        <div class="block block__border-right">
            Content block with right border.
        </div>
      codenotes:
        - .block.block__border-right
      notes:
        - "Adds right border to .block."
  tags:
    - cf-layout
*/
@block__border: #BABBBD; // Gray 50%
.block {
  &__border {
    border: 1px solid @block__border;
  }

  &__border-left {
    border-left: 1px solid @block__border;
  }

  &__border-right {
    border-right: 1px solid @block__border;
  }
}


/* topdoc
  name: Warning
  family: cf-forms
  notes:
    - "Adds Warning state to form fields"
  tags:
    - cf-forms
*/

@input-warning:     @gold;

input[type="text"],
input[type="search"],
input[type="email"],
input[type="url"],
input[type="tel"],
input[type="number"],
select[multiple],
textarea {
    &.warning {
        border: 1px solid @input-warning;
        outline: 1px solid @input-warning;
    }
}

.warning + .@{cf-forms_input-icon-class} {
    color: @input-warning;
}


/* topdoc
  name: Long Input
  family: cf-forms
  patterns:
    - name: .input__long
      markup: |
        <div class="form-l_col form-l_col-1-2">
            <label class="form-label-header">
                First name
            </label>
            <input type="text" class="input__long">
        </div>

      notes:
        - "An input that fills the space it is given by the layout."
  tags:
    - cf-forms
*/

.input__long {
    &[type="text"],
    &[type="search"],
    &[type="email"],
    &[type="url"],
    &[type="tel"],
    &[type="number"] {
        width: 100%;
        box-sizing: border-box;
    }

    &.custom-select {
        width: 100%;
        box-sizing: border-box;
  }
}

textarea.input__long {
    width: 100%;
    box-sizing: border-box;
    height: 10em;
}

/* topdoc
  name: Reset all
  family: cf-core
  patterns:
    - name: .u-reset
      markup: |
        <fieldset class="u-reset">
        </fieldset>
      notes:
        - "A class to remove any default spacing or borders on an element."
  tags:
    - cf-utilities
*/

.u-reset {
    border: 0;
    margin: 0;
    padding: 0;
}

/* topdoc
  name: Hide only when JS is active
  family: cf-core
  patterns:
    - name: .js-is-hidden
      markup: |
        <fieldset class="js-reveal-with-js-class u-hide-js-only">
        </fieldset>
      notes:
        - "A class to hide only when JS is active."
  tags:
    - cf-utilities
*/

.js-is-hidden {
  display: none !important;
  .no-js & {
        display: block;
    }
}


/* topdoc
  name: Disabled link
  family: cf-core
  patterns:
    - name: Utility class
      markup: |
        <a class="u-link__disabled">
          This link is disabled.
        </div>
      codenotes:
        - .u-link__disabled;
      notes:
        - "Use this as a general class to give links disabled styling.
           Sets the color,
           removes the border and sets the cursor to not-allowed"
  tags:
    - cf-core
*/
.u-link__disabled {
  color: @gray-50 !important;
  border: none !important;
  cursor: not-allowed !important;
}


/* topdoc
  name: Half top padding
  family: cf-layout
  patterns:
    -name: .content__half-top-on-desk
    markup: |
      <aside class="content_sidebar content__half-top-on-desk">
        <!-- sidebar components -->
      </aside>
      <div class="content_main content__half-top-on-desk">
        <!-- main content components -->
      </div>
  tags: cf-layout
*/
.content__half-top-on-desk {
    // A new breakpoint needs to be added to Capital Framework
    // before we port this
    .respond-to-min(@desktop-min, {
        padding-top: 20px;

        &:after {
          top: 20px !important;
        }
    });
}


/* topdoc
  name: Inset divider
  family: cf-layout
  patterns:
    - name: .content-l_col__before-inset-divider (modifier)
      markup: |
        <div class="content-l content-l__large-gutters">
            <div class="content-l_col content-l_col-1-2">
                <img src="http://placekitten.com/600/320" alt="Placeholder image">
                <br>
                Half-width column (spans 6/12 columns)
            </div>
            <div class="content-l_col content-l_col-1-2 content-l_col__before-inset-divider">
                <img src="http://placekitten.com/600/320" alt="Placeholder image">
                <br>
                Half-width column (spans 6/12 columns)
            </div>
        </div>
        <br>
        <!-- Starting a new .content-l so that the dividers from
             .content-l_col.content-l_col-1-2.content-l_col__before-inset-divider
             won't overlap the .content-l_col-1-3 columns. -->
        <div class="content-l content-l__large-gutters">
            <div class="content-l_col content-l_col-1-3">
                Third-width column (spans 4/12 columns)
            </div>
            <div class="content-l_col content-l_col-1-3 content-l_col__before-inset-divider">
                Third-width column (spans 4/12 columns)
            </div>
            <div class="content-l_col content-l_col-1-3 content-l_col__before-inset-divider">
                Third-width column (spans 4/12 columns)
            </div>
        </div>
      codenotes:
        - .content-l_col__before-inset-divider
      notes:
        - "A border between columns with a gap at the top."
  tags:
    - cf-layout
*/
.content-l_col__before-inset-divider.content-l_col-1-2 {
    .respond-to-min(@tablet-min, {
        .grid_column__left-divider();
        &:before {
          top: @grid_gutter-width;
        }
     });
}

.content-l_col__before-inset-divider.content-l_col-1-3 {
    .respond-to-min(@tablet-min, {
        .grid_column__left-divider();
        &:before {
          top: @grid_gutter-width;
        }
    });
}

/* topdoc
    name: EOF
    eof: true
*/
