# Default values for cfgov.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: cfgov_python
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

#commad:
#  - "./docker-entrypoint.sh"
#args:
#  - "some arg"

initContainer:
  command:
    - "./docker-entrypoint.sh"
#  args:
#    - "bash"
#    - "-c"
#    - >-
#      django-admin opensearch index --force rebuild &&
#      django-admin opensearch document --force --refresh index

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: cfgov.localhost
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
#    - secretName: cfgov-tls
#      hosts:
#        - cfgov.localhost

mapping:
  enabled: false

environmentName: dev-internal

fqdnOverride: ""

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

extraEnvs: []

volumes: []

docs:
  enabled: false
  replicaCount: 1

  image:
    repository: cfgov_docs
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  podAnnotations: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    className: ""
    annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
  #   cpu: 100m
  #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  extraEnvs: []

  volumes: []

importDbPath: ""

cronJobs:
#  - name: "example"
#    includeEnv: true  # includes the same volumes and environment variables as the main application container
#    image:  # ONLY if different from chart image, default is chart image
#      repository: "busybox"
#      tag: "latest"
#    schedule: "@daily"  # default
#    suspend: false  # default
#    restartPolicy: OnFailure  # default
#    command:
#      - "some-exec"
#    args:
#      - "space"
#      - "separated"
#      - "arguments"
#    env:  # environment variables for this cronjob (does not affect includeEnv), default is not defined
#      - name: A_CRONJOB_ENV
#        value: "A_CRONJOB_ENV_VALUE"

  - name: "clearSessions"
    schedule: "@weekly"
    command:
      - "django-admin"
    args:
      - "clearsessions"
  - name: "publish-scheduled-pages"
    schedule: '* * * * *' # every minute
    command:
      - "django-admin"
    args:
      - "publish_scheduled_pages"
  - name: "elasticsearch-Rebuild-Index"
    schedule: "@daily"
    command:
      - "bash"
    args:
      - "-c"
      - >-
        django-admin opensearch index --force rebuild &&
        django-admin opensearch document --force --refresh index
    suspend: true
  - name: "dump-Postgres-DB"
    schedule: "@daily"
    command:
      - "bash"
    args:
      - "-c"
      - "pg_dump --no-owner --no-privileges | gzip > test.sql.gz"
    suspend: true



postgresql:
  enabled: false

opensearch:
  enabled: false

opensearch-dashboards:
  enabled: false

elasticsearch:
  enabled: false
  externalHostname: ""  # AWS OpenSearch

kibana:
  enabled: false

# search is used when not deploying ES/OS via chart. Ergo, external to k8s
search:
  # schema: http
  host: ""
  # port: 9200
