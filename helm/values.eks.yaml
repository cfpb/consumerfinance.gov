# Default values for cfgov.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

tests:
  enabled: false

localDeployment: false

initContainers:
  - name: cfgov-migrations
    image: 
      repository: cfgov
      pullPolicy: Always
      tag: "latest"
    env:
      - name: DATABASE_URL
        value: "postgres://cfpb:cfpb@cfgov-postgresql:5432/cfgov"
      - name: SECRET_KEY
        value: "cfgov"
      - name: ES_HOST
        value: "opensearch-cluster-master"
      - name: ES_PORT
        value: "9200"
      - name: ES_USER
        value: ""
      - name: ES_PASS
        value: ""
    command: 
      - 'sh'
      - '-c'
      - 'python cfgov/manage.py migrate && ./index.sh'
    resources:
      limits:
        cpu: 500m
        memory: 1000Mi
      requests:
        cpu: 200m
        memory: 200Mi
      

containers:
  - name: cfgov
    image: 
      repository: cfgov
      pullPolicy: IfNotPresent
      tag: "latest" 
    port: 8000
    readinessProbe:
      httpGet:
        path: /
        port: http
      initialDelaySeconds: 10
      periodSeconds: 5
      timeoutSeconds: 1
      failedThreshold: 3
    env:
    - name: DATABASE_URL
      value: "postgres://cfpb:cfpb@cfgov-postgresql:5432/cfgov"
    - name: SECRET_KEY
      value: "cfgov"
    - name: ES_HOST
      value: "opensearch-cluster-master"
    - name: ES_PORT
      value: "9200"
    - name: ES_USER
      value: ""
    - name: ES_PASS
      value: ""
    - name: enable_sso
      value: ""
    - name: oidc_rp_client_id 
      value: ""
    - name: oidc_rp_client_secret 
      value: ""
    - name: oidc_rp_sign_algo
      value: ""
    - name: oidc_op_jwks_endpoint 
      value: ""
    - name: oidc_op_authorization_endpoint 
      value: ""
    - name: oidc_op_token_endpoint
      value: ""
    - name: oidc_op_user_endpoint 
      value: ""
    - name: oidc_op_admin_role 
      value: ""
    resources:
      limits:
        cpu: 100m
        memory: 400Mi
      requests:
        cpu: 40m
        memory: 200Mi
    volumeMounts:
    - name: cfgov-tmp
      mountPath: /tmp 
  - name: cfgov-apache
    image: 
      repository: cfgov-apache
      pullPolicy: IfNotPresent
      tag: "latest"
    port: 8080
    resources:
      limits:
        cpu: 60m
        memory: 100Mi
      requests:
        cpu: 20m
        memory: 50Mi
    volumeMounts:
    - name: apache-logs
      mountPath: /usr/local/apache2/logs

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {"app.kubernetes.io/name": "cfgov"}

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsUser: 1000
  seccompProfile:
    type: RuntimeDefault

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8080
  targetPort: 8080

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 100m
    memory: 400Mi
  requests:
    cpu: 40m
    memory: 200Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

volumes:
  - name: apache-logs
    emptyDir: {}
  - name: cfgov-tmp
    emptyDir: {}

mapping:
  enabled: true
  host: "cfgov.localhost"
  ambassador_id:
    - "--apiVersion-v3alpha1-only--default"
  prefix: "/"

opensearch:
  enabled: false

postgresql:
  enabled: false 



