name: backend

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "**.py"
      - "requirements/**.txt"
      - "**.html"
      - "**.mo"
      - "**.po"
  merge_group:
  push:
    branches:
      - main

jobs:
  backend:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        toxenv:
          - lint
          - validate-migrations
          - validate-assets
          - validate-translations
          - unittest

    services:
      postgres:
        # https://help.github.com/en/actions/configuring-and-managing-workflows/creating-postgresql-service-containers
        # https://github.com/actions/example-services/blob/master/.github/workflows/postgres-service.yml
        image: postgres:17
        env:
          POSTGRES_USER: cfpb
          POSTGRES_PASSWORD: cfpb
          POSTGRES_DB: cfgov
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      elasticsearch:
        image: elasticsearch:7.10.1
        ports:
          - 9200/tcp
        options: -e="discovery.type=single-node" --health-cmd="curl http://localhost:9200/_cluster/health" --health-interval=10s --health-timeout=5s --health-retries=10

    steps:
      - uses: actions/checkout@v4

      - name: Check cache for gettext
        id: cache-gettext
        if: matrix.toxenv == 'validate-translations'
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/gettext-install
          key: ${{ runner.os }}-gettext-0.25

      - name: Install gettext for translations
        if: matrix.toxenv == 'validate-translations'
        run: |
          if [ "${{ steps.cache-gettext.outputs.cache-hit }}" != "true" ]; then
            curl -LO https://ftp.gnu.org/pub/gnu/gettext/gettext-0.25.tar.gz
            tar xzvf gettext-0.25.tar.gz
            cd gettext-0.25
            ./configure --prefix=${{ github.workspace }}/gettext-install
            make -j$(nproc)
            make install
          fi

          # Always add gettext to path, whether built or restored from cache.
          echo "${{ github.workspace }}/gettext-install/bin" >> $GITHUB_PATH
          echo "LD_LIBRARY_PATH=${{ github.workspace }}/gettext-install/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.8

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "24.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/ci.txt

      - name: Run tox -e ${{ matrix.toxenv }}
        run: |
          tox -e ${{ matrix.toxenv }}
        env:
          TEST_RUNNER: core.testutils.runners.StdoutCapturingTestRunner
          ES_PORT: ${{ job.services.elasticsearch.ports[9200] }}

      - name: Prepare test coverage
        if: matrix.toxenv == 'unittest'
        run: coverage xml

      - name: Store test coverage
        # Submit coverage from our prefered tox run only
        if: matrix.toxenv == 'unittest'
        uses: actions/upload-artifact@v4
        with:
          name: backend_coverage
          path: ./coverage.xml

  coverage:
    runs-on: ubuntu-latest
    needs:
      - backend

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/ci.txt

      - name: Retrieve backend coverage
        uses: actions/download-artifact@v4
        with:
          name: backend_coverage
          path: backend_coverage

      - name: Check backend test coverage
        run: |
          diff-cover backend_coverage/coverage.xml --compare-branch=origin/main --fail-under=100
