name: backend

on: pull_request

jobs:

  backend:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        toxenv:
          - lint
          - validate-migrations
          - validate-assets
          - validate-translations
          - unittest

    services:
      postgres:
        # https://help.github.com/en/actions/configuring-and-managing-workflows/creating-postgresql-service-containers
        # https://github.com/actions/example-services/blob/master/.github/workflows/postgres-service.yml
        image: postgres
        env:
          POSTGRES_USER: cfpb
          POSTGRES_PASSWORD: cfpb
          POSTGRES_DB: cfgov
        ports:
        - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      elasticsearch:
        image: elasticsearch:7.10.1
        ports:
        - 9200/tcp
        options: -e="discovery.type=single-node" --health-cmd="curl http://localhost:9200/_cluster/health" --health-interval=10s --health-timeout=5s --health-retries=10

    steps:
      - uses: actions/checkout@v2.3.4
      - uses: dorny/paths-filter@v2.10.2
        id: filter
        with:
          filters: |
            backend:
              - '**.py'
              - 'requirements/**.txt'
              - '**.html'
              - '**.mo'
              - '**.po'

      - name: Install gettext for translation validation
        if: steps.filter.outputs.backend == 'true' && matrix.toxenv == 'validate-translations'
        run: sudo apt-get install gettext

      - name: Set up Python
        uses: actions/setup-python@v2.2.2
        if: steps.filter.outputs.backend == 'true'
        with:
          python-version: 3.6

      - name: Install dependencies
        if: steps.filter.outputs.backend == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/ci.txt

      - name: Run tox -e ${{ matrix.toxenv }}
        if: steps.filter.outputs.backend == 'true'
        run: |
          tox -e ${{ matrix.toxenv }}
        env:
          TEST_RUNNER: core.testutils.runners.StdoutCapturingTestRunner
          ES_PORT: ${{ job.services.elasticsearch.ports[9200] }}

      - name: Prepare test coverage
        if: steps.filter.outputs.backend == 'true' && matrix.toxenv == 'unittest'
        run: coverage xml

      - name: Store test coverage
        # Submit coverage from our prefered tox run only
        if: steps.filter.outputs.backend == 'true' && matrix.toxenv == 'unittest'
        uses: actions/upload-artifact@v2.2.4
        with:
          name: backend_coverage
          path: ./coverage.xml

  coverage:
    runs-on: ubuntu-latest
    needs:
      - backend

    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - uses: dorny/paths-filter@v2.10.2
        id: filter
        with:
          filters: |
            backend:
              - '**.py'
              - 'requirements/**.txt'
              - '**.html'

      - name: Set up Python
        uses: actions/setup-python@v2.2.2
        if: steps.filter.outputs.backend == 'true'
        with:
          python-version: 3.6

      - name: Install dependencies
        if: steps.filter.outputs.backend == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/ci.txt

      - name: Retrieve backend coverage
        if: steps.filter.outputs.backend == 'true'
        uses: actions/download-artifact@v2.0.10
        with:
          name: backend_coverage
          path: backend_coverage

      - name: Check backend test coverage
        if: steps.filter.outputs.backend == 'true'
        run: |
          diff-cover backend_coverage/coverage.xml --compare-branch=origin/main --fail-under=100
