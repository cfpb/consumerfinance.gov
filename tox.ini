[tox]
skipsdist=True
tox_pip_extensions_ext_venv_update=True
# Run these envs when tox is invoked without -e
envlist=lint-py{27}, unittest-py{27}-dj{18}-wag{113}-slow


[testenv]
# Factored env for running most things with a matrix of Python, Django, and
# Wagtail versions. Configuration of individual top-level factors like lint
# and unittest is done in their respective configuration sections below.
#
# Factors:
#   lint:               Lint Python files with flake8 and isort
#   unittest:           Run Python unittests
#   missing-migrations: Test for missing Django migrations
#   acceptance:         Run a Django server and acceptance tests
#   py27:               Use Python 2.7
#   py36:               Use Python 3.6
#   dj18:               Use Django 1.8
#   dj111:              Use Django 1.11
#   dj20:               Use Django 2.0
#   wag113:             Use Wagtail 1.13
#   wag20:              Use Wagtail 2.0
#
# These factors are expected to combine into the follow generative environments:
#
#   lint-py{27,36}
#   unittest-py{27,36}-dj{18,110}-wag{113}-{fast,slow}
#   unittest-py{36}-dj{20}-wag{20}-{fast,slow}
#   missing-migrations-py{27,36}-dj{18,110}-wag{113}
#   acceptance-py{27,36}-dj{18,110}-wag{113}-fast
#
# These factors are expected to combine to be invoked with:
#
#   tox -e lint-py27
#   tox -e lint-py36
#   tox -e unittest-py27-dj18-wag113-fast
#   tox -e unittest-py27-dj18-wag113-slow
#   tox -e unittest-py27-dj111-wag113-fast
#   tox -e unittest-py27-dj111-wag113-slow
#   tox -e unittest-py36-dj18-wag113-fast
#   tox -e unittest-py36-dj18-wag113-slow
#   tox -e unittest-py36-dj111-wag113-fast
#   tox -e unittest-py36-dj111-wag113-slow
#   tox -e unittest-py36-dj20-wag20-fast
#   tox -e unittest-py36-dj20-wag20-slow
#   tox -e missing-migrations-py27-dj18-wag113
#   tox -e missing-migrations-py27-dj111-wag113
#   tox -e missing-migrations-py36-dj18-wag113
#   tox -e missing-migrations-py36-dj111-wag113
#   tox -e acceptance-py27-dj18-wag113-fast
#   tox -e acceptance-py27-dj111-wag113-fast
#   tox -e acceptance-py36-dj18-wag113-fast
#   tox -e acceptance-py36-dj111-wag113-fast

recreate=False

whitelist_externals=echo

changedir=
    unittest:           {[unittest]changedir}
    acceptance:         {[acceptance]changedir}
    missing-migrations: {[missing-migrations]changedir}

basepython=
    py27: python2.7
    py36: python3.6

deps=
    dj18:               Django>=1.8,<1.9
    dj111:              Django>=1.11,<1.12
    dj20:               Django>=2.0,<2.1
    wag113:             wagtail>=1.13,<1.14
    wag20:              wagtail>=2.0,<2.1
    lint:               {[lint]deps}
    unittest:           {[unittest]deps}
    acceptance:         {[acceptance]deps}
    missing-migrations: {[missing-migrations]deps}

passenv=
    fast:       {[unittest]passenv}
    slow:       {[unittest]passenv}
    unittest:   {[unittest]passenv}
    acceptance: {[acceptance]passenv}

setenv=
    fast:               {[fast]setenv}
    slow:               {[slow]setenv}
    missing-migrations: {[missing-migrations]setenv}
    unittest:           {[unittest]setenv}
    acceptance:         {[acceptance]setenv}

commands=
    lint:               {[lint]commands}
    unittest:           {[unittest]commands}
    acceptance:         {[acceptance]commands}
    missing-migrations: {[missing-migrations]commands}


[lint]
# Configuration values necessary to lint Python files.
# Note: This is not an env will not run if invoked. Use an invocation of:
#
#   tox -e lint-py{27,36}
#
# To run Python linting.
deps=
    flake8
    isort
commands=
    flake8
    isort --check-only --diff --recursive cfgov


[unittest]
# Configuration values necessary to run unittests.
# Note: This is not an env will not run if invoked. Use an invocation of:
#
#   tox -e unittest-py{27,36}-dj{18,110,20}-wag{113,20}-{fast,slow}
#
# To run unit tests.
changedir=
    {toxinidir}/cfgov
passenv=
    TRAVIS TRAVIS_JOB_ID TRAVIS_BRANCH TEST_DATABASE_URL TEST_RUNNER
# BOTO_CONFIG exists here to work around an incompatability between
# boto and Travis CI
# https://github.com/travis-ci/travis-ci/issues/5246#issuecomment-166460882
# Set DJANGO_SETTINGS_MODULE based on {with,no}-migrations
setenv=
    GOVDELIVERY_ACCOUNT_CODE=fake_account_code
    DJANGO_STAGING_HOSTNAME=content.localhost
    BOTO_CONFIG=/bogus/value
    LANG=en_US.UTF-8
    LC_ALL=en_US.UTF-8
deps=
    -r{toxinidir}/requirements/libraries.txt
    -r{toxinidir}/requirements/mysql.txt
    -r{toxinidir}/requirements/postgres.txt
    -r{toxinidir}/requirements/test.txt
commands=
    coverage erase
    coverage run --source='.' manage.py test {posargs}


[fast]
# Configuration values necessary to run unittests without migrations.
# Note: This is not an env will not run if invoked. Use an invocation of:
#
#   tox -e unittest-py{27,36}-dj{18,110}-wag{113}-fast
#
# To run unit tests.
setenv=
    DJANGO_SETTINGS_MODULE=cfgov.settings.test_nomigrations


[slow]
# Configuration values necessary to run unittests with migrations.
# Note: This is not an env will not run if invoked. Use an invocation of:
#
#   tox -e unittest-py{27,36}-dj{18,110}-wag{113}-slow
#
# To run unit tests.
setenv=
    DJANGO_SETTINGS_MODULE=cfgov.settings.test


[missing-migrations]
# Configuration values necessary to run missing migrations test.
# Note: This is not an env will not run if invoked. Use an invocation of:
#
#   tox -e missing-migrations-py{27,36}-dj{18,110}-wag{113}
#
# To run unit tests.
changedir=
    {[unittest]changedir}
deps=
    {[unittest]deps}
setenv=
    DJANGO_SETTINGS_MODULE=cfgov.settings.test
commands=
    ./manage.py runscript missing_migrations
#     dj111: ./manage.py makemigrations --check


[acceptance]
# Configuration values necessary to run acceptance tests using same
# virtualenv as backend tests.
# Note: This is not an env will not run if invoked. Use an invocation of:
#
#   acceptance-py{27,36}-dj{18,110}-wag{113}-fast
#
# To run acceptance tests.
changedir=
    {[unittest]changedir}
deps=
    {[unittest]deps}
passenv=
    USER
    DISPLAY
    SAUCE_USERNAME
    SAUCE_ACCESS_KEY
    SAUCE_SELENIUM_URL
    SAUCE_TUNNEL
    TRAVIS
setenv=
    DJANGO_LIVE_TEST_SERVER_ADDRESS=localhost:9000-9010
    DJANGO_SETTINGS_MODULE=cfgov.settings.test_acceptance
commands=
    ./manage.py test {posargs}


## Standalone and past-friendly envs


[testenv:lint]
# Invoke with: tox -e lint
# This should run identically to tox -e lint-py27
recreate=False
basepython=python2.7
envdir={toxworkdir}/lint-py27
deps={[lint]deps}
commands={[lint]commands}


[testenv:fast]
# Invoke with: tox -e fast
# This should run identically to tox -e unittest-py27-dj18-wag113-fast
recreate=False
changedir={[unittest]changedir}
basepython=python2.7
envdir={toxworkdir}/unittest-py27-dj18-wag113-fast
deps=
    -r{toxinidir}/requirements/django.txt
    -r{toxinidir}/requirements/wagtail.txt
    {[unittest]deps}
setenv=
    {[fast]setenv}
    {[unittest]setenv}
commands={[unittest]commands}


[testenv:missing-migrations]
# Invoke with: tox -e missing-migrations
# This should run identically to tox -e unittest-py27-dj18-wag113-fast
recreate=False
changedir={[missing-migrations]changedir}
basepython=python2.7
envdir={toxworkdir}/unittest-py27-dj18-wag113-fast
deps=
    -r{toxinidir}/requirements/django.txt
    -r{toxinidir}/requirements/wagtail.txt
    {[missing-migrations]deps}
setenv=
    {[fast]setenv}
    {[missing-migrations]setenv}
commands={[missing-migrations]commands}


[testenv:acceptance]
recreate=False
changedir={[acceptance]changedir}
basepython=python2.7
envdir={toxworkdir}/acceptance-py27-dj18-wag113
deps=
    -r{toxinidir}/requirements/django.txt
    -r{toxinidir}/requirements/wagtail.txt
    {[acceptance]deps}
passenv={[acceptance]passenv}
setenv=
    acceptance: {[acceptance]setenv}
    LANG=en_US.UTF-8
    LC_ALL=en_US.UTF-8
commands={[acceptance]commands}


[testenv:validate-assets]
# Invoke with: tox -e validate-assets
# Ensure all assets are generated without error.
recreate=False
changedir={toxinidir}
basepython=python2.7
deps=
    -r{toxinidir}/requirements/base.txt
    -r{toxinidir}/requirements/optional-public.txt
setenv=
    DJANGO_SETTINGS_MODULE=cfgov.settings.production
    DJANGO_STATIC_ROOT={toxinidir}/collectstatic
    ALLOWED_HOSTS=["*"]
commands=
    {toxinidir}/frontend.sh production
    {toxinidir}/cfgov/manage.py collectstatic --noinput
